swagger: '2.0'
info:
  title: WRI Restoration Marketplace API
  description: |
    API General info: \n \n### About \n \nThis API serves the web and mobile apps for WRIs Restoration Marketplace (AKA TerraMatch). \n \n### Authorisation & Authentication \n \nJWTs are used for authentication. Upon successful log in a JWT will be provided for you. These expire after 12 hours. \n \n### Requests & Responses \n \nThe response bodies documented here will be wrapped in an object adhering to the JSON:API specification. \n \n### Error Codes \n \nAny errors returned in the body of a response will have a unique code to help identify the type of error. They are: \n \n \nACCEPTED, ACTIVE_URL, AFTER, AFTER_OR_EQUAL, ALPHA, ALPHA_DASH, ALPHA_NUM, ARRAY, ARRAY_ARRAY, ARRAY_OBJECT, BEFORE, BEFORE_OR_EQUAL, BETWEEN, BOOLEAN, CARBON_CERTIFICATION_TYPE, COMPLETE_PERCENTAGE, CONFIRMED, CONTAIN_LOWER, CONTAIN_NUMBER, CONTAIN_UPPER, CONTINENT, COUNTRY_CODE, CUSTOM, DATE, DATE_EQUALS, DATE_FORMAT, DIFFERENT, DIGITS, DIGITS_BETWEEN, DIMENSIONS, DISTINCT, DOCUMENT_TYPE, EMAIL, ENDS_WITH, EXISTS, FILE, FILE_EXTENSION_IS_CSV, FILE_IS_CSV_OR_UPLOADABLE, FILLED, FUNDING_BRACKET, FUNDING_SOURCE, GEO_JSON, GT, GTE, IMAGE, IN, IN_ARRAY, INTEGER, IP, IPV4, IPV6, JSON, LAND_OWNERSHIP, LAND_SIZE, LAND_TYPE, LT, LTE, MAX, MIMES, MIMETYPES, MIN, NOT_IN, NOT_PRESENT, NOT_REGEX, NUMERIC, OTHER_VALUE_PRESENT, OTHER_VALUE_NULL, OTHER_VALUE_STRING, ORGANISATION_CATEGORY, ORGANISATION_FILE_TYPE, ORGANISATION_TYPE, PRESENT, REGEX, REJECTED_REASON, REPORTING_FREQUENCY, REPORTING_LEVEL, REQUIRED, REQUIRED_IF, REQUIRED_UNLESS, REQUIRED_WITH, REQUIRED_WITH_ALL, REQUIRED_WITHOUT, REQUIRED_WITHOUT_ALL, RESTORATION_GOAL, RESTORATION_METHOD, REVENUE_DRIVER, SAME, SIZE, SOFT_URL, STARTS_WITH, STARTS_WITH_FACEBOOK, STARTS_WITH_TWITTER, STARTS_WITH_INSTAGRAM, STARTS_WITH_LINKEDIN, STRICT_FLOAT, STRING, SUSTAINABLE_DEVELOPMENT_GOAL, TERRAFUND_DISTURBANCE, TERRAFUND_LAND_TENURE, TERRAFUND_PROGRAMME_STATUS, TERRAFUND_NURSERY_TYPE, TERRAFUND_RESTORATION_METHOD, TIMEZONE, TREE_SPECIES_OWNER, UNIQUE, UPLOADED, URL, UUID, VISIBILITY \n``` \n \n### Uploads \n \nUploads should first be uploaded to the `/uploads` endpoint. Upon success an ID will be returned, this ID is valid for 1 day. Use this ID in your request body to bind the upload to a property. \n \n### Elevator Videos \n \nElevator videos can be created by using the `/elevator_videos` endpoint. After creating an elevator video you will be returned an elevator video ID. Use this to check its status. Elevator videos will start off as `processing` and change to `finished` when it has been build. Once the elevator video is built the `upload_id` property will be present, you can use this just like a regular upload and attach it to a pitch&#96;s `video` property. Be sure to use the elevator video&#96;s `upload_id` property and not its `id` property. An elevator video&#96;s status may end up as `errored` or `timed_out` in which case something has gone wrong. \n \n### Units \n \n* All prices are measured in USD \n* All land is measured in hectares \n* All time is measured in months \n* \n### Drafts \n \nWhen creating a draft the `data` property will be automatically populated with a skeleton object representing either an offer or a pitch. You can then manipulate the `data` property using [JSON Patch](http://jsonpatch.com/) requests. Operations are relative to the `data` property, which means you don&#96;t need to preface paths with `/data`.
  version: 1.0.0
host: '{{ HOST }}'
basePath: /api
schemes:
  - '{{ SCHEME }}'
securityDefinitions:
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
security:
  - BearerAuth: []
tags:
  - name: Admins
  - name: Auth
  - name: Carbon Certification Types
  - name: Carbon Certifications
  - name: Compatibility Scores
  - name: Continents
  - name: Countries
  - name: Devices
  - name: Document Types
  - name: Drafts
  - name: Edit History
  - name: Elevator Videos
  - name: Export
  - name: Forms
  - name: Files
  - name: Funding Brackets
  - name: Funding Programmes
  - name: Funding Sources
  - name: Interests
  - name: Land Ownerships
  - name: Land Sizes
  - name: Land Types
  - name: Matches
  - name: Media
  - name: Metrics
  - name: Notifications
  - name: Offers
  - name: Offer Contacts
  - name: Offer Documents
  - name: Organisations
  - name: Organisation Categories
  - name: Organisation Documents
  - name: Organisation Document Versions
  - name: Organisation Types
  - name: Organisation Versions
  - name: Pitches
  - name: Pitch Contacts
  - name: Pitch Documents
  - name: Pitch Versions
  - name: Programmes
  - name: Projects
  - name: Reporting Frequencies
  - name: Reporting Levels
  - name: Restoration Method Metrics
  - name: Revenue Drivers
  - name: Reports
  - name: Rejected Reasons
  - name: Restoration Methods
  - name: Restoration Goals
  - name: Sites
  - name: Sustainable Development Goals
  - name: Tasks
  - name: Team Members
  - name: Terrafund
  - name: Terrafund Nurseries
  - name: Terrafund Programmes
  - name: Terrafund Sites
  - name: Tree Species
  - name: Uploads
  - name: Users
  - name: V2 Admin
  - name: V2 Application
  - name: V2 Organisations
  - name: V2 Project Developer
  - name: V2 Users
  - name: Register
definitions:
  OfferVisibility:
    type: object
    properties:
      visibility:
        type: string
  PitchVisibility:
    type: object
    properties:
      visibility:
        type: string
  DraftCreate:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      due_submission_id:
        type: integer
      terrafund_due_submission_id:
        type: integer
      is_from_mobile:
        type: boolean
  DraftMerge:
    type: object
    properties:
      draft_ids:
        type: array
        items:
          type: integer
      type:
        type: string
  DraftDataRead:
    type: object
    properties:
      offer:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          land_types:
            type: array
            items:
              type: string
          land_ownerships:
            type: array
            items:
              type: string
          land_size:
            type: string
          land_continent:
            type: string
          land_country:
            type: string
          restoration_methods:
            type: array
            items:
              type: string
          restoration_goals:
            type: array
            items:
              type: string
          funding_sources:
            type: array
            items:
              type: string
          funding_amount:
            type: integer
          funding_bracket:
            type: string
          price_per_tree:
            type: number
            format: float
          long_term_engagement:
            type: boolean
          reporting_frequency:
            type: string
          reporting_level:
            type: string
          sustainable_development_goals:
            type: array
            items:
              type: string
          cover_photo:
            type: string
          video:
            type: string
      offer_contacts:
        type: array
        items:
          type: object
          properties:
            user_id:
              type: integer
            team_member_id:
              type: integer
      offer_documents:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            document:
              type: string
      pitch:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          land_types:
            type: array
            items:
              type: string
          land_ownerships:
            type: array
            items:
              type: string
          land_size:
            type: string
          land_continent:
            type: string
          land_country:
            type: string
          land_geojson:
            type: string
          restoration_methods:
            type: array
            items:
              type: string
          restoration_goals:
            type: array
            items:
              type: string
          funding_sources:
            type: array
            items:
              type: string
          funding_amount:
            type: integer
          funding_bracket:
            type: string
          revenue_drivers:
            type: array
            items:
              type: string
          estimated_timespan:
            type: integer
          long_term_engagement:
            type: boolean
          reporting_frequency:
            type: string
          reporting_level:
            type: string
          sustainable_development_goals:
            type: array
            items:
              type: string
          cover_photo:
            type: string
          video:
            type: string
          problem:
            type: string
          anticipated_outcome:
            type: string
          who_is_involved:
            type: string
          local_community_involvement:
            type: boolean
          training_involved:
            type: boolean
          training_type:
            type: string
          training_amount_people:
            type: integer
          people_working_in:
            type: string
          people_amount_nearby:
            type: integer
          people_amount_abroad:
            type: integer
          people_amount_employees:
            type: integer
          people_amount_volunteers:
            type: integer
          benefited_people:
            type: integer
          future_maintenance:
            type: string
          use_of_resources:
            type: string
      pitch_contacts:
        type: array
        items:
          type: object
          properties:
            user_id:
              type: integer
            team_member_id:
              type: integer
      pitch_documents:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            document:
              type: string
      carbon_certifications:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            other_value:
              type: string
            link:
              type: string
      restoration_method_metrics:
        type: array
        items:
          type: object
          properties:
            restoration_method:
              type: string
            experience:
              type: integer
            land_size:
              type: number
              format: float
            price_per_hectare:
              type: number
              format: float
            biomass_per_hectare:
              type: number
              format: float
            carbon_impact:
              type: number
              format: float
            species_impacted:
              type: array
              items:
                type: string
      tree_species:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            is_native:
              type: boolean
            count:
              type: integer
            price_to_plant:
              type: number
              format: float
            price_to_maintain:
              type: number
              format: float
            saplings:
              type: number
              format: float
            site_prep:
              type: number
              format: float
            survival_rate:
              type: integer
            produces_food:
              type: boolean
            produces_firewood:
              type: boolean
            produces_timber:
              type: boolean
            owner:
              type: string
            season:
              type: string
  DraftDataReadTreeSpecies:
    type: object
    properties:
      name:
        type: string
      is_native:
        type: boolean
      count:
        type: integer
      price_to_plant:
        type: number
        format: float
      price_to_maintain:
        type: number
        format: float
      saplings:
        type: number
        format: float
      site_prep:
        type: number
        format: float
      survival_rate:
        type: integer
      produces_food:
        type: boolean
      produces_firewood:
        type: boolean
      produces_timber:
        type: boolean
      owner:
        type: string
      season:
        type: string
  DraftDataReadOfferContacts:
    type: object
    properties:
      user_id:
        type: integer
      team_member_id:
        type: integer
  DraftDataReadOfferDocuments:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: string
  DraftDataReadPitchDocuments:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: string
  DraftDataReadCarbonCertifications:
    type: object
    properties:
      type:
        type: string
      other_value:
        type: string
      link:
        type: string
  DraftDataReadRestorationMethodMetrics:
    type: object
    properties:
      restoration_method:
        type: string
      experience:
        type: integer
      land_size:
        type: number
        format: float
      price_per_hectare:
        type: number
        format: float
      biomass_per_hectare:
        type: number
        format: float
      carbon_impact:
        type: number
        format: float
      species_impacted:
        type: array
        items:
          type: string
  DraftDataReadPitchContacts:
    type: object
    properties:
      user_id:
        type: integer
      team_member_id:
        type: integer
  DraftDataReadPitch:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      land_geojson:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      revenue_drivers:
        type: array
        items:
          type: string
      estimated_timespan:
        type: integer
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: string
      video:
        type: string
      problem:
        type: string
      anticipated_outcome:
        type: string
      who_is_involved:
        type: string
      local_community_involvement:
        type: boolean
      training_involved:
        type: boolean
      training_type:
        type: string
      training_amount_people:
        type: integer
      people_working_in:
        type: string
      people_amount_nearby:
        type: integer
      people_amount_abroad:
        type: integer
      people_amount_employees:
        type: integer
      people_amount_volunteers:
        type: integer
      benefited_people:
        type: integer
      future_maintenance:
        type: string
      use_of_resources:
        type: string
  DraftDataReadOffer:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      price_per_tree:
        type: number
        format: float
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: string
      video:
        type: string
  DraftRead:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        type: string
      is_from_mobile:
        type: boolean
      completed_elsewhere:
        type: boolean
      data:
        $ref: '#/definitions/DraftDataRead'
      created_at:
        type: string
        format: date-time
      created_by:
        type: integer
      updated_at:
        type: string
        format: date-time
      updated_by:
        type: integer
  DraftUpdate:
    type: object
    properties:
      op:
        type: string
      path:
        type: string
      value:
        type: string
  DraftUpdateAll:
    type: array
    items:
      $ref: '#/definitions/DraftUpdate'
  DraftReadAll:
    type: array
    items:
      $ref: '#/definitions/DraftRead'
  ElevatorVideoRead:
    type: object
    properties:
      id:
        type: integer
      upload_id:
        type: integer
      preview:
        type: string
      status:
        type: string
      uploaded_at:
        type: string
        format: date-time
  ElevatorVideoCreate:
    type: object
    properties:
      introduction:
        type: integer
      aims:
        type: integer
      importance:
        type: integer
  DeviceReadAll:
    type: array
    items:
      $ref: '#/definitions/DeviceRead'
  DeviceRead:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      os:
        type: string
      uuid:
        type: string
      push_token:
        type: string
      created_at:
        type: string
        format: date-time
  DeviceCreate:
    type: object
    properties:
      os:
        type: string
      uuid:
        type: string
      push_token:
        type: string
  DeviceUpdate:
    type: object
    properties:
      uuid:
        type: string
      push_token:
        type: string
  MatchReadAll:
    type: array
    items:
      $ref: '#/definitions/MatchRead'
  MatchRead:
    type: object
    properties:
      id:
        type: integer
      offer_id:
        type: integer
      offer_name:
        type: string
      offer_interest_id:
        type: integer
      offer_contacts:
        type: array
        items:
          $ref: '#/definitions/MatchOfferContactRead'
      pitch_id:
        type: integer
      pitch_name:
        type: string
      pitch_interest_id:
        type: integer
      pitch_contacts:
        type: array
        items:
          $ref: '#/definitions/MatchPitchContactRead'
      monitoring_id:
        type: integer
      matched_at:
        type: string
        format: date-time
  MatchPitchContactRead:
    type: object
    properties:
      id:
        type: integer
      model:
        type: string
      pitch_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      avatar:
        type: string
      email_address:
        type: string
      phone_number:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
  MatchOfferContactRead:
    type: object
    properties:
      id:
        type: integer
      model:
        type: string
      offer_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      avatar:
        type: string
      email_address:
        type: string
      phone_number:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
  CarbonCertificationCreate:
    type: object
    properties:
      pitch_id:
        type: integer
      type:
        type: string
      other_value:
        type: string
      link:
        type: string
  CarbonCertificationRead:
    type: object
    properties:
      id:
        type: integer
      pitch_id:
        type: integer
      type:
        type: string
      other_value:
        type: string
      link:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  CarbonCertificationReadAll:
    type: array
    items:
      $ref: '#/definitions/CarbonCertificationRead'
  CarbonCertificationUpdate:
    type: object
    properties:
      type:
        type: string
      other_value:
        type: string
      link:
        type: string
  NotificationRead:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      title:
        type: string
      body:
        type: string
      action:
        type: string
      referenced_model:
        type: string
      referenced_model_id:
        type: integer
      unread:
        type: boolean
      created_at:
        type: string
        format: date-time
  NotificationReadAll:
    type: array
    items:
      $ref: '#/definitions/NotificationRead'
  CarbonCertificationVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/CarbonCertificationRead'
  CarbonCertificationVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/CarbonCertificationVersionRead'
  CarbonCertificationVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  FundingBracketReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        bracket:
          type: string
  PitchDocumentCreate:
    type: object
    properties:
      pitch_id:
        type: integer
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  PitchDocumentRead:
    type: object
    properties:
      id:
        type: integer
      pitch_id:
        type: integer
      name:
        type: string
      type:
        type: string
      document:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  PitchDocumentReadAll:
    type: array
    items:
      $ref: '#/definitions/PitchDocumentRead'
  PitchDocumentUpdate:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  PitchDocumentVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/PitchDocumentRead'
  PitchDocumentVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/PitchDocumentVersionRead'
  PitchDocumentVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  RestorationMethodMetricCreate:
    type: object
    properties:
      pitch_id:
        type: integer
      restoration_method:
        type: string
      experience:
        type: integer
      land_size:
        type: number
        format: float
      price_per_hectare:
        type: number
        format: float
      biomass_per_hectare:
        type: number
        format: float
      carbon_impact:
        type: number
        format: float
      species_impacted:
        type: array
        items:
          type: string
  RestorationMethodMetricRead:
    type: object
    properties:
      id:
        type: integer
      pitch_id:
        type: integer
      restoration_method:
        type: string
      experience:
        type: integer
      land_size:
        type: number
        format: float
      price_per_hectare:
        type: number
        format: float
      biomass_per_hectare:
        type: number
        format: float
      carbon_impact:
        type: number
        format: float
      species_impacted:
        type: array
        items:
          type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RestorationMethodMetricReadAll:
    type: array
    items:
      $ref: '#/definitions/RestorationMethodMetricRead'
  RestorationMethodMetricUpdate:
    type: object
    properties:
      restoration_method:
        type: string
      experience:
        type: integer
      land_size:
        type: number
        format: float
      price_per_hectare:
        type: number
        format: float
      biomass_per_hectare:
        type: number
        format: float
      carbon_impact:
        type: number
        format: float
      species_impacted:
        type: array
        items:
          type: string
  RestorationMethodMetricVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/RestorationMethodMetricRead'
  RestorationMethodMetricVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/RestorationMethodMetricVersionRead'
  RestorationMethodMetricVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  TreeSpeciesCreate:
    type: object
    properties:
      pitch_id:
        type: integer
      name:
        type: string
      is_native:
        type: boolean
      count:
        type: integer
      price_to_plant:
        type: number
        format: float
      price_to_maintain:
        type: number
        format: float
      saplings:
        type: number
        format: float
      site_prep:
        type: number
        format: float
      survival_rate:
        type: integer
      produces_food:
        type: boolean
      produces_firewood:
        type: boolean
      produces_timber:
        type: boolean
      owner:
        type: string
      season:
        type: string
  CustomReportCreate:
    type: object
    properties:
      format:
        type: string
        description: 'this is for future use, currently only csv''s are generated.'
      exportable_type:
        type: string
        description: 'currently only programme, site, submission and site_submissions are supported'
      exportable_id:
        type: integer
      field_list:
        type: array
        description: list of the columns and file collections you want returned in the zip file
        items:
          type: string
      duration:
        type: integer
        description: 'the number of months you wish to restrict the report by. eg 3, 6 or 9. ommiting this will return everything. this is currently only relevant for submissions belonging to the site or programme.'
  TreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      pitch_id:
        type: integer
      name:
        type: string
      is_native:
        type: boolean
      count:
        type: integer
      price_to_plant:
        type: number
        format: float
      price_to_maintain:
        type: number
        format: float
      saplings:
        type: number
        format: float
      site_prep:
        type: number
        format: float
      survival_rate:
        type: integer
      produces_food:
        type: boolean
      produces_firewood:
        type: boolean
      produces_timber:
        type: boolean
      owner:
        type: string
      season:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/TreeSpeciesRead'
  TreeSpeciesUpdate:
    type: object
    properties:
      name:
        type: string
      is_native:
        type: boolean
      count:
        type: integer
      price_to_plant:
        type: number
        format: float
      price_to_maintain:
        type: number
        format: float
      saplings:
        type: number
        format: float
      site_prep:
        type: number
        format: float
      survival_rate:
        type: integer
      produces_food:
        type: boolean
      produces_firewood:
        type: boolean
      produces_timber:
        type: boolean
      owner:
        type: string
      season:
        type: string
  TreeSpeciesVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/TreeSpeciesRead'
  TreeSpeciesVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/TreeSpeciesVersionRead'
  TreeSpeciesVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  FilterSearch:
    type: object
    properties:
      page:
        type: integer
      sortAttribute:
        type: string
        enum:
          - created_at
          - compatibility_score
      sortDirection:
        type: string
        enum:
          - asc
          - desc
      filters:
        type: array
        items:
          $ref: '#/definitions/FilterCondition'
  FilterCondition:
    type: object
    properties:
      attribute:
        type: string
        enum:
          - land_types
          - land_ownerships
          - land_size
          - land_continent
          - restoration_methods
          - restoration_goals
          - funding_sources
          - funding_bracket
          - reporting_frequency
          - reporting_level
          - sustainable_development_goals
          - price_per_tree
      operator:
        type: string
        enum:
          - contains
          - in
          - between
          - boolean
      value:
        type: array
        items:
          type: string
  PitchCreate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      land_geojson:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      revenue_drivers:
        type: array
        items:
          type: string
      estimated_timespan:
        type: integer
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: integer
      video:
        type: integer
      problem:
        type: string
      anticipated_outcome:
        type: string
      who_is_involved:
        type: string
      local_community_involvement:
        type: boolean
      training_involved:
        type: boolean
      training_type:
        type: string
      training_amount_people:
        type: integer
      people_working_in:
        type: string
      people_amount_nearby:
        type: integer
      people_amount_abroad:
        type: integer
      people_amount_employees:
        type: integer
      people_amount_volunteers:
        type: integer
      benefited_people:
        type: integer
      future_maintenance:
        type: string
      use_of_resources:
        type: string
  PitchRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      land_geojson:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      revenue_drivers:
        type: array
        items:
          type: string
      estimated_timespan:
        type: integer
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      avatar:
        type: string
      cover_photo:
        type: string
      video:
        type: string
      problem:
        type: string
      anticipated_outcome:
        type: string
      who_is_involved:
        type: string
      local_community_involvement:
        type: boolean
      training_involved:
        type: boolean
      training_type:
        type: string
      training_amount_people:
        type: integer
      people_working_in:
        type: string
      people_amount_nearby:
        type: integer
      people_amount_abroad:
        type: integer
      people_amount_employees:
        type: integer
      people_amount_volunteers:
        type: integer
      benefited_people:
        type: integer
      future_maintenance:
        type: string
      use_of_resources:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      successful:
        type: boolean
      compatibility_score:
        type: integer
      price_per_tree:
        type: number
        format: float
      visibility:
        type: string
  PitchReadAll:
    type: array
    items:
      $ref: '#/definitions/PitchRead'
  PitchUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      land_geojson:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      revenue_drivers:
        type: array
        items:
          type: string
      estimated_timespan:
        type: integer
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: integer
      video:
        type: integer
      problem:
        type: string
      anticipated_outcome:
        type: string
      who_is_involved:
        type: string
      local_community_involvement:
        type: boolean
      training_involved:
        type: boolean
      training_type:
        type: string
      training_amount_people:
        type: integer
      people_working_in:
        type: string
      people_amount_nearby:
        type: integer
      people_amount_abroad:
        type: integer
      people_amount_employees:
        type: integer
      people_amount_volunteers:
        type: integer
      benefited_people:
        type: integer
      future_maintenance:
        type: string
      use_of_resources:
        type: string
  PitchVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/PitchRead'
  PitchVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/PitchVersionRead'
  PitchVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  Empty:
    type: object
  VisibilityReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        visibility:
          type: string
  RevenueDriverReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        driver:
          type: string
  LandTypeReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
  RestorationMethodReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        method:
          type: string
  OfferCreate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      price_per_tree:
        type: number
        format: float
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: integer
      video:
        type: integer
  OfferUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      price_per_tree:
        type: number
        format: float
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: integer
      video:
        type: integer
  OfferRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      name:
        type: string
      description:
        type: string
      land_types:
        type: array
        items:
          type: string
      land_ownerships:
        type: array
        items:
          type: string
      land_size:
        type: string
      land_continent:
        type: string
      land_country:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      restoration_goals:
        type: array
        items:
          type: string
      funding_sources:
        type: array
        items:
          type: string
      funding_amount:
        type: integer
      funding_bracket:
        type: string
      price_per_tree:
        type: number
        format: float
      long_term_engagement:
        type: boolean
      reporting_frequency:
        type: string
      reporting_level:
        type: string
      sustainable_development_goals:
        type: array
        items:
          type: string
      cover_photo:
        type: string
      avatar:
        type: string
      video:
        type: string
      created_at:
        type: string
        format: date-time
      successful:
        type: boolean
      compatibility_score:
        type: integer
      visibility:
        type: string
  OfferReadAll:
    type: array
    items:
      $ref: '#/definitions/OfferRead'
  PitchContactCreate:
    type: object
    properties:
      pitch_id:
        type: integer
      user_id:
        type: integer
      team_member_id:
        type: integer
  PitchContactRead:
    type: object
    properties:
      id:
        type: integer
      team_member_id:
        type: integer
      user_id:
        type: integer
      pitch_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      avatar:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
  PitchContactReadAll:
    type: array
    items:
      $ref: '#/definitions/PitchContactRead'
  PitchByContinentReadAll:
    type: array
    items:
      type: object
      properties:
        land_continent:
          type: string
        count:
          type: integer
  InterestCreate:
    type: object
    properties:
      initiator:
        type: string
      offer_id:
        type: integer
      pitch_id:
        type: integer
  InterestRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      initiator:
        type: string
      offer_id:
        type: integer
      pitch_id:
        type: integer
      created_at:
        type: string
        format: date-time
  InterestReadAll:
    type: array
    items:
      $ref: '#/definitions/InterestRead'
  OfferContactCreate:
    type: object
    properties:
      offer_id:
        type: integer
      user_id:
        type: integer
      team_member_id:
        type: integer
  OfferContactRead:
    type: object
    properties:
      id:
        type: integer
      team_member_id:
        type: integer
      user_id:
        type: integer
      offer_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      avatar:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
  OfferContactReadAll:
    type: array
    items:
      $ref: '#/definitions/OfferContactRead'
  OfferDocumentCreate:
    type: object
    properties:
      offer_id:
        type: integer
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  OfferDocumentUpdate:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  OfferDocumentRead:
    type: object
    properties:
      id:
        type: integer
      offer_id:
        type: integer
      name:
        type: string
      type:
        type: string
      document:
        type: string
  OfferDocumentReadAll:
    type: array
    items:
      $ref: '#/definitions/OfferDocumentRead'
  TeamMemberCreate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: integer
      email_address:
        type: string
      phone_number:
        type: string
  TeamMemberUpdate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: integer
      email_address:
        type: string
      phone_number:
        type: string
  TeamMemberRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      email_address:
        type: string
      phone_number:
        type: string
  TeamMemberReadAll:
    type: array
    items:
      $ref: '#/definitions/TeamMemberRead'
  MaskedTeamMemberRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
  MaskedTeamMemberReadAll:
    type: array
    items:
      $ref: '#/definitions/MaskedTeamMemberRead'
  TokenRead:
    type: object
    properties:
      token:
        type: string
  UploadCreate:
    type: object
    properties:
      id:
        type: integer
      uploaded_at:
        type: string
        format: date-time
  UploadSocioEconomicBenefits:
    type: object
    properties:
      upload:
        type: integer
      name:
        type: string
      programme_id:
        type: integer
      programme_submission_id:
        type: integer
      site_id:
        type: integer
      site_submission_id:
        type: integer
  UploadSocioEconomicBenefitsRead:
    type: object
    properties:
      id:
        type: integer
      upload:
        type: integer
      name:
        type: string
      programme_id:
        type: integer
      programme_submission_id:
        type: integer
      site_id:
        type: integer
      site_submission_id:
        type: integer
      uploaded_at:
        type: string
        format: date-time
  UploadMedia:
    type: object
    properties:
      is_public:
        type: boolean
      programme_id:
        type: integer
      site_id:
        type: integer
      upload:
        type: integer
      location_long:
        type: number
      location_lat:
        type: number
  UploadMediaRead:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      is_public:
        type: boolean
      programme_id:
        type: integer
      site_id:
        type: integer
      upload:
        type: string
      location_long:
        type: number
      location_lat:
        type: number
      created_at:
        type: string
        format: date-time
  UploadMediaReadAll:
    type: array
    items:
      $ref: '#/definitions/UploadMediaRead'
  CountryReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        continent:
          type: string
  OrganisationCategoryReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
  AuthReset:
    type: object
    properties:
      email_address:
        type: string
      callback_url:
        type: string
  AuthVerify:
    type: object
    properties:
      token:
        type: string
  AuthChange:
    type: object
    properties:
      token:
        type: string
      password:
        type: string
  AuthLogIn:
    type: object
    properties:
      email_address:
        type: string
        format: email
      password:
        type: string
  UserCreate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      phone_number:
        type: string
      whatsapp_phone:
        type: string
      callback_url:
        type: string
  UserAccept:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      phone_number:
        type: string
      whatsapp_phone:
        type: string
      callback_url:
        type: string
  UserInvite:
    type: object
    properties:
      email_address:
        type: string
  UserRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      organisation_name:
        type: string
      my_organisation:
        $ref: '#/definitions/V2AdminOrganisationRead'
      my_monitoring_organisations:
        type: array
        items:
          $ref: '#/definitions/V2MonitoringOrganisationRead'
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      email_address_verified_at:
        type: string
        format: date-time
      role:
        type: string
      last_logged_in_at:
        type: string
        format: date-time
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      phone_number:
        type: string
      whatsapp_phone:
        type: string
      has_ppc_projects:
        type: boolean
      has_terrafund_projects:
        type: boolean
  UserResend:
    type: object
    properties:
      uuid:
        type: string
      callback_url:
        type: string
  MaskedUserRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
  MaskedUserReadAll:
    type: array
    items:
      $ref: '#/definitions/MaskedUserRead'
  UserReadAllPaginated:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserReadAll'
      meta:
        type: object
        properties:
          first:
            type: integer
          current:
            type: integer
          last:
            type: integer
          total:
            type: integer
  SiteReadAllPaginated:
    type: object
    properties:
      data:
        $ref: '#/definitions/SiteReadAll'
      meta:
        type: object
        properties:
          first:
            type: integer
          current:
            type: integer
          last:
            type: integer
          total:
            type: integer
  FormPaginated:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/FormRead'
      links:
        type: object
        properties:
          first:
            type: string
          last:
            type: string
          prev:
            type: string
          next:
            type: string
      meta:
        type: object
        properties:
          current_page:
            type: integer
          from:
            type: integer
          last_page:
            type: integer
          next:
            type: integer
  StagePaginated:
    type: object
    properties:
      data:
        $ref: '#/definitions/StageRead'
      links:
        type: object
        properties:
          first:
            type: string
          last:
            type: string
          prev:
            type: string
          next:
            type: string
      meta:
        type: object
        properties:
          current_page:
            type: integer
          from:
            type: integer
          last_page:
            type: integer
          next:
            type: integer
  UserReadAll:
    type: array
    items:
      $ref: '#/definitions/UserRead'
  UserUpdate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: integer
      phone_number:
        type: string
      callback_url:
        type: string
  AdminAccept:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
  AdminInvite:
    type: object
    properties:
      email_address:
        type: string
  AdminRead:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      email_address_verified_at:
        type: string
        format: date-time
      role:
        type: string
      last_logged_in_at:
        type: string
        format: date-time
      job_role:
        type: string
      whatsapp_phone:
        type: string
      avatar:
        type: string
  AdminReadAll:
    type: array
    items:
      $ref: '#/definitions/AdminRead'
  AdminUpdate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      avatar:
        type: integer
  OrganisationCreate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      address_1:
        type: string
      address_2:
        type: string
      city:
        type: string
      state:
        type: string
      zip_code:
        type: string
      country:
        type: string
      phone_number:
        type: string
      full_time_permanent_employees:
        type: integer
      seasonal_employees:
        type: integer
      part_time_permanent_employees:
        type: integer
      percentage_female:
        type: integer
      percentage_male:
        type: integer
      percentage_youth:
        type: integer
      website:
        type: string
      type:
        type: string
      account_type:
        type: string
      category:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: integer
      cover_photo:
        type: integer
      video:
        type: integer
      founded_at:
        type: string
        format: date
      revenues_19:
        type: number
        format: float
      revenues_20:
        type: number
        format: float
      revenues_21:
        type: number
        format: float
      'budget_21 ':
        type: number
        format: float
      letter_of_reference:
        type: integer
      community_engagement_strategy:
        type: string
      three_year_community_engagement:
        type: string
      women_farmer_engagement:
        type: integer
      young_people_engagement:
        type: integer
      monitoring_and_evaluation_experience:
        type: string
      community_follow_up:
        type: string
      total_hectares_restored:
        type: integer
      total_trees_grown:
        type: integer
      tree_survival_rate:
        type: integer
      hectares_restored_three_years:
        type: integer
      tree_maintenance_and_aftercare:
        type: string
      key_contact:
        type: string
  MaskedOrganisationRead:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      website:
        type: string
      type:
        type: string
      category:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      cover_photo:
        type: string
      video:
        type: string
      founded_at:
        type: string
        format: date
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      community_engagement_strategy:
        type: string
      three_year_community_engagement:
        type: string
      women_farmer_engagement:
        type: integer
      young_people_engagement:
        type: integer
      monitoring_and_evaluation_experience:
        type: string
      community_follow_up:
        type: string
      total_hectares_restored:
        type: integer
      total_trees_grown:
        type: integer
      tree_survival_rate:
        type: integer
      hectares_restored_three_years:
        type: integer
      tree_maintenance_and_aftercare:
        type: string
      full_time_permanent_employees:
        type: integer
      seasonal_employees:
        type: integer
      part_time_permanent_employees:
        type: integer
      percentage_female:
        type: integer
      percentage_youth:
        type: integer
      key_contact:
        type: string
  OrganisationRead:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      address_1:
        type: string
      address_2:
        type: string
      account_type:
        type: string
      city:
        type: string
      state:
        type: string
      zip_code:
        type: string
      country:
        type: string
      phone_number:
        type: string
      website:
        type: string
      type:
        type: string
      category:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      cover_photo:
        type: string
      video:
        type: string
      founded_at:
        type: string
        format: date
      revenues_19:
        type: number
        format: float
      revenues_20:
        type: number
        format: float
      revenues_21:
        type: number
        format: date
      budget_21:
        type: number
        format: float
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      community_engagement_strategy:
        type: string
      three_year_community_engagement:
        type: string
      women_farmer_engagement:
        type: integer
      young_people_engagement:
        type: integer
      monitoring_and_evaluation_experience:
        type: string
      community_follow_up:
        type: string
      letter_of_reference:
        type: integer
      total_hectares_restored:
        type: integer
      total_trees_grown:
        type: integer
      tree_survival_rate:
        type: integer
      hectares_restored_three_years:
        type: integer
      tree_maintenance_and_aftercare:
        type: string
      full_time_permanent_employees:
        type: integer
      seasonal_employees:
        type: integer
      part_time_permanent_employees:
        type: integer
      percentage_female:
        type: integer
      percentage_youth:
        type: integer
      photos:
        $ref: '#/definitions/OrganisationPhotoReadAll'
      files:
        $ref: '#/definitions/OrganisationFileReadAll'
      key_contact:
        type: string
  OrganisationReadAll:
    type: array
    items:
      $ref: '#/definitions/OrganisationRead'
  OrganisationUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      address_1:
        type: string
      address_2:
        type: string
      city:
        type: string
      state:
        type: string
      zip_code:
        type: string
      country:
        type: string
      phone_number:
        type: string
      website:
        type: string
      type:
        type: string
      category:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      cover_photo:
        type: string
      video:
        type: string
      founded_at:
        type: string
        format: date
      revenues_19:
        type: number
        format: float
      revenues_20:
        type: number
        format: float
      revenues_21:
        type: number
        format: date
      budget_21:
        type: number
        format: float
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      community_engagement_strategy:
        type: string
      three_year_community_engagement:
        type: string
      women_farmer_engagement:
        type: integer
      young_people_engagement:
        type: integer
      monitoring_and_evaluation_experience:
        type: string
      community_follow_up:
        type: string
      letter_of_reference:
        type: integer
      total_hectares_restored:
        type: integer
      total_trees_grown:
        type: integer
      tree_survival_rate:
        type: integer
      hectares_restored_three_years:
        type: integer
      tree_maintenance_and_aftercare:
        type: string
      full_time_permanent_employees:
        type: integer
      seasonal_employees:
        type: integer
      part_time_permanent_employees:
        type: integer
      percentage_female:
        type: integer
      percentage_youth:
        type: integer
  OrganisationVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/OrganisationRead'
  OrganisationVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/OrganisationVersionRead'
  OrganisationVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  DocumentTypeReadAll:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
  OrganisationDocumentCreate:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  OrganisationDocumentRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      name:
        type: string
      type:
        type: string
      document:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  OrganisationDocumentReadAll:
    type: array
    items:
      $ref: '#/definitions/OrganisationDocumentRead'
  OrganisationDocumentUpdate:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      document:
        type: integer
  OrganisationDocumentVersionRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
      approved_rejected_by:
        type: integer
      approved_rejected_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      data:
        $ref: '#/definitions/OrganisationDocumentRead'
  OrganisationDocumentVersionReadAll:
    type: array
    items:
      $ref: '#/definitions/OrganisationDocumentVersionRead'
  OrganisationDocumentVersionReject:
    type: object
    properties:
      rejected_reason:
        type: string
      rejected_reason_body:
        type: string
  MonitoringCreate:
    type: object
    properties:
      match_id:
        type: integer
  MonitoringReadAll:
    type: array
    items:
      $ref: '#/definitions/MonitoringRead'
  MonitoringRead:
    type: object
    properties:
      id:
        type: integer
      match_id:
        type: integer
      initiator:
        type: string
      stage:
        type: string
      negotiating:
        type: string
      pitch:
        $ref: '#/definitions/PitchRead'
      offer:
        $ref: '#/definitions/OfferRead'
      created_by:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SummarisedMonitoringRead:
    type: array
    items:
      type: object
      properties:
        attribute:
          type: string
        target:
          type: integer
        progress_update:
          type: integer
        updated_at:
          type: string
          format: date-time
  TargetCreate:
    type: object
    properties:
      monitoring_id:
        type: integer
      start_date:
        type: string
        format: date
      finish_date:
        type: string
        format: date
      funding_amount:
        type: integer
      land_geojson:
        type: string
      data:
        type: object
        properties:
          trees_planted:
            type: integer
          non_trees_planted:
            type: integer
          survival_rate:
            type: integer
          land_size_planted:
            type: number
            format: float
          land_size_restored:
            type: number
            format: float
          carbon_captured:
            type: integer
          supported_nurseries:
            type: integer
          nurseries_production_amount:
            type: integer
          short_term_jobs_amount:
            type: integer
          long_term_jobs_amount:
            type: integer
          volunteers_amount:
            type: integer
          training_amount:
            type: integer
          benefited_people:
            type: integer
  TargetReadAll:
    type: array
    items:
      $ref: '#/definitions/TargetRead'
  TargetRead:
    type: object
    properties:
      id:
        type: integer
      monitoring_id:
        type: integer
      negotiator:
        type: string
      start_date:
        type: string
        format: date
      finish_date:
        type: string
        format: date
      funding_amount:
        type: integer
      land_geojson:
        type: string
      data:
        type: object
        properties:
          trees_planted:
            type: integer
          non_trees_planted:
            type: integer
          survival_rate:
            type: integer
          land_size_planted:
            type: number
            format: float
          land_size_restored:
            type: number
            format: float
          carbon_captured:
            type: integer
          supported_nurseries:
            type: integer
          nurseries_production_amount:
            type: integer
          short_term_jobs_amount:
            type: integer
          long_term_jobs_amount:
            type: integer
          volunteers_amount:
            type: integer
          training_amount:
            type: integer
          benefited_people:
            type: integer
      created_at:
        type: string
        format: date-time
      created_by:
        type: integer
      updated_at:
        type: string
        format: date-time
      accepted_at:
        type: string
        format: date-time
      accepted_by:
        type: integer
  ProgressUpdateCreate:
    type: object
    properties:
      monitoring_id:
        type: integer
      grouping:
        type: string
        enum:
          - general
          - planting
          - monitoring
      title:
        type: string
      breakdown:
        type: string
      summary:
        type: string
      data:
        type: object
        properties:
          planting_date:
            type: string
            format: date
          trees_planted:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          non_trees_planted:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          survival_amount:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          supported_nurseries:
            type: integer
          survival_rate:
            type: integer
          carbon_captured:
            type: integer
          nurseries_production_amount:
            type: integer
          land_size_planted:
            type: number
            format: float
          land_size_restored:
            type: number
            format: float
          short_term_jobs_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          long_term_jobs_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          volunteers_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          training_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          benefited_people:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          mortality_causes:
            type: string
          challenges_update:
            type: string
          insights_update:
            type: string
          biodiversity_update:
            type: string
      images:
        type: array
        items:
          type: object
          properties:
            image:
              type: integer
            caption:
              type: string
  ProgressUpdateReadAll:
    type: array
    items:
      $ref: '#/definitions/ProgressUpdateRead'
  ProgressUpdateRead:
    type: object
    properties:
      id:
        type: integer
      monitoring_id:
        type: integer
      grouping:
        type: string
        enum:
          - general
          - planting
          - monitoring
      title:
        type: string
      breakdown:
        type: string
      summary:
        type: string
      data:
        type: object
        properties:
          planting_date:
            type: string
            format: date
          trees_planted:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          trees_planted_total:
            type: integer
          non_trees_planted:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          non_trees_planted_total:
            type: integer
          survival_amount:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: integer
          survival_amount_total:
            type: integer
          supported_nurseries:
            type: integer
          survival_rate:
            type: integer
          carbon_captured:
            type: integer
          nurseries_production_amount:
            type: integer
          land_size_planted:
            type: number
            format: float
          land_size_restored:
            type: number
            format: float
          short_term_jobs_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          short_term_jobs_amount_total:
            type: integer
          long_term_jobs_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          long_term_jobs_amount_total:
            type: integer
          volunteers_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          volunteers_amount_total:
            type: integer
          training_amount:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          training_amount_total:
            type: integer
          benefited_people:
            type: object
            properties:
              male:
                type: integer
              female:
                type: integer
          benefited_people_total:
            type: integer
          mortality_causes:
            type: string
          challenges_update:
            type: string
          insights_update:
            type: string
          biodiversity_update:
            type: string
      images:
        type: array
        items:
          type: object
          properties:
            image:
              type: string
            caption:
              type: string
            thumbnail:
              type: string
      created_by:
        type: integer
      created_by_admin:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SatelliteMonitorCreate:
    type: object
    properties:
      satellite_monitorable_type:
        type: string
      satellite_monitorable_id:
        type: integer
      map:
        type: integer
      alt_text:
        type: string
  SatelliteMonitorRead:
    type: object
    properties:
      id:
        type: integer
      satellite_monitorable_type:
        type: string
      satellite_monitorable_id:
        type: integer
      map:
        type: integer
      alt_text:
        type: string
      created_at:
        type: string
        format: date-time
  SatelliteMonitorReadAll:
    type: array
    items:
      $ref: '#/definitions/SatelliteMonitorRead'
  SatelliteMapCreate:
    type: object
    properties:
      monitoring_id:
        type: integer
      map:
        type: integer
      alt_text:
        type: string
  SatelliteMapRead:
    type: object
    properties:
      id:
        type: integer
      monitoring_id:
        type: integer
      map:
        type: integer
      alt_text:
        type: string
      created_by:
        type: string
      created_at:
        type: string
        format: date-time
  SatelliteMapReadAll:
    type: array
    items:
      $ref: '#/definitions/SatelliteMapRead'
  FrameworkCodeSubmit:
    type: object
    properties:
      code:
        type: string
  FrameworkCodeCreate:
    type: object
    properties:
      code:
        type: string
      framework:
        type: string
  SubmissionCreate:
    type: object
    properties:
      title:
        type: string
      technical_narrative:
        type: string
      public_narrative:
        type: string
      created_by:
        type: string
  SubmissionUpdate:
    type: object
    properties:
      title:
        type: string
      technical_narrative:
        type: string
      public_narrative:
        type: string
      created_by:
        type: string
  DirectSeedingSubmit:
    type: object
    properties:
      name:
        type: string
      weight:
        type: integer
  DirectSeedingRead:
    type: object
    properties:
      id:
        type: integer
      site_submission_id:
        type: integer
      name:
        type: string
      weight:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SubmissionRead:
    type: object
    properties:
      id:
        type: integer
      programme_id:
        type: integer
      title:
        type: string
      technical_narrative:
        type: string
      public_narrative:
        type: string
      due_date:
        type: string
      workdays_paid:
        type: integer
        x-nullable: true
      workdays_volunteer:
        type: integer
        x-nullable: true
      total_workdays:
        type: integer
      media:
        type: array
        items:
          $ref: '#/definitions/SubmissionUploadMediaRead'
      tree_species:
        type: array
        items:
          $ref: '#/definitions/ProgrammeTreeSpeciesRead'
      socioeconomic_benefits:
        type: object
        items:
          $ref: '#/definitions/UploadSocioEconomicBenefitsRead'
      document_files:
        type: array
        items:
          $ref: '#/definitions/DocumentFileRead'
      status:
        type: string
      created_by:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SubmissionReadAll:
    type: array
    items:
      $ref: '#/definitions/SubmissionRead'
  ProgrammeOverviewRead:
    type: object
    properties:
      id:
        type: integer
      framework_id:
        type: integer
      organisation_id:
        type: integer
      submissions:
        type: array
        items:
          $ref: '#/definitions/SubmissionRead'
      boundary_geojson:
        type: string
      number_of_sites:
        type: integer
      workdays_paid:
        type: integer
      workdays_volunteer:
        type: integer
      total_workdays:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ProgrammeSubmit:
    type: object
    properties:
      name:
        type: string
      country:
        type: string
      continent:
        type: string
      end_date:
        type: string
        format: date
  ProgrammeRead:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      country:
        type: string
      continent:
        type: string
      thumbnail:
        type: string
      boundary_geojson:
        type: string
      end_date:
        type: string
        format: date
      framework_id:
        type: integer
      organisation_id:
        type: integer
      submissions:
        type: array
        items:
          $ref: '#/definitions/SubmissionRead'
      baseline_monitoring:
        $ref: '#/definitions/ProjectMetricRead'
      next_due_submission_id:
        type: integer
      next_due_at:
        type: string
        format: date
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  FundingProgramme:
    title: FundingProgrammeRead
    x-stoplight:
      id: uh5oce75en4za
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      location:
        type: string
      read_more_url:
        type: string
      framework_key:
        type: string
      status:
        type: string
      organisation_types:
        type: array
        items:
          type: string
      stages:
        type: array
        items:
          $ref: '#/definitions/StageRead'
      organisations:
        type: array
        items:
          type: object
          properties:
            uuid:
              type: string
            name:
              type: string
      cover:
        $ref: '#/definitions/V2FileRead'
      deleted_at:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  LimitedFundingProgrammeRead:
    title: LimitedFundingProgrammeRead
    x-stoplight:
      id: uh5oce75en4za
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      location:
        type: string
      organisation_types:
        type: array
        items:
          type: string
      read_more_url:
        type: string
      status:
        type: string
  FundingProgrammeStatus:
    title: FundingProgrammeStatus
    type: object
    properties:
      status:
        type: string
  FundingProgrammeCreate:
    title: FundingProgrammeCreate
    x-stoplight:
      id: uoxj0qcvij0sr
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      location:
        type: string
      read_more_url:
        type: string
      organisation_types:
        type: array
        items:
          type: string
      cover:
        $ref: '#/definitions/V2FileRead'
      status:
        type: string
  TerrafundProgrammeRead:
    type: object
    properties:
      id:
        type: integer
      home_country:
        type: string
      project_country:
        type: string
      boundary_geojson:
        type: string
      name:
        type: string
      description:
        type: string
      planting_start_date:
        type: string
        format: date
      planting_end_date:
        type: string
        format: date
      budget:
        type: integer
      programme_type:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      history:
        type: string
      objectives:
        type: string
      environmental_goals:
        type: string
      socioeconomic_goals:
        type: string
      sdgs_impacted:
        type: string
      community_incentives:
        type: string
      total_hectares_restored:
        type: integer
      baseline_monitoring:
        $ref: '#/definitions/ProjectMetricRead'
      additional_files:
        type: array
        items:
          $ref: '#/definitions/TerrafundFileReadAll'
      tree_species:
        type: array
        items:
          $ref: '#/definitions/TerrafundTreeSpeciesReadAll'
      organisation_id:
        type: integer
      next_due_submission:
        $ref: '#/definitions/TerrafundDueSubmissionRead'
      next_due_at:
        type: string
  ProgrammeReadAll:
    type: array
    items:
      $ref: '#/definitions/ProgrammeRead'
  TerrafundProgrammeReadAll:
    type: array
    items:
      $ref: '#/definitions/TerrafundProgrammeRead'
  FrameworkCodeReadAll:
    type: array
    items:
      $ref: '#/definitions/FrameworkCodeRead'
  FrameworkCodeRead:
    type: object
    properties:
      id:
        type: integer
      code:
        type: string
      framework_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ProgrammeTreeSpeciesSearchAll:
    type: object
    properties:
      data:
        $ref: '#/definitions/ProgrammeTreeSpeciesSearchRead'
  ProgrammeTreeSpeciesSearchRead:
    type: array
    items:
      type: string
  ProgrammeTreeSpeciesSearch:
    type: object
    properties:
      search_term:
        type: string
  ProgrammeTreeSpeciesSubmit:
    type: object
    properties:
      name:
        type: string
      programme_id:
        type: integer
  ProgrammeTreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      programme_id:
        type: integer
      name:
        type: string
      created_at:
        type: string
        format: date-time
  TreeSpeciesBulkSubmit:
    type: object
    properties:
      name:
        type: string
  TreeSpeciesWithAmountBulkSubmit:
    type: object
    properties:
      name:
        type: string
      amount:
        type: integer
  BaseProgrammeTreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      programme_id:
        type: integer
      name:
        type: string
      created_at:
        type: string
        format: date-time
  ProgrammeTreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/ProgrammeTreeSpeciesRead'
  BaseProgrammeTreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/BaseProgrammeTreeSpeciesRead'
  ProgrammeAllTreeSpeciesReadAll:
    type: object
    properties:
      programme_id:
        type: integer
      trees:
        $ref: '#/definitions/BaseProgrammeTreeSpeciesReadAll'
  SiteAllTreeSpeciesReadAll:
    type: object
    properties:
      site_id:
        type: integer
      trees:
        $ref: '#/definitions/BaseSiteTreeSpeciesReadAll'
  AllProgrammesTreeSpecies:
    type: array
    items:
      $ref: '#/definitions/ProgrammeAllTreeSpeciesReadAll'
  AllSiteTreeSpecies:
    type: array
    items:
      $ref: '#/definitions/SiteAllTreeSpeciesReadAll'
  ProgrammeTreeSpeciesCsvRead:
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      programme_id:
        type: integer
      total_rows:
        type: integer
      completed_rows:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ProgrammeTreeSpeciesCsvSubmit:
    type: object
    properties:
      upload_id:
        type: integer
      programme_id:
        type: integer
  SiteTreeSpeciesCsvRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      total_rows:
        type: integer
      completed_rows:
        type: integer
      has_failed:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SiteTreeSpeciesCsvSubmit:
    type: object
    properties:
      upload_id:
        type: integer
      programme_id:
        type: integer
  SiteTreeSpeciesManualRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
  SiteTreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
  BaseSiteTreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      name:
        type: string
      created_at:
        type: string
        format: date-time
  BaseSiteTreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/BaseSiteTreeSpeciesRead'
  SiteTreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/SiteTreeSpeciesRead'
  SeedDetailReadAll:
    type: array
    items:
      $ref: '#/definitions/SeedDetailRead'
  InvasiveReadAll:
    type: array
    items:
      $ref: '#/definitions/InvasiveRead'
  SubmissionTreeSpeciesCsvRead:
    type: object
    properties:
      id:
        type: integer
      submission_id:
        type: integer
      total_rows:
        type: integer
      completed_rows:
        type: integer
      has_failed:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SubmissionTreeSpeciesManualRead:
    type: object
    properties:
      id:
        type: integer
      submission_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
  SubmissionreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      submission_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
  SubmissionTreeSpeciesReadAll:
    type: array
    items:
      $ref: '#/definitions/SubmissionTreeSpeciesRead'
  SubmissionTreeSpeciesRead:
    type: object
    properties:
      id:
        type: integer
      submission_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
  SubmissionTreeSpeciesManualSubmit:
    type: object
    properties:
      submission_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
  SubmissionUploadMedia:
    type: object
    properties:
      is_public:
        type: boolean
      submission_id:
        type: integer
      site_submission_id:
        type: integer
      upload:
        type: integer
      location_long:
        type: number
      location_lat:
        type: number
  SubmissionUploadMediaRead:
    type: object
    properties:
      id:
        type: integer
      is_public:
        type: boolean
      submission_id:
        type: integer
      site_submission_id:
        type: integer
      upload:
        type: string
      location_long:
        type: number
      location_lat:
        type: number
      created_at:
        type: string
        format: date-time
  SubmissionTreeSpeciesCsvSubmit:
    type: object
    properties:
      file:
        type: integer
  ProgrammeTargetsSubmit:
    type: object
    properties:
      year_five_trees:
        type: integer
      restoration_hectares:
        type: integer
      survival_rate:
        type: integer
      year_five_crown_cover:
        type: integer
  ProgrammeTargetsRead:
    type: object
    properties:
      id:
        type: integer
      programme_id:
        type: integer
      year_five_trees:
        type: integer
      restoration_hectares:
        type: integer
      survival_rate:
        type: integer
      year_five_crown_cover:
        type: integer
      submitted_tree_count:
        type: integer
  SiteCreateSubmit:
    type: object
    properties:
      programme_id:
        type: integer
      site_name:
        type: string
      site_description:
        type: string
      site_history:
        type: string
      control_site:
        type: boolean
      planting_pattern:
        type: string
      end_date:
        type: string
        format: date
      stratification_for_heterogeneity:
        type: integer
  SiteRead:
    type: object
    properties:
      id:
        type: integer
      programme_id:
        type: integer
      name:
        type: string
      control_site:
        type: boolean
      description:
        type: string
        format: string
      country:
        type: string
      continent:
        type: string
      history:
        type: string
      workdays_paid:
        type: integer
      planting_pattern:
        type: string
      end_date:
        type: string
        format: date
      establishment_date:
        type: string
        format: date
      land_tenures:
        type: array
        items:
          $ref: '#/definitions/LandTenureReadAll'
      restoration_methods:
        type: array
        items:
          $ref: '#/definitions/SiteRestorationMethodReadAll'
      aim_survival_rate:
        type: integer
      aim_year_five_crown_cover:
        type: integer
      aim_direct_seeding_survival_rate:
        type: integer
      aim_natural_regeneration_trees_per_hectare:
        type: integer
      aim_natural_regeneration_hectares:
        type: integer
      aim_soil_condition:
        type: string
      aim_number_of_mature_trees:
        type: integer
      boundary_geojson:
        type: string
      submissions:
        type: array
        items:
          $ref: '#/definitions/SubmissionRead'
      seeds:
        type: array
        items:
          $ref: '#/definitions/SeedDetailReadAll'
      invasives:
        type: array
        items:
          $ref: '#/definitions/InvasiveReadAll'
      next_due_submission_id:
        type: integer
      next_due_at:
        type: string
        format: date
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      baseline_monitoring:
        $ref: '#/definitions/SiteMetricRead'
  SeedDetailRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      name:
        type: string
      weight_of_sample:
        type: number
      seeds_in_sample:
        type: number
      seeds_per_kg:
        type: number
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  InvasiveRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      name:
        type: string
      type:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SiteSubmissionRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      technical_narrative:
        type: string
      public_narrative:
        type: string
      disturbance_information:
        type: string
      due_date:
        type: string
      tree_species:
        type: array
        items:
          $ref: '#/definitions/SiteTreeSpeciesReadAll'
      disturbances:
        type: array
        items:
          $ref: '#/definitions/SiteSubmissionDisturbanceReadAll'
      socioeconomic_benefits:
        type: object
        items:
          $ref: '#/definitions/UploadSocioEconomicBenefitsRead'
      media:
        type: array
        items:
          $ref: '#/definitions/UploadMediaReadAll'
      document_files:
        type: array
        items:
          $ref: '#/definitions/DocumentFileRead'
      workdays_paid:
        type: integer
        x-nullable: true
      workdays_volunteer:
        type: integer
        x-nullable: true
      total_workdays:
        type: integer
      status:
        type: string
      created_by:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SiteSubmissionUpdate:
    type: object
    properties:
      created_by:
        type: string
      disturbance_information:
        type: integer
      direct_seeding_kg:
        type: integer
  DueSubmissionRead:
    type: object
    properties:
      id:
        type: integer
      due_submissionable_type:
        type: string
      due_submissionable_id:
        type: integer
      is_submitted:
        type: boolean
      due_submissionable:
        type: object
      drafts:
        type: array
        items:
          $ref: '#/definitions/DraftRead'
      due_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SiteSubmissionDisturbanceRead:
    type: object
    properties:
      id:
        type: integer
      site_submission_id:
        type: integer
      disturbance_type:
        type: string
      intensity:
        type: string
      extent:
        type: string
      description:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SiteSubmissionDisturbanceReadAll:
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/SiteSubmissionDisturbanceRead'
  SiteSubmissionDisturbanceSubmit:
    type: object
    properties:
      site_submission_id:
        type: integer
      disturbance_type:
        type: string
      intensity:
        type: string
      extent:
        type: string
      description:
        type: string
  SiteSubmissionDisturbanceUpdate:
    type: object
    properties:
      disturbance_type:
        type: string
      intensity:
        type: string
      extent:
        type: string
      description:
        type: string
  SiteSubmissionDisturbanceInformationSubmit:
    type: object
    properties:
      site_submission_id:
        type: integer
      disturbance_information:
        type: string
  SiteSubmissionDisturbanceInformationUpdate:
    type: object
    properties:
      disturbance_information:
        type: string
  SiteAddBoundarySubmit:
    type: object
    properties:
      site_id:
        type: integer
      boundary_geojson:
        type: string
  LandTenureReadAll:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        key:
          type: string
  SiteRestorationMethodReadAll:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        key:
          type: string
  SiteRestorationMethodsSubmit:
    properties:
      site_restoration_ids:
        type: array
        items:
          type: integer
  EstablishmentDateSubmit:
    properties:
      establishment_date:
        type: string
        format: date
  SiteAimSubmit:
    properties:
      aim_survival_rate:
        type: integer
      aim_year_five_crown_cover:
        type: integer
      aim_direct_seeding_survival_rate:
        type: integer
      aim_natural_regeneration_trees_per_hectare:
        type: integer
      aim_natural_regeneration_hectares:
        type: integer
      aim_soil_condition:
        type: string
      aim_number_of_mature_trees:
        type: integer
  SiteSubmissionSubmit:
    properties:
      site_id:
        type: integer
      created_by:
        type: string
  SeedDetailSubmit:
    properties:
      name:
        type: string
      total_kg:
        type: number
      weight_of_sample:
        type: number
      seeds_in_sample:
        type: number
  InvasiveSubmit:
    properties:
      name:
        type: string
      type:
        type: string
  LandTenureSubmit:
    properties:
      land_tenure_ids:
        type: array
        items:
          type: integer
  NarrativeSubmit:
    properties:
      technical_narrative:
        type: string
      public_narrative:
        type: string
  NarrativeRead:
    type: object
    items:
      type: object
      properties:
        id:
          type: integer
        site_id:
          type: integer
        technical_narrative:
          type: string
        public_narrative:
          type: string
        created_at:
          type: string
          format: date-time
  LandTenureRead:
    type: object
    items:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  SiteTreeSpeciesManualSubmit:
    type: object
    properties:
      site_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
  ProgrammeInviteSubmit:
    properties:
      email_address:
        type: string
      callback_url:
        type: string
  ProgrammeInviteRead:
    properties:
      id:
        type: integer
      email_address:
        type: string
        format: email
      accepted_at:
        type: string
        format: date-time
      programme_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ProgrammeRemove:
    properties:
      user_id:
        type: integer
      programme_id:
        type: integer
  ProgrammeAccept:
    properties:
      token:
        type: string
  ProgrammeAddBoundary:
    properties:
      programme_id:
        type: integer
      boundary_geojson:
        type: string
  ProgrammeBoundary:
    properties:
      id:
        type: integer
      name:
        type: string
      framework_id:
        type: integer
      organisation_id:
        type: integer
      boundary_geojson:
        type: string
  SiteSubmissionReadAll:
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/SiteSubmissionRead'
  DueSubmissionReadAll:
    type: array
    items:
      $ref: '#/definitions/DueSubmissionRead'
  SiteReadAll:
    type: array
    items:
      $ref: '#/definitions/SiteRead'
  SitePendingRead:
    properties:
      completed_submissions:
        type: array
        items:
          $ref: '#/definitions/SiteSubmissionRead'
      due_submissions:
        type: array
        items:
          $ref: '#/definitions/DueSubmissionRead'
  ProgrammePendingRead:
    properties:
      completed_submissions:
        type: array
        items:
          $ref: '#/definitions/SubmissionRead'
      due_submissions:
        type: array
        items:
          $ref: '#/definitions/DueSubmissionRead'
  DocumentFileCreate:
    title: DocumentFileCreate
    type: object
    properties:
      document_fileable_type:
        type: string
        enum:
          - programme
          - nursery
          - site
          - nursery_submission
          - submission
          - site_submission
      document_fileable_id:
        type: integer
      title:
        type: string
      collection:
        type: string
      upload:
        type: integer
      is_public:
        type: boolean
  DocumentFileRead:
    title: DocumentFileRead
    x-stoplight:
      id: pt4pcba9shudc
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      upload:
        type: string
      fileable_id:
        type: string
      type:
        type: string
      collection:
        type: string
      is_public:
        type: boolean
      created_at:
        type: string
  TerrafundProgrammeCreate:
    title: TerrafundProgrammeCreate
    type: object
    properties:
      home_country:
        type: string
      project_country:
        type: string
      boundary_geojson:
        type: string
      name:
        type: string
      description:
        type: string
      planting_start_date:
        type: string
        format: date
      planting_end_date:
        type: string
        format: date
      budget:
        type: string
      programme_type:
        type: string
      status:
        type: string
      history:
        type: string
      objectives:
        type: string
      environmental_goals:
        type: string
      socioeconomic_goals:
        type: string
      sdgs_impacted:
        type: string
      long_term_growth:
        type: string
      community_incentives:
        type: string
      total_hectares_restored:
        type: integer
      trees_planted:
        type: integer
      jobs_created:
        type: integer
  TerrafundTreeSpeciesCreate:
    title: TerrafundTreeSpeciesCreate
    type: object
    properties:
      name:
        type: string
      amount:
        type: integer
      treeable_type:
        type: string
        enum:
          - programme
          - nursery
      treeable_id:
        type: integer
    required:
      - treeable_type
      - treeable_id
  TerrafundTreeSpeciesBulkCreate:
    title: TerrafundTreeSpeciesBulkCreate
    type: object
    description: ''
    properties:
      treeable_type:
        type: string
        enum:
          - programme
          - nursery
      treeable_id:
        type: integer
      collection:
        type: array
        items:
          $ref: '#/definitions/TerrafundTreeSpeciesBulkPartial'
    required:
      - treeable_type
      - treeable_id
      - collection
  TerrafundNonTreeSpeciesBulkCreate:
    title: TerrafundNonTreeSpeciesBulkCreate
    type: object
    description: ''
    properties:
      treeable_type:
        type: string
        enum:
          - site_submission
      treeable_id:
        type: integer
      collection:
        type: array
        items:
          $ref: '#/definitions/TerrafundTreeSpeciesBulkPartial'
    required:
      - treeable_type
      - treeable_id
      - collection
  TerrafundTreeSpeciesBulkPartial:
    title: TerrafundTreeSpeciesBulkPartial
    type: object
    description: ''
    properties:
      name:
        type: string
      amount:
        type: integer
    required:
      - name
      - amount
  TerrafundNoneTreeSpeciesRead:
    title: TerrafundNoneTreeSpeciesRead
    type: object
    properties:
      name:
        type: string
      amount:
        type: integer
      speciesable_type:
        type: string
        enum:
          - programme
          - nursery
      speciesable_id:
        type: integer
    required:
      - speciesable_type
      - speciesable_id
  TerrafundNoneTreeSpeciesCreate:
    title: TerrafundNoneTreeSpeciesCreate
    type: object
    properties:
      name:
        type: string
      amount:
        type: integer
      speciesable_type:
        type: string
        enum:
          - programme
          - nursery
      speciesable_id:
        type: integer
    required:
      - speciesable_type
      - speciesable_id
  TerrafundCsvCreate:
    title: TerrafundCsvCreate
    type: object
    properties:
      upload_id:
        type: integer
      treeable_type:
        type: string
      treeable_id:
        type: integer
  TerrafundCsvRead:
    title: TerrafundCsvRead
    type: object
    properties:
      id:
        type: string
      importable_type:
        type: string
        enum:
          - programme
      importable_id:
        type: integer
      total_rows:
        type: integer
      completed_rows:
        type: integer
      has_failed:
        type: boolean
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TerrafundTreeSpeciesRead:
    title: TerrafundTreeSpeciesRead
    type: object
    properties:
      id:
        type: string
      treeable_type:
        type: string
        enum:
          - programme
      treeable_id:
        type: integer
      name:
        type: string
      amount:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TerrafundFileCreate:
    title: TerrafundFileCreate
    type: object
    properties:
      fileable_type:
        type: string
        enum:
          - programme
          - nursery
          - site
          - nursery_submission
          - submission
          - site_submission
      fileable_id:
        type: integer
      upload:
        type: integer
      is_public:
        type: boolean
      location_lat:
        type: number
      location_long:
        type: number
      collection:
        type: string
  TerrafundFileRead:
    title: TerrafundFileRead
    type: object
    properties:
      id:
        type: integer
      fileable_type:
        type: string
      fileable_id:
        type: integer
      upload:
        type: string
        format: uri
      type:
        type: string
      is_public:
        type: boolean
      location_long:
        type: number
      location_lat:
        type: number
      collection:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TerrafundFileReadAll:
    title: TerrafundFileReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundFileRead'
  TerrafundTreeSpeciesReadAll:
    title: TerrafundTreeSpeciesReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundTreeSpeciesRead'
  TerrafundNoneTreeSpeciesReadAll:
    title: TerrafundNoneTreeSpeciesReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundNoneTreeSpeciesRead'
  TerrafundNurseryCreate:
    title: TerrafundNurseryCreate
    type: object
    properties:
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      terrafund_programme_id:
        type: integer
      seedling_grown:
        type: integer
      young_trees_grown:
        type: integer
      planting_contribution:
        type: string
      nursery_type:
        type: string
        enum:
          - managing
          - building
          - expanding
  TerrafundNurseryUpdate:
    title: TerrafundNurseryUpdate
    type: object
    properties:
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      seedling_grown:
        type: integer
      young_trees_grown:
        type: integer
      planting_contribution:
        type: string
      nursery_type:
        type: string
        enum:
          - managing
          - building
          - expanding
  TerrafundNurseryRead:
    title: TerrafundNurseryRead
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      project_country:
        type: string
      boundary_geojson:
        type: string
      terrafund_programme_id:
        type: integer
      seedling_grown:
        type: integer
      young_trees_grown:
        type: integer
      planting_contribution:
        type: string
      nursery_type:
        type: string
      photos:
        $ref: '#/definitions/TerrafundFileReadAll'
      tree_species:
        $ref: '#/definitions/TerrafundTreeSpeciesReadAll'
      submissions:
        type: array
        items:
          $ref: '#/definitions/TerrafundNurserySubmissionRead'
      next_due_submission_id:
        type: integer
        x-nullable: true
      next_due_submission_due_at:
        type: string
        format: date-time
        x-nullable: true
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TerrafundSiteCreate:
    title: TerrafundSiteCreate
    type: object
    properties:
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      restoration_methods:
        type: array
        items:
          type: string
      terrafund_programme_id:
        type: integer
      hectares_to_restore:
        type: integer
      landscape_community_contribution:
        type: string
      disturbances:
        type: string
      land_tenures:
        type: array
        items:
          type: string
  TerrafundSiteUpdate:
    title: TerrafundSiteUpdate
    type: object
    properties:
      name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      restoration_methods:
        type: array
        items:
          type: string
      hectares_to_restore:
        type: integer
      landscape_community_contribution:
        type: string
      disturbances:
        type: string
      land_tenures:
        type: array
        items:
          type: string
  SiteUpdate:
    title: SiteUpdate
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      history:
        type: string
      control_site:
        type: boolean
      end_date:
        type: string
        format: date
      planting_pattern:
        type: string
      stratification_for_heterogeneity:
        type: integer
  ProgrammeUpdate:
    title: ProgrammeUpdate
    type: object
    properties:
      name:
        type: string
      country:
        type: string
      continent:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      thumbnail:
        type: integer
  TerrafundSiteRead:
    title: TerrafundSiteRead
    type: object
    description: ''
    properties:
      id:
        type: string
      name:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      project_country:
        type: string
      boundary_geojson:
        type: string
      restoration_methods:
        type: array
        items:
          type: string
      land_tenures:
        type: array
        items:
          type: string
      terrafund_programme_id:
        type: integer
      hectares_to_restore:
        type: integer
      landscape_community_contribution:
        type: string
      disturbances:
        type: string
      photos:
        type: array
        items:
          $ref: '#/definitions/TerrafundFileRead'
      submissions:
        type: array
        items:
          $ref: '#/definitions/TerrafundSiteSubmissionRead'
      next_due_submission_id:
        type: integer
        x-nullable: true
      next_due_submission_due_at:
        type: string
        format: date-time
        x-nullable: true
      baseline_monitoring:
        $ref: '#/definitions/SiteMetricRead'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  TerrafundSiteReadAll:
    title: TerrafundSiteReadAll
    type: array
    description: ''
    items:
      $ref: '#/definitions/TerrafundSiteRead'
  OrganisationPhotoCreate:
    title: OrganisationPhotoCreate
    type: object
    properties:
      upload:
        type: integer
      is_public:
        type: boolean
      organisation_id:
        type: integer
  OrganisationPhotoRead:
    title: OrganisationPhotoRead
    type: object
    properties:
      id:
        type: integer
      upload:
        type: string
      is_public:
        type: boolean
      organisation_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  OrganisationFileCreate:
    title: OrganisationFileCreate
    type: object
    properties:
      upload:
        type: integer
      type:
        type: string
      organisation_id:
        type: integer
  OrganisationFileRead:
    title: OrganisationFileRead
    type: object
    properties:
      id:
        type: integer
      upload:
        type: integer
      organisation_id:
        type: integer
      type:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  OrganisationPhotoReadAll:
    title: OrganisationPhotoReadAll
    type: array
    items:
      $ref: '#/definitions/OrganisationPhotoRead'
  OrganisationFileReadAll:
    title: OrganisationFileReadAll
    type: array
    items:
      $ref: '#/definitions/OrganisationFileRead'
  TerrafundProgrammeInviteCreate:
    title: TerrafundProgrammeInviteCreate
    type: object
    properties:
      email_address:
        type: string
  TerrafundProgrammeInviteRead:
    title: TerrafundProgrammeInviteRead
    type: object
    properties:
      id:
        type: integer
      email_address:
        type: string
      callback_url:
        type: string
      terrafund_programme_id:
        type: integer
      created_at:
        type: string
        format: date-time
  TerrafundProgrammeInviteAccept:
    title: TerrafundProgrammeInviteAccept
    type: object
    properties:
      token:
        type: string
  UserRoleUpdate:
    title: UserRoleUpdate
    type: object
    properties:
      role:
        type: string
        enum:
          - user
          - terrafund_admin
  TerrafundNurserySubmissionCreate:
    title: TerrafundNurserySubmissionCreate
    type: object
    properties:
      seedlings_young_trees:
        type: integer
      interesting_facts:
        type: string
      site_prep:
        type: string
      shared_drive_link:
        type: string
      terrafund_nursery_id:
        type: integer
  TerrafundNurserySubmissionRead:
    title: TerrafundNurserySubmissionRead
    type: object
    properties:
      id:
        type: integer
      seedlings_young_trees:
        type: integer
      interesting_facts:
        type: string
      site_prep:
        type: string
      shared_drive_link:
        type: string
      terrafund_nursery_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
  TerrafundNurserySubmissionsReadAll:
    title: TerrafundNurserySubmissionsReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundNurserySubmissionRead'
  TerrafundNurserySubmissionUpdate:
    title: TerrafundNurserySubmissionUpdate
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      seedlings_young_trees:
        type: integer
      interesting_facts:
        type: string
      site_prep:
        type: string
  TerrafundDueSubmissionRead:
    title: TerrafundDueSubmissionRead
    type: object
    properties:
      id:
        type: string
      terrafund_due_submissionable_type:
        type: string
      terrafund_due_submissionable_id:
        type: string
      terrafund_due_submissionable:
        type: object
        description: This will be either a Terrafund Site or Terrafund Nursery
      drafts:
        $ref: '#/definitions/DraftReadAll'
      due_at:
        type: string
        format: date-time
      is_submitted:
        type: boolean
      created_at:
        type: string
        format: date-time
      unable_report_reason:
        type: string
      updated_at:
        type: string
        format: date-time
  TerrafundDueSubmissionReadAll:
    title: TerrafundDueSubmissionReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundDueSubmissionRead'
  TerrafundDisturbanceRead:
    title: TerrafundDisturbanceRead
    type: object
    properties:
      id:
        type: string
      disturbanceable_type:
        type: string
      disturbanceable_id:
        type: integer
      type:
        type: string
      description:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  TerrafundDisturbanceCreate:
    title: TerrafundDisturbanceCreate
    type: object
    properties:
      disturbanceable_type:
        type: string
      disturbanceable_id:
        type: string
      type:
        type: string
      description:
        type: string
  TerrafundSiteSubmissionCreate:
    title: TerrafundSiteSubmissionCreate
    type: object
    properties:
      terrafund_site_id:
        type: integer
      shared_drive_link:
        type: string
  TerrafundSiteSubmissionRead:
    title: TerrafundSiteSubmissionRead
    type: object
    properties:
      id:
        type: string
      photos:
        $ref: '#/definitions/TerrafundFileReadAll'
      disturbances:
        $ref: '#/definitions/TerrafundDisturbanceReadAll'
      tree_species:
        $ref: '#/definitions/TerrafundTreeSpeciesReadAll'
      none_tree_species:
        $ref: '#/definitions/TerrafundNoneTreeSpeciesReadAll'
      shared_drive_link:
        type: string
      terrafund_site_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
  TerrafundSiteSubmissionsReadAll:
    title: TerrafundSiteSubmissionsReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundSiteSubmissionRead'
  TerrafundGenericSubmissionRead:
    title: TerrafundGenericSubmissionRead
    type: object
    properties:
      submissionable_id:
        type: integer
      submissionable_type:
        type: string
      due_submissionable_id:
        type: integer
      'due_submissionable_name ':
        type: string
      due_submissionable_type:
        type: string
      due_at:
        type: string
  TerrafundGenericSubmissionsReadAll:
    title: TerrafundGenericSubmissionsReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundGenericSubmissionRead'
  TerrafundDisturbanceReadAll:
    title: TerrafundDisturbanceReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundDisturbanceRead'
  TerrafundDueSubmissionUnableCreate:
    title: TerrafundDueSubmissionUnableCreate
    type: object
    properties:
      reason:
        type: string
  TerrafundLandTenureReadAll:
    title: TerrafundLandTenureReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundLandTenureRead'
  TerrafundRestorationMethodsReadAll:
    title: TerrafundRestorationMethodsReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundRestorationMethodsRead'
  TerrafundProgrammeSubmissionCreate:
    title: TerrafundProgrammeSubmissionCreate
    type: object
    properties:
      landscape_community_contribution:
        type: string
      top_three_successes:
        type: string
      maintenance_and_monitoring_activities:
        type: string
      significant_change:
        type: string
      terrafund_programme_id:
        type: integer
      survival_calculation:
        type: string
      survival_comparison:
        type: string
      percentage_survival_to_date:
        type: integer
      ft_women:
        type: integer
      ft_men:
        type: integer
      ft_youth:
        type: integer
      ft_total:
        type: integer
      pt_women:
        type: integer
      pt_men:
        type: integer
      pt_youth:
        type: integer
      pt_total:
        type: integer
      volunteer_men:
        type: integer
      volunteer_women:
        type: integer
      volunteer_youth:
        type: integer
      volunteer_total:
        type: integer
      people_annual_income_increased:
        type: integer
      people_knowledge_skills_increased:
        type: integer
      shared_drive_link:
        type: string
      challenges_faced:
        type: string
      lessons_learned:
          type: string
      planted_trees:
        type: boolean
      new_jobs_created:
        type: integer
      new_jobs_description:
        type: string
      new_volunteers:
        type: integer
      volunteers_work_description:
        type: string
      full_time_jobs_35plus:
        type: integer
      part_time_jobs_35plus:
        type: integer
      volunteer_35plus:
        type: integer
      beneficiaries:
        type: integer
      beneficiaries_description:
        type: string
      women_beneficiaries:
        type: integer
      men_beneficiaries:
        type: integer
      beneficiaries_35plus:
        type: integer
      youth_beneficiaries:
        type: integer
      smallholder_beneficiaries:
        type: integer
      large_scale_beneficiaries:
        type: integer
      beneficiaries_income_increase:
        type: integer
      income_increase_description:
        type: string
      beneficiaries_skills_knowledge_increase:
        type: string
      skills_knowledge_description:
        type: string
  TerrafundProgrammeSubmissionUpdate:
    title: TerrafundProgrammeSubmissionUpdate
    type: object
    properties:
      landscape_community_contribution:
        type: string
      top_three_successes:
        type: string
      maintenance_and_monitoring_activities:
        type: string
      significant_change:
        type: string
      terrafund_programme_id:
        type: integer
      survival_calculation:
        type: string
      survival_comparison:
        type: string
      percentage_survival_to_date:
        type: integer
      ft_women:
        type: integer
      ft_men:
        type: integer
      ft_youth:
        type: integer
      ft_total:
        type: integer
      pt_women:
        type: integer
      pt_men:
        type: integer
      pt_youth:
        type: integer
      pt_total:
        type: integer
      volunteer_women:
        type: integer
      volunteer_men:
        type: integer
      volunteer_youth:
        type: integer
      volunteer_total:
        type: integer
      people_annual_income_increased:
        type: integer
      people_knowledge_skills_increased:
        type: integer
      challenges_faced:
          type: string
      lessons_learned:
          type: string
      planted_trees:
        type: boolean
      new_jobs_created:
        type: integer
      new_jobs_description:
        type: string
      new_volunteers:
        type: integer
      volunteers_work_description:
        type: string
      full_time_jobs_35plus:
        type: integer
      part_time_jobs_35plus:
        type: integer
      volunteer_35plus:
        type: integer
      beneficiaries:
        type: integer
      beneficiaries_description:
        type: string
      women_beneficiaries:
        type: integer
      men_beneficiaries:
        type: integer
      beneficiaries_35plus:
        type: integer
      youth_beneficiaries:
        type: integer
      smallholder_beneficiaries:
        type: integer
      large_scale_beneficiaries:
        type: integer
      beneficiaries_income_increase:
        type: integer
      income_increase_description:
        type: string
      beneficiaries_skills_knowledge_increase:
        type: string
      skills_knowledge_description:
        type: string
  TerrafundProgrammeSubmissionRead:
    title: TerrafundProgrammeSubmissionRead
    type: object
    properties:
      id:
        type: string
      challenges_and_lessons:
          type: string
      lessons_learned:
          type: string
      planted_trees:
        type: boolean
      new_jobs_created:
        type: integer
      new_jobs_description:
        type: string
      new_volunteers:
        type: integer
      volunteers_work_description:
        type: string
      full_time_jobs_35plus:
        type: integer
      part_time_jobs_35plus:
        type: integer
      volunteer_35plus:
        type: integer
      beneficiaries:
        type: integer
      beneficiaries_description:
        type: string
      women_beneficiaries:
        type: integer
      men_beneficiaries:
        type: integer
      beneficiaries_35plus:
        type: integer
      youth_beneficiaries:
        type: integer
      smallholder_beneficiaries:
        type: integer
      large_scale_beneficiaries:
        type: integer
      beneficiaries_income_increase:
        type: integer
      income_increase_description:
        type: string
      beneficiaries_skills_knowledge_increase:
        type: string
      skills_knowledge_description:
        type: string
      landscape_community_contribution:
        type: string
      top_three_successes:
        type: string
      maintenance_and_monitoring_activities:
        type: string
      significant_change:
        type: string
      terrafund_programme_id:
        type: integer
      photos:
        $ref: '#/definitions/TerrafundFileReadAll'
      other_additional_documents:
        $ref: '#/definitions/TerrafundFileReadAll'
      survival_calculation:
        type: string
      survival_comparison:
        type: string
      percentage_survival_to_date:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      ft_women:
        type: integer
      ft_men:
        type: integer
      ft_youth:
        type: integer
      ft_total:
        type: integer
      pt_women:
        type: integer
      pt_men:
        type: integer
      pt_youth:
        type: integer
      pt_total:
        type: integer
      volunteer_women:
        type: integer
      volunteer_men:
        type: integer
      volunteer_youth:
        type: integer
      volunteer_total:
        type: integer
      people_annual_income_increased:
        type: integer
      people_knowledge_skills_increased:
        type: integer
      shared_drive_link:
        type: string
  TerrafundProgrammeSubmissionsReadAll:
    title: TerrafundProgrammeSubmissionsReadAll
    type: array
    items:
      $ref: '#/definitions/TerrafundProgrammeSubmissionRead'
  TerrafundDateFilterCreate:
    title: TerrafundDateFilterCreate
    type: object
    properties:
      data:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
  TerrafundFileCreateAll:
    title: TerrafundFileCreateAll
    type: array
    items:
      $ref: '#/definitions/TerrafundFileCreate'
  TerrafundLandTenureRead:
    title: TerrafundLandTenureRead
    type: object
    properties:
      name:
        type: string
      key:
        type: string
  TerrafundRestorationMethodsRead:
    title: TerrafundRestorationMethodsRead
    type: object
    properties:
      name:
        type: string
      key:
        type: string
  TerrafundShapefileRead:
    title: TerrafundShapefileRead
    x-stoplight:
      id: vkj27uqc0wbl3
    type: object
    properties:
      model:
        type: string
      model_id:
        type: integer
      model_name:
        type: string
      boundary_geojson:
        type: string
  TerrafundShapefileReadAll:
    title: TerrafundShapefileReadAll
    x-stoplight:
      id: 06wir1jlo1he6
      type: array
      items:
        $ref: '#/definitions/TerrafundShapefileRead'
  TerrafundDueSubmissionByProgrammeReadAll:
    title: TerrafundDueSubmissionByProgrammeReadAll
    type: array
    items:
      type: object
      properties:
        terrafund_programme_id:
          type: integer
        'terrafund_programme_name ':
          type: string
        terrafund_programme_has_sites:
          type: boolean
        terrafund_programme_has_nurseries:
          type: boolean
        terrafund_last_submission_creation_date:
          type: string
          x-nullable: true
        terrafund_next_submission_due_date:
          type: string
          x-nullable: true
        terrafund_due_submissions:
          $ref: '#/definitions/TerrafundDueSubmissionReadAll'
  TerrafundSiteSubmissionUpdate:
    title: TerrafundSiteSubmissionUpdate
    x-stoplight:
      id: rb8uoi7brrh6j
    type: object
    properties:
      shared_drive_link:
        type: string
  PPCSiteExport:
    title: PPCSiteExport
    type: object
    properties:
      site_ids:
        type: array
        items:
          type: integer
  TerrafundDisturbanceUpdate:
    title: TerrafundDisturbanceUpdate
    x-stoplight:
      id: 8gbv4z1j2getu
    type: object
    properties:
      type:
        type: string
      description:
        type: string
  TerrafundAimsRead:
    title: TerrafundAimsRead
    x-stoplight:
      id: v1u21wwzam2ql
    type: object
    properties:
      terrafund_programme_id:
        type: integer
      trees_planted_goal:
        type: integer
      trees_planted_count:
        type: integer
      jobs_created_goal:
        type: integer
      jobs_created_count:
        type: integer
  ProjectMetricCreate:
    title: ProjectMetricCreate
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: object
    properties:
      monitorable_type:
        type: string
      monitorable_id:
        type: integer
      total_hectares:
        type: number
        format: float
      ha_mangrove:
        type: number
        format: float
      ha_assisted:
        type: number
        format: float
      ha_agroforestry:
        type: number
        format: float
      ha_reforestation:
        type: number
        format: float
      ha_peatland:
        type: number
        format: float
      ha_riparian:
        type: number
        format: float
      ha_enrichment:
        type: number
        format: float
      ha_nucleation:
        type: number
        format: float
      ha_silvopasture:
        type: number
        format: float
      ha_direct:
        type: number
        format: float
      tree_count:
        type: number
        format: float
      tree_cover:
        type: number
        format: float
      tree_cover_loss:
        type: number
        format: float
      carbon_benefits:
        type: number
        format: float
      number_of_esrp:
        type: number
        format: float
      field_tree_count:
        type: number
        format: float
      field_tree_regenerated:
        type: number
        format: float
      field_tree_survival_percent:
        type: number
        format: float
    required:
      - monitorable_type
      - monitorable_id
    x-tags:
      - V2
      - Baseline Monitoring
  ProjectMetricUpdate:
    title: ProjectMetricUpdate
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: object
    properties:
      uuid:
        type: string
      total_hectares:
        type: number
        format: float
      ha_mangrove:
        type: number
        format: float
      ha_assisted:
        type: number
        format: float
      ha_agroforestry:
        type: number
        format: float
      ha_reforestation:
        type: number
        format: float
      ha_peatland:
        type: number
        format: float
      ha_riparian:
        type: number
        format: float
      ha_enrichment:
        type: number
        format: float
      ha_nucleation:
        type: number
        format: float
      ha_silvopasture:
        type: number
        format: float
      ha_direct:
        type: number
        format: float
      tree_count:
        type: number
        format: float
      tree_cover:
        type: number
        format: float
      tree_cover_loss:
        type: number
        format: float
      carbon_benefits:
        type: number
        format: float
      number_of_esrp:
        type: number
        format: float
      field_tree_count:
        type: number
        format: float
      field_tree_regenerated:
        type: number
        format: float
      field_tree_survival_percent:
        type: number
        format: float
    required:
      - uuid
    x-tags:
      - V2
      - Baseline Monitoring
  ProjectMetricRead:
    title: ProjectMetricRead
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: object
    x-tags:
      - V2
      - Baseline Monitoring
    description: ''
    properties:
      uuid:
        type: string
      total_hectares:
        type: number
        format: float
        x-nullable: true
      ha_mangrove:
        type: number
        format: float
        x-nullable: true
      ha_assisted:
        type: number
        format: float
        x-nullable: true
      ha_agroforestry:
        type: number
        format: float
        x-nullable: true
      ha_reforestation:
        type: number
        format: float
        x-nullable: true
      ha_peatland:
        type: number
        format: float
        x-nullable: true
      ha_riparian:
        type: number
        format: float
        x-nullable: true
      ha_enrichment:
        type: number
        format: float
        x-nullable: true
      ha_nucleation:
        type: number
        format: float
        x-nullable: true
      ha_silvopasture:
        type: number
        format: float
        x-nullable: true
      ha_direct:
        type: number
        format: float
        x-nullable: true
      tree_count:
        type: number
        format: float
        x-nullable: true
      tree_cover:
        type: number
        format: float
        x-nullable: true
      tree_cover_loss:
        type: number
        format: float
        x-nullable: true
      carbon_benefits:
        type: number
        format: float
        x-nullable: true
      number_of_esrp:
        type: number
        format: float
        x-nullable: true
      field_tree_count:
        type: number
        format: float
        x-nullable: true
      field_tree_regenerated:
        type: number
        format: float
        x-nullable: true
      field_tree_survival_percent:
        type: number
        format: float
        x-nullable: true
      created_at:
        type: string
      updated_at:
        type: string
  ProjectMetricReadAll:
    title: ProjectMetricReadAll
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: array
    x-tags:
      - V2
      - Baseline Monitoring
    description: ''
    items:
      $ref: '#/definitions/ProjectMetricRead'
  SiteMetricCreate:
    title: SiteMetricCreate
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: object
    properties:
      monitorable_type:
        type: string
      monitorable_id:
        type: integer
      tree_count:
        type: integer
      tree_cover:
        type: integer
      field_tree_count:
        type: integer
    required:
      - monitorable_type
      - monitorable_id
    x-tags:
      - V2
      - Baseline Monitoring
  SiteMetricUpdate:
    title: SiteMetricUpdate
    x-stoplight:
      id: y5f1gnwfxjv1u
    type: object
    properties:
      uuid:
        type: string
      tree_count:
        type: integer
      tree_cover:
        type: integer
      field_tree_count:
        type: integer
    required:
      - uuid
    x-tags:
      - V2
      - Baseline Monitoring
  SiteMetricRead:
    title: SiteMetricRead
    x-stoplight:
      id: exns78ux9ss8t
    type: object
    x-tags:
      - V2
      - Baseline Monitoring
    properties:
      uuid:
        type: string
      tree_count:
        type: integer
        x-nullable: true
      tree_cover:
        type: integer
        x-nullable: true
      field_tree_count:
        type: integer
        x-nullable: true
  SiteMetricReadAll:
    title: SiteMetricReadAll
    x-stoplight:
      id: exns78ux9ss8t
    type: array
    x-tags:
      - V2
      - Baseline Monitoring
    items:
      $ref: '#/definitions/SiteMetricRead'
  EditHistoryCreate:
    title: EditHistoryCreate
    x-stoplight:
      id: brds01e02181e
    type: object
    properties:
      editable_type:
        type: string
      editable_id:
        type: integer
      content:
        type: string
    required:
      - editable_type
      - editable_id
      - content
  EditHistoryRead:
    title: EditHistoryRead
    x-stoplight:
      id: 0m9aw21vlalp9
    type: object
    properties:
      uuid:
        type: string
      status:
        type: string
      readable_status:
        type: string
      content:
        type: string
      organisation_name:
        type: string
      project_name:
        type: string
      framework_name:
        type: string
      model:
        type: object
        properties:
          id:
            type: integer
          type:
            type: string
          name:
            type: string
      created_at:
        type: string
      updated_at:
        type: string
  Form:
    title: FormSubmit
    x-stoplight:
      id: ge9ckliniez5m
    type: object
    properties:
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      deadline_at:
        type: string
      documentation:
        type: string
      documentation_label:
        type: string
      submission_message:
        type: string
      duration:
        type: string
      stage_id:
        type: integer
      tags:
        type: array
        description: 'this is a list of key value pairs eg. slug: name'
        items:
          type: string
  FormCreate:
    title: FormCreate
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      deadline_at:
        type: string
      documentation:
        type: string
      documentation_label:
        type: string
      submission_message:
        type: string
      duration:
        type: string
      stage_id:
        type: integer
      tags:
        type: array
        description: 'this is a list of key value pairs eg. slug: name'
        items:
          type: string
      form_sections:
        type: array
        items:
            $ref: '#/definitions/FormSectionCreate'
  FormRead:
    title: FormRead
    x-stoplight:
      id: e0u0etkn01z17
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      type:
        type: string
      version:
        type: integer
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      duration:
        type: string
      deadline_at:
        type: string
      documentation:
        type: string
      documentation_label:
        type: string
      submission_message:
        type: string
      published:
        type: boolean
      stage_id:
        type: string
      form_sections:
        type: array
        items:
          $ref: '#/definitions/FormSectionRead'
      tags:
        type: array
        description: 'this is a list of key value pairs eg. slug: name'
        items:
          type: string
      updated_by:
        type: integer
      deleted_at:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  FormSectionCreate:
    title: FormSectionCreate
    x-stoplight:
      id: 97clxg83l8q3f
    type: object
    properties:
      order:
        type: integer
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      form_questions:
        type: array
        items:
            $ref: '#/definitions/FormQuestionCreate'
  FormSectionRead:
    title: FormSectionRead
    x-stoplight:
      id: scpnof2zuz3q3
    type: object
    properties:
      order:
        type: integer
      form_id:
        type: integer
      form_questions:
        type: array
        items:
          $ref: '#/definitions/FormQuestionRead'
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  FormQuestionRead:
    title: FormQuestionRead
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      form_section_id:
        type: integer
      parent_id:
        type: string
      linked_field_key:
        type: string
      children:
        type: array
        items:
          $ref: '#/definitions/FormQuestionRead'
      label:
        type: string
      validation:
        type: array
        items:
          type: string
      multichoice:
        type: boolean
      order:
        type: integer
      options:
        type: array
        items:
          $ref: '#/definitions/FormQuestionOptionRead'
      table_headers:
        type: array
        items:
          $ref: '#/definitions/FormTableHeaderRead'
      additional_text:
        type: string
      additional_url:
        type: string
      input_type:
        type: string
        enum:
          - date
          - text
          - long-text
          - select
          - checkboxes
          - radio
          - number
          - image
          - file
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  FormQuestionCreate:
    title: FormQuestionCreate
    type: object
    properties:
      child_form_questions:
        type: array
        items:
          $ref: '#/definitions/FormQuestionRead'
      additional_props:
        type: array
        items:
          type: object
      table_headers:
        type: array
        items:
          $ref: '#/definitions/FormTableHeaderRead'
      linked_field_key:
        type: string
      input_type:
        type: string
        enum:
          - date
          - text
          - long-text
          - select
          - checkboxes
          - radio
          - number
          - image
          - file
      label:
        type: string
      placeholder:
        type: string
      description:
        type: string
      validation:
        type: object
      multichoice:
        type: boolean
      order:
        type: integer
      options_list:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/FormQuestionOptionRead'
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  FormSectionUpdate:
    title: FormSectionUpdate
    x-stoplight:
      id: tlqkri2rdwi5w
    type: object
    properties:
      order:
        type: integer
  FormUpdate:
    title: FormUpdate
    x-stoplight:
      id: m4lcpf2li93rf
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      documentation:
        type: string
      documentation_label:
        type: string
      submission_message:
        type: string
      duration:
        type: string
  V2PaginationLinks:
    title: V2PaginationLinks
    properties:
      first:
        type: string
      last:
        type: string
      prev:
        type: string
      next:
        type: string
  V2PaginationCurrentLinks:
    title: V2PaginationCurrentLinks
    properties:
      url:
        type: string
      label:
        type: string
      active:
        type: boolean
  V2PaginationMeta:
    title: V2PaginationMeta
    properties:
      from:
        type: integer
      to:
        type: integer
      current_page:
        type: integer
      last_page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      path:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/V2PaginationCurrentLinks'
  V2SearchFilterSort:
    title: V2SearchFilterSort
    type: object
    properties:
      search:
        type: string
        description: 'search term to use on the collection'
      filter:
        type: string
        description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
      sort:
        type: string
        description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-name'
      per_page:
        type: integer
        description: 'number of results (per page) to return'
      page:
        type: integer
        description: 'page number you want results from'
  V2AdminOrganisationRead:
    title: AdminOrganisationRead
    type: object
    properties:
      uuid:
        type: string
      status:
        type: string
      readable_status:
        type: string
      type:
        type: string
      private:
        type: boolean
      name:
        type: string
      phone:
        type: string
      states:
        type: array
        items:
          type: string
      loan_status_types:
        type: array
        items:
          type: string
      land_systems:
        type: array
        items:
          type: string
      fund_utilisation:
        type: array
        items:
          type: string
      detailed_intervention_types:
        type: array
        items:
          type: string
      account_number_1:
        type: string
      account_number_2:
        type: string
      approach_of_marginalized_communities:
        type: string
      community_engagement_numbers_marginalized:
        type: string
      currency:
        type: string
      founding_date:
        type: string
      description:
        type: string
      countries:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      tree_species:
        type: array
        items:
          $ref: '#/definitions/V2TreeSpeciesRead'
      project_pitches:
        type: array
        items:
          $ref: '#/definitions/ProjectPitchRead'
      web_url:
        type: string
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
      hq_street_1:
        type: string
      hq_street_2:
        type: string
      hq_city:
        type: string
      hq_state:
        type: string
      hq_zipcode:
        type: string
      hq_country:
        type: string
      fin_start_month:
        type: integer
      fin_budget_3year:
        type: number
        format: float
      fin_budget_2year:
        type: number
        format: float
      fin_budget_1year:
        type: number
        format: float
      fin_budget_current_year:
        type: number
        format: float
      ha_restored_total:
        type: number
        format: float
      ha_restored_3year:
        type: number
        format: float
      relevant_experience_years:
        type: integer
      trees_grown_total:
        type: integer
      trees_grown_3year:
        type: integer
      tree_care_approach:
        type: string
      ft_permanent_employees:
        type: integer
      pt_permanent_employees:
        type: integer
      temp_employees:
        type: integer
      female_employees:
        type: integer
      male_employees:
        type: integer
      young_employees:
        type: integer
      additional_funding_details:
        type: string
      community_experience:
        type: string
      total_engaged_community_members_3yr:
        type: integer
      percent_engaged_women_3yr:
        type: integer
      percent_engaged_men_3yr:
        type: integer
      percent_engaged_under_35_3yr:
        type: integer
      percent_engaged_over_35_3yr:
        type: integer
      percent_engaged_smallholder_3yr:
        type: integer
      total_trees_grown:
        type: integer
      avg_tree_survival_rate:
        type: integer
      tree_maintenance_aftercare_approach:
        type: string
      restored_areas_description:
        type: string
      monitoring_evaluation_experience:
        type: string
      funding_history:
        type: string
      engagement_farmers:
        type: array
        items:
          type: string
      engagement_women:
        type: array
        items:
          type: string
      engagement_youth:
        type: array
        items:
          type: string
      engagement_non_youth:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      business_model:
        type: string
      subtype:
        type: string
      organisation_revenue_this_year:
        type: number
      shapefiles:
        type: array
        items:
          $ref: '#/definitions/ShapefileRead'
      bank_statements:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      previous_annual_reports:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      logo:
        $ref: '#/definitions/V2FileRead'
      cover:
        $ref: '#/definitions/V2FileRead'
      reference:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      additional:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_2year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_last_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_this_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_next_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      legal_registration:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      tags:
        type: array
        description: 'this is a list of key value pairs eg. slug: name'
        items:
          type: string
      created_at:
        type: string
      updated_at:
        type: string
  V2MonitoringOrganisationRead:
    title: V2MonitoringOrganisationRead
    type: object
    properties:
      uuid:
        type: string
      status:
        type: string
      users_status:
        type: string
      readable_status:
        type: string
      type:
        type: string
      private:
        type: boolean
      name:
        type: string
      phone:
        type: string
      founding_date:
        type: string
      description:
        type: string
      countries:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      tree_species:
        type: array
        items:
          $ref: '#/definitions/V2TreeSpeciesRead'
      web_url:
        type: string
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
      hq_street_1:
        type: string
      hq_street_2:
        type: string
      hq_city:
        type: string
      hq_state:
        type: string
      hq_zipcode:
        type: string
      hq_country:
        type: string
      fin_start_month:
        type: integer
      fin_budget_3year:
        type: number
        format: float
      fin_budget_2year:
        type: number
        format: float
      fin_budget_1year:
        type: number
        format: float
      fin_budget_current_year:
        type: number
        format: float
      ha_restored_total:
        type: number
        format: float
      ha_restored_3year:
        type: number
        format: float
      relevant_experience_years:
        type: integer
      trees_grown_total:
        type: integer
      trees_grown_3year:
        type: integer
      tree_care_approach:
        type: string
      logo:
        $ref: '#/definitions/V2FileRead'
      cover:
        $ref: '#/definitions/V2FileRead'
      reference:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      additional:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_2year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_last_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_this_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_next_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      legal_registration:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      tags:
        type: array
        description: 'this is a list of key value pairs eg. slug: name'
        items:
          type: string
      created_at:
        type: string
      updated_at:
        type: string
  V2AdminOrganisationUpdate:
    title: AdminOrganisationUpdate
    type: object
    properties:
      type:
        type: string
      private:
        type: boolean
      name:
        type: string
      phone:
        type: string
      founding_date:
        type: string
      description:
        type: string
      countries:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      tree_species:
        type: array
        items:
          $ref: '#/definitions/V2TreeSpeciesRead'
      web_url:
        type: string
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
      hq_street_1:
        type: string
      hq_street_2:
        type: string
      hq_city:
        type: string
      hq_state:
        type: string
      hq_zipcode:
        type: string
      hq_country:
        type: string
      fin_start_month:
        type: integer
      fin_budget_3year:
        type: number
        format: float
      fin_budget_2year:
        type: number
        format: float
      fin_budget_1year:
        type: number
        format: float
      fin_budget_current_year:
        type: number
        format: float
      ha_restored_total:
        type: number
        format: float
      ha_restored_3year:
        type: number
        format: float
      relevant_experience_years:
        type: integer
      trees_grown_total:
        type: integer
      trees_grown_3year:
        type: integer
      tree_care_approach:
        type: string
      ft_permanent_employees:
        type: integer
      pt_permanent_employees:
        type: integer
      temp_employees:
        type: integer
      female_employees:
        type: integer
      male_employees:
        type: integer
      young_employees:
        type: integer
      additional_funding_details:
        type: string
      community_experience:
        type: string
      total_engaged_community_members_3yr:
        type: integer
      percent_engaged_women_3yr:
        type: integer
      percent_engaged_men_3yr:
        type: integer
      percent_engaged_under_35_3yr:
        type: integer
      percent_engaged_over_35_3yr:
        type: integer
      percent_engaged_smallholder_3yr:
        type: integer
      total_trees_grown:
        type: integer
      avg_tree_survival_rate:
        type: integer
      tree_maintenance_aftercare_approach:
        type: string
      restored_areas_description:
        type: string
      monitoring_evaluation_experience:
        type: string
      funding_history:
        type: string
      engagement_farmers:
        type: array
        items:
          type: string
      engagement_women:
        type: array
        items:
          type: string
      engagement_youth:
        type: array
        items:
          type: string
      engagement_non_youth:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      business_model:
        type: string
      subtype:
        type: string
      organisation_revenue_this_year:
        type: number
      shapefiles:
        type: array
        items:
          $ref: '#/definitions/ShapefileRead'
      tags:
        type: array
        items:
          type: string
  V2CommonOptions:
    title: V2CommonOptions
    type: object
    properties:
      uuid:
        type: string
      slug:
        type: string
      alt_value:
        type: string
      label:
        type: string
  V2GenericList:
    title: V2GenericList
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      input_type:
        type: string
      option_list_key:
        type: string
      model_key:
        type: string
      options:
        type: array
        items:
          type: string
  V2OrganisationApproveRejectUser:
    title: OrganisationApproveRejectUser
    type: object
    properties:
      organisation_uuid:
        type: string
      user_uuid:
        type: string
    required:
      - organisation_uuid
      - user_uuid
  V2OrganisationUpdate:
    title: OrganisationUpdate
    type: object
    properties:
      type:
        type: string
        description: Available type are for-profit-organization, non-profit-organization, government-agency
      private:
        type: boolean
      name:
        type: string
      phone:
        type: string
      states:
        type: array
        items:
          type: string
      loan_status_types:
        type: array
        items:
          type: string
      land_systems:
        type: array
        items:
          type: string
      fund_utilisation:
        type: array
        items:
          type: string
      detailed_intervention_types:
        type: array
        items:
          type: string
      account_number_1:
        type: string
      account_number_2:
        type: string
      approach_of_marginalized_communities:
        type: string
      community_engagement_numbers_marginalized:
        type: string
      currency:
        type: string
      founding_date:
        type: string
      description:
        type: string
      countries:
        type: array
        items:
          type: string
      engagement_farmers:
        type: array
        items:
          type: string
      engagement_women:
        type: array
        items:
          type: string
      engagement_youth:
        type: array
        items:
          type: string
      engagement_non_youth:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      business_model:
        type: string
      subtype:
        type: string
      organisation_revenue_this_year:
        type: number
      languages:
        type: array
        items:
          type: string
      web_url:
        type: string
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
      hq_street_1:
        type: string
      hq_street_2:
        type: string
      hq_city:
        type: string
      hq_state:
        type: string
      hq_zipcode:
        type: string
      hq_country:
        type: string
      fin_start_month:
        type: integer
      fin_budget_3year:
        type: number
        format: float
      fin_budget_2year:
        type: number
        format: float
      fin_budget_1year:
        type: number
        format: float
      fin_budget_current_year:
        type: number
        format: float
      ha_restored_total:
        type: number
        format: float
      ha_restored_3year:
        type: number
        format: float
      relevant_experience_years:
        type: integer
      trees_grown_total:
        type: integer
      trees_grown_3year:
        type: integer
      tree_care_approach:
        type: string
      ft_permanent_employees:
        type: integer
      pt_permanent_employees:
        type: integer
      temp_employees:
        type: integer
      female_employees:
        type: integer
      male_employees:
        type: integer
      young_employees:
        type: integer
      additional_funding_details:
        type: string
      community_experience:
        type: string
      total_engaged_community_members_3yr:
        type: integer
      percent_engaged_women_3yr:
        type: integer
      percent_engaged_men_3yr:
        type: integer
      percent_engaged_under_35_3yr:
        type: integer
      percent_engaged_over_35_3yr:
        type: integer
      percent_engaged_smallholder_3yr:
        type: integer
      total_trees_grown:
        type: integer
      avg_tree_survival_rate:
        type: integer
      tree_maintenance_aftercare_approach:
        type: string
      restored_areas_description:
        type: string
      monitoring_evaluation_experience:
        type: string
      funding_history:
        type: string
      shapefiles:
        type: array
        items:
          $ref: '#/definitions/ShapefileRead'
      tags:
        type: array
        items:
          type: string
  V2OrganisationRead:
    title: OrganisationRead
    type: object
    properties:
      uuid:
        type: string
      type:
        type: string
      private:
        type: boolean
      name:
        type: string
      phone:
        type: string
      states:
        type: array
        items:
          type: string
      loan_status_types:
        type: array
        items:
          type: string
      land_systems:
        type: array
        items:
          type: string
      fund_utilisation:
        type: array
        items:
          type: string
      detailed_intervention_types:
        type: array
        items:
          type: string
      account_number_1:
        type: string
      account_number_2:
        type: string
      approach_of_marginalized_communities:
        type: string
      community_engagement_numbers_marginalized:
        type: string
      currency:
        type: string
      founding_date:
        type: string
      description:
        type: string
      countries:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      project_pitches:
        type: array
        items:
          $ref: '#/definitions/ProjectPitchRead'
      tree_species:
        type: array
        items:
          $ref: '#/definitions/V2TreeSpeciesRead'
      web_url:
        type: string
      facebook_url:
        type: string
      instagram_url:
        type: string
      linkedin_url:
        type: string
      twitter_url:
        type: string
      hq_street_1:
        type: string
      hq_street_2:
        type: string
      hq_city:
        type: string
      hq_state:
        type: string
      hq_zipcode:
        type: string
      hq_country:
        type: string
      fin_start_month:
        type: integer
      fin_budget_3year:
        type: number
        format: float
      fin_budget_2year:
        type: number
        format: float
      fin_budget_1year:
        type: number
        format: float
      fin_budget_current_year:
        type: number
        format: float
      ha_restored_total:
        type: number
        format: float
      ha_restored_3year:
        type: number
        format: float
      relevant_experience_years:
        type: integer
      trees_grown_total:
        type: integer
      trees_grown_3year:
        type: integer
      tree_care_approach:
        type: string
      ft_permanent_employees:
        type: integer
      pt_permanent_employees:
        type: integer
      temp_employees:
        type: integer
      female_employees:
        type: integer
      male_employees:
        type: integer
      young_employees:
        type: integer
      additional_funding_details:
        type: string
      community_experience:
        type: string
      total_engaged_community_members_3yr:
        type: integer
      percent_engaged_women_3yr:
        type: integer
      percent_engaged_men_3yr:
        type: integer
      percent_engaged_under_35_3yr:
        type: integer
      percent_engaged_over_35_3yr:
        type: integer
      percent_engaged_smallholder_3yr:
        type: integer
      total_trees_grown:
        type: integer
      avg_tree_survival_rate:
        type: integer
      tree_maintenance_aftercare_approach:
        type: string
      restored_areas_description:
        type: string
      monitoring_evaluation_experience:
        type: string
      funding_history:
        type: string
      engagement_farmers:
        type: array
        items:
          type: string
      engagement_women:
        type: array
        items:
          type: string
      engagement_youth:
        type: array
        items:
          type: string
      engagement_non_youth:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      business_model:
        type: string
      subtype:
        type: string
      organisation_revenue_this_year:
        type: number
      shapefiles:
        type: array
        items:
          $ref: '#/definitions/ShapefileRead'
      bank_statements:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      previous_annual_reports:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      logo:
        $ref: '#/definitions/V2FileRead'
      cover:
        $ref: '#/definitions/V2FileRead'
      reference:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      additional:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_2year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_last_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_this_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      op_budget_next_year:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      legal_registration:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      tags:
        type: array
        description: 'this is a list of key value pairs eg slug: name '
        items:
          type: string
  ShapefileRead:
    title: ShapefileRead
    type: object
    properties:
      uuid:
        type: string
      shapefileable_type:
        type: string
      shapefileable_id:
        type: integer
      geojson:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  V2AdminUserRead:
    title: AdminUserRead
    type: object
    properties:
      uuid:
        type: string
      status:
        type: string
      readable_status:
        type: string
      type:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      twitter:
        type: string
      whatsapp_phone:
        type: string
      date_added:
        type: string
  V2AdminUserUpdate:
    title: AdminUserUpdate
    type: object
    properties:
      type:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      facebook:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      twitter:
        type: string
      whatsapp_phone:
        type: string
      organisation:
        type: string
      monitoring_organisations:
        type: array
        items:
          $ref: '#/definitions/V2MonitoringOrganisationRead'
  V2FileRead:
    title: V2FileRead
    type: object
    properties:
      uuid:
        type: string
      url:
        type: string
      thumb_url:
        type: string
      collection_name:
        type: string
      title:
        type: string
      file_name:
        type: string
      mime_type:
        type: string
      size:
        type: integer
      lat:
        type: integer
      lng:
        type: integer
      is_public:
        type: boolean
      created_at:
        type: string
  V2FileGallery:
    title: V2FileGallery
    type: object
    properties:
      uuid:
        type: string
      file_url:
        type: string
      thumb_url:
        type: string
      file_name:
        type: string
      created_date:
        type: string
      model_name:
        type: string
      is_public:
        type: boolean
      location:
        type: object
        properties:
          lat:
            type: number
          lng:
            type: number
      mime_type:
        type: string
      file_size:
        type: integer
      collection_name:
        type: string
  V2FileGalleryLite:
    title: V2FileGallery
    type: object
    properties:
      uuid:
        type: string
      thumb_url:
        type: string
      location:
        type: object
        properties:
          lat:
            type: number
          lng:
            type: number
  V2TreeSpeciesCreate:
    title: V2TreeSpeciesCreate
    x-stoplight:
      id: 5wwltusko93cr
    type: object
    properties:
      model_type:
        type: string
      model_uuid:
        type: integer
      name:
        type: string
      amount:
        type: integer
  V2TreeSpeciesRead:
    title: V2TreeSpeciesRead
    x-stoplight:
      id: 04vvsvyndvy8n
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      name:
        type: string
      amount:
        type: integer
  V2TreeSpeciesUpdate:
    title: V2TreeSpeciesUpdate
    x-stoplight:
      id: cp2imcqm79i8w
    type: object
    properties:
      name:
        type: string
      amount:
        type: integer
  V2CoreTeamLeaderCreate:
    title: V2CoreTeamLeaderCreate
    type: object
    properties:
      organisation_id:
        type: string
      position:
        type: string
      gender:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
      age:
        type: integer
  V2CoreTeamLeaderRead:
    title: V2CoreTeamLeaderRead
    x-stoplight:
      id: 04vvsvyndvy8n
    type: object
    properties:
      uuid:
        type: string
      organisation_id:
        type: string
      position:
        type: string
      gender:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
      age:
        type: integer
  V2CoreTeamLeaderUpdate:
    title: V2CoreTeamLeaderUpdate
    type: object
    properties:
      position:
        type: string
      gender:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
      age:
        type: integer
  V2LeadershipTeamCreate:
    title: V2LeadershipTeamCreate
    type: object
    properties:
      organisation_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      position:
        type: string
      gender:
        type: string
      age:
        type: integer
  V2LeadershipTeamRead:
    title: V2LeadershipTeamRead
    x-stoplight:
      id: 04vvsvyndvy8n
    type: object
    properties:
      uuid:
        type: string
      organisation_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      position:
        type: string
      gender:
        type: string
      age:
        type: integer
  V2LeadershipTeamUpdate:
    title: V2LeadershipTeamUpdate
    type: object
    properties:
      position:
        type: string
      gender:
        type: string
      age:
        type: integer
  V2FundingTypeCreate:
    title: V2FundingTypeCreate
    type: object
    properties:
      organisation_id:
        type: string
      source:
        type: string
      amount:
        type: integer
      year:
        type: integer
      type:
        type: string
  V2FundingTypeRead:
    title: V2FundingTypeRead
    x-stoplight:
      id: 04vvsvyndvy8n
    type: object
    properties:
      uuid:
        type: string
      organisation_id:
        type: string
      source:
        type: string
      amount:
        type: integer
      year:
        type: integer
      type:
        type: string
  V2FundingTypeUpdate:
    title: V2FundingTypeUpdate
    type: object
    properties:
      source:
        type: string
      amount:
        type: integer
      year:
        type: integer
      type:
        type: string
  ProjectPitchCreate:
    title: ProjectPitchCreate
    x-stoplight:
      id: xo976uxy5fkzu
    type: object
    properties:
      organisation_id:
        type: string
      project_name:
        type: string
      project_objectives:
        type: string
      how_discovered:
        type: string
      project_country:
        type: array
        items:
          type: string
      project_county_district:
        type: string
      land_systems:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      restoration_intervention_types:
        type: array
        items:
          type: string
      capacity_building_needs:
        type: array
        items:
          type: string
      total_trees:
        type: integer
      total_hectares:
        type: integer
      project_budget:
        type: integer
      expected_active_restoration_start_date:
        type: string
      expected_active_restoration_end_date:
        type: string
      description_of_project_timeline:
        type: string
      proj_partner_info:
        type: string
      land_tenure_proj_area:
        type: array
        items:
          type: string
      landholder_comm_engage:
        type: string
      proj_success_risks:
        type: string
      monitor_eval_plan:
        type: string
      proj_boundary:
        type: string
      sustainable_dev_goals:
        type: array
        items:
          type: string
      proj_area_description:
        type: string
      proposed_num_sites:
        type: integer
        minimum: 0
        maximum: 4294967295
      environmental_goals:
        type: string
      proposed_num_nurseries:
        type: integer
        minimum: 0
        maximum: 4294967295
      curr_land_degradation:
        type: string
      proj_impact_socieconom:
        type: string
      proj_impact_foodsec:
        type: string
      proj_impact_watersec:
        type: string
      proj_impact_jobtypes:
        type: string
      num_jobs_created:
        type: integer
        minimum: 0
        maximum: 4294967295
      pct_employees_men:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_18to35:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_older35:
        type: integer
        minimum: 0
        maximum: 100
      proj_beneficiaries:
          type: integer
      pct_beneficiaries_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_small:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_large:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_youth:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_classes:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_tribes:
        type: integer
        minimum: 0
        maximum: 100
      monitoring_evaluation_plan:
        type: string
      main_degradation_causes:
        type: string
      seedlings_source:
        type: string
  ProjectPitchUpdate:
    title: ProjectPitchUpdate
    x-stoplight:
      id: w5u1xed0to2g6
    type: object
    properties:
      funding_programme_id:
        type: integer
      project_name:
        type: string
      project_objectives:
        type: string
      project_county_district:
        type: string
      how_discovered:
        type: string
      project_budget:
        type: integer
      project_country:
        type: array
        items:
          type: string
      land_systems:
        type: array
        items:
          type: string
      tree_restoration_practices:
        type: array
        items:
          type: string
      restoration_intervention_types:
        type: array
        items:
          type: string
      capacity_building_needs:
        type: array
        items:
          type: string
      total_hectares:
        type: integer
      total_trees:
        type: integer
      expected_active_restoration_start_date:
        type: string
      expected_active_restoration_end_date:
        type: string
      description_of_project_timeline:
        type: string
      proj_partner_info:
        type: string
      land_tenure_proj_area:
        type: array
        items:
          type: string
      landholder_comm_engage:
        type: string
      proj_success_risks:
        type: string
      monitor_eval_plan:
        type: string
      proj_boundary:
        type: string
      sustainable_dev_goals:
        type: array
        items:
          type: string
      proj_area_description:
        type: string
      proposed_num_sites:
        type: integer
        minimum: 0
        maximum: 4294967295
      environmental_goals:
        type: string
      main_degradation_causes:
        type: string
      seedlings_source:
        type: string
      proposed_num_nurseries:
        type: integer
        minimum: 0
        maximum: 4294967295
      curr_land_degradation:
        type: string
      proj_impact_socieconom:
        type: string
      proj_impact_foodsec:
        type: string
      proj_impact_watersec:
        type: string
      proj_impact_jobtypes:
        type: string
      num_jobs_created:
        type: integer
        minimum: 0
        maximum: 4294967295
      pct_employees_men:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_18to35:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_older35:
        type: integer
        minimum: 0
        maximum: 100
      proj_beneficiaries:
          type: integer
      pct_beneficiaries_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_small:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_large:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_youth:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_classes:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_tribes:
        type: integer
        minimum: 0
        maximum: 100
      monitoring_evaluation_plan:
        type: string
  V2SiteLiteRead:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      framework_key:
        type: string
      description:
        type: string
      control_site:
        type: integer
      status:
        type: string
      readable_status:
        type: string
      number_of_trees_planted:
        type: integer
      start_date:
        type: string
      created_at:
        type: string
  V2NurseryLiteRead:
    title: V2NurseryLiteRead
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      project:
        $ref: '#/definitions/ProjectLiteRead'
      establishment_date:
        type: string
      framework_key:
        type: string
      framework_uuid:
        type: string
      status:
        type: string
      readable_status:
        type: string
      start_date:
        type: string
      created_date:
        type: string
  V2SiteRead:
    type: object
    properties:
      id:
        type: integer
      site_id:
        type: integer
      terrafund_site_id:
        type: integer
      programme_id:
        type: integer
      terrafund_programme_id:
        type: integer
      control_site:
        type: boolean
      name:
        type: string
      country:
        type: string
      project_country:
        type: string
      continent:
        type: string
      description:
        type: string
      planting_pattern:
        type: string
      stratification_for_heterogeneity:
        type: string
      history:
        type: string
      workdays_paid:
        type: integer
      workdays_volunteer:
        type: integer
      total_workdays:
        type: integer
      establishment_date:
        type: string
        format: date
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      technical_narrative:
        type: string
      public_narrative:
        type: string
      aim_survival_rate:
        type: number
      aim_year_five_crown_cover:
        type: number
      aim_direct_seeding_survival_rate:
        type: number
      aim_natural_regeneration_trees_per_hectare:
        type: number
      aim_natural_regeneration_hectares:
        type: number
      aim_soil_condition:
        type: string
      aim_number_of_mature_trees:
        type: integer
      hectares_to_restore:
        type: number
      landscape_community_contribution:
        type: string
      disturbances:
        type: string
      boundary_geojson:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ProjectLiteRead:
    title: ProjectLiteRead
    type: object
    properties:
      id:
        type: string
      uuid:
        type: string
      status:
        type: string
      organisation:
        $ref: '#/definitions/V2OrganisationRead'
      planting_start_date:
        type: string
      framework_key:
        type: string
      has_monitoring_data:
        type: boolean
  ProjectPitchRead:
    title: ProjectPitchRead
    x-stoplight:
      id: rsuskf5on1pya
    type: object
    properties:
      id:
        type: string
      uuid:
        type: string
      status:
        type: string
      readable_status:
        type: string
      organisation_id:
        type: string
      funding_programmes:
        $ref: '#/definitions/LimitedFundingProgrammeRead'
      tree_species:
        type: array
        items:
          $ref: '#/definitions/V2TreeSpeciesRead'
      project_name:
        type: string
      how_discovered:
        type: string
      project_objectives:
        type: string
      project_country:
        type: array
        items:
          type: string
      land_systems:
        type: array
        items:
          type: string
      project_county_district:
        type: string
      restoration_intervention_types:
        type: array
        items:
          type: string
      total_hectares:
        type: integer
      project_budget:
        type: integer
      total_trees:
        type: integer
      capacity_building_needs:
        type: array
        items:
          type: string
      main_degradation_causes:
        type: string
      seedlings_source:
        type: string
      additional:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      restoration_photos:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      cover:
          $ref: '#/definitions/V2FileRead'
      proof_of_land_tenure_mou:
        type: array
        items:
          $ref: '#/definitions/V2FileRead'
      detailed_project_budget:
          $ref: '#/definitions/V2FileRead'
      expected_active_restoration_start_date:
        type: string
      expected_active_restoration_end_date:
        type: string
      description_of_project_timeline:
        type: string
      proj_partner_info:
        type: string
      land_tenure_proj_area:
        type: array
        items:
          type: string
      landholder_comm_engage:
        type: string
      proj_success_risks:
        type: string
      monitor_eval_plan:
        type: string
      proj_boundary:
        type: string
      sustainable_dev_goals:
        type: array
        items:
          type: string
      proj_area_description:
        type: string
      proposed_num_sites:
        type: integer
        minimum: 0
        maximum: 4294967295
      environmental_goals:
        type: string
      proposed_num_nurseries:
        type: integer
        minimum: 0
        maximum: 4294967295
      curr_land_degradation:
        type: string
      proj_impact_socieconom:
        type: string
      proj_impact_foodsec:
        type: string
      proj_impact_watersec:
        type: string
      proj_impact_jobtypes:
        type: string
      num_jobs_created:
        type: integer
        minimum: 0
        maximum: 4294967295
      pct_employees_men:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_18to35:
        type: integer
        minimum: 0
        maximum: 100
      pct_employees_older35:
        type: integer
        minimum: 0
        maximum: 100
      proj_beneficiaries:
          type: integer
      pct_beneficiaries_women:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_small:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_large:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_youth:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_classes:
        type: integer
        minimum: 0
        maximum: 100
      pct_beneficiaries_scheduled_tribes:
        type: integer
        minimum: 0
        maximum: 100
      monitoring_evaluation_plan:
        type: string
      deleted_at:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  AuditRead:
    title: AuditRead
    type: object
    properties:
      event:
        type: string
      user_id:
        type: integer
      old_values:
        type: object
      new_values:
        type: object
      created_at:
        type: string
      updated_at:
        type: string
  FormSubmissionRead:
    title: FormSubmissionRead
    x-stoplight:
      id: u7ul6m0rkvj6m
    type: object
    properties:
      id:
        type: string
      uuid:
        type: string
      name:
        type: string
      audits:
        type: array
        items:
          $ref: '#/definitions/AuditRead'
      form:
        $ref: '#/definitions/FormRead'
      stage:
        $ref: '#/definitions/StageLiteRead'
      answers:
        type: string
      status:
        type: string
      readable_status:
        type: string
      feedback:
        type: string
      feedback_fields:
        type: array
        items:
          type: string
      next_stage_uuid:
        type: string
      previous_stage_uuid:
        type: string
      tags:
        type: array
        description: 'this is a list of key value pairs eg slug: name '
        items:
          type: string
      updated_by:
        type: string
      deleted_at:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  StageRead:
      title: StageRead
      x-stoplight:
        id: qtkhrj889wvwc
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
        name:
          type: string
        deadline_at:
          type: string
        status:
          type: string
        readable_status:
          type: string
        funding_programme_id:
          type: integer
        order:
          type: integer
        forms:
          $ref: '#/definitions/FormRead'
        deleted_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
  StageLiteRead:
      title: StageLiteRead
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        status:
          type: string
        readable_status:
          type: string
  StageCreate:
    title: StageCreate
    x-stoplight:
      id: q1bwtmu9aj98a
    type: object
    properties:
      name:
        type: string
      funding_programme_id:
        type: integer
      form_id:
        type: string
      order:
        type: integer
      deadline_at:
        type: string
  FormQuestionOptionRead:
    title: FormQuestionOptionRead
    x-stoplight:
      id: ihpffrpq780e4
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      form_question_id:
        type: integer
      label:
        type: string
      order:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  FormTableHeaderRead:
    title: FormTableHeaderRead
    type: object
    properties:
      id:
        type: integer
      uuid:
        type: string
      form_question_id:
        type: integer
      label:
        type: string
      order:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
      deleted_at:
        type: string
  FormSubmissionCreate:
    title: FormSubmissionCreate
    x-stoplight:
      id: yuvkg8bgvnerq
    type: object
    properties:
      form_uuid:
        type: string
      project_pitch_uuid:
        type: string
  FormSubmissionUpdate:
    title: FormSubmissionUpdate
    type: object
    properties:
      status:
        type: string
      answers:
        type: array
        items:
          type: object
          properties:
            question_id:
              type: integer
            value:
              type: string
            options:
              type: array
              items:
                type: string
  FormSubmissionLiteRead:
    title: FormSubmissionLiteRead
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      status:
        type: string
      readable_status:
        type: integer
      audits:
        type: array
        items:
          $ref: '#/definitions/AuditRead'
      form_uuid:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      stage:
        type: object
        properties:
          uuid:
            type: string
          name:
            type: string
          order:
            type: integer
  ApplicationLiteRead:
    title: ApplicationLiteRead
    type: object
    properties:
      uuid:
        type: string
      form_submissions:
        type: array
        items:
          $ref: '#/definitions/FormSubmissionLiteRead'
      current_submission:
        type: object
        $ref: '#/definitions/FormSubmissionLiteRead'
      funding_programme_name:
        type: integer
      funding_programme_uuid:
        type: string
      funding_programme_status:
        type: string
      organisation_name:
        type: string
      organisation_uuid:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  ApplicationRead:
    title: ApplicationLiteRead
    type: object
    properties:
      uuid:
        type: string
      form_submissions:
        type: array
        items:
          type: object
          $ref: '#/definitions/FormSubmissionRead'
      current_submission:
        type: object
        $ref: '#/definitions/FormSubmissionRead'
      funding_programme:
        type: object
        $ref: '#/definitions/FundingProgramme'
      organisation:
        type: object
        $ref: '#/definitions/V2AdminOrganisationRead'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RegisterUserCreate:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      password:
        type: string
      job_role:
        type: string
      role_id:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      phone_number:
        type: string
      whatsapp_phone:
        type: string
      callback_url:
        type: string
  RegisterUserRead:
    type: object
    properties:
      id:
        type: integer
      organisation_id:
        type: integer
      organisation_name:
        type: string
      my_organisation:
        $ref: '#/definitions/V2AdminOrganisationRead'
      my_monitoring_organisations:
        type: array
        items:
          $ref: '#/definitions/V2MonitoringOrganisationRead'
      first_name:
        type: string
      last_name:
        type: string
      email_address:
        type: string
      email_address_verified_at:
        type: string
        format: date-time
      role:
        type: string
      role_id:
        type: string
      last_logged_in_at:
        type: string
        format: date-time
      job_role:
        type: string
      facebook:
        type: string
      twitter:
        type: string
      instagram:
        type: string
      linkedin:
        type: string
      avatar:
        type: string
      phone_number:
        type: string
      whatsapp_phone:
        type: string
      has_ppc_projects:
        type: boolean
      has_terrafund_projects:
        type: boolean
paths:
  '/organisations/{ID}/users':
    get:
      summary: Read an organisation's users
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaskedUserReadAll'
  '/organisations/{ID}/users/inspect':
    get:
      summary: Inspect an organisation's users
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAll'
  /users:
    post:
      summary: Create a user
      tags:
        - Users
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserRead'
  '/users/{ID}':
    patch:
      summary: Update a user
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserRead'
    get:
      summary: Read a user
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserRead'
  /users/invite:
    post:
      summary: Invite a user
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInvite'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserRead'
  /users/accept:
    post:
      summary: Create a user from an invite
      tags:
        - Users
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserAccept'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserRead'
  /admins:
    get:
      summary: Read all admins
      tags:
        - Admins
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminReadAll'
  '/admins/{ID}':
    patch:
      summary: Update an admin
      tags:
        - Admins
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdminUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminRead'
    get:
      summary: Read an admin
      tags:
        - Admins
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdminRead'
  /admins/invite:
    post:
      summary: Invite an admin
      tags:
        - Admins
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdminInvite'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AdminRead'
  /admins/accept:
    post:
      summary: Create an admin from an invite
      tags:
        - Admins
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdminAccept'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AdminRead'
  /auth/login:
    post:
      summary: Log a user or admin in
      tags:
        - Auth
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthLogIn'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TokenRead'
  /auth/logout:
    get:
      summary: Log the logged in user or admin out
      tags:
        - Auth
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /auth/refresh:
    get:
      summary: Refresh the logged in user's or admin's JWT token
      tags:
        - Auth
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenRead'
  /auth/verify:
    patch:
      summary: Verify the logged in user's or admin's email address
      tags:
        - Auth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthVerify'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /v2/auth/verify:
    patch:
      summary: Verify a user by token
      tags:
        - Auth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthVerify'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /auth/resend:
    get:
      summary: Send a verification email to the logged in user or admin
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            type: object
            properties:
              callback_url:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /v2/users/resend:
    post:
      summary: Send a verification email to an email, if it exists
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            type: object
            properties:
              callback_url:
                type: string
              email_address:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /auth/reset:
    post:
      summary: Send a password reset email to a user or admin
      tags:
        - Auth
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthReset'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /auth/change:
    patch:
      summary: Reset a user's or admin's password
      tags:
        - Auth
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthChange'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /auth/me:
    get:
      summary: Read the logged in user or admin
      tags:
        - Auth
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserRead'
  /auth/delete_me:
    parameters: []
    delete:
      summary: Deletes and logs out current user
      operationId: delete-auth-delete_me
      tags:
        - Users
      responses:
        '200':
          description: OK
  /countries:
    get:
      summary: Read all countries
      tags:
        - Countries
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountryReadAll'
  /organisation_categories:
    get:
      summary: Read all organisation categories
      tags:
        - Organisation Categories
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationCategoryReadAll'
  /organisations:
    post:
      summary: Create an organisation
      tags:
        - Organisations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
    get:
      summary: Read all organisations
      tags:
        - Organisations
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationReadAll'
  '/organisations/{ID}':
    get:
      summary: Read an organisation
      tags:
        - Organisations
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaskedOrganisationRead'
    patch:
      summary: Update an organisation
      tags:
        - Organisations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
  '/organisations/{ID}/inspect':
    get:
      summary: Inspect an organisation
      tags:
        - Organisations
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationRead'
  '/organisation_versions/{ID}':
    get:
      summary: Read an organisation version
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
    delete:
      summary: Delete an organisation version
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/organisation_versions/{ID}/approve':
    patch:
      summary: Approve an organisation version
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
  '/organisation_versions/{ID}/revive':
    patch:
      summary: Revive an organisation version
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
  '/organisation_versions/{ID}/reject':
    patch:
      summary: Reject an organisation version
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionRead'
  '/organisations/{ID}/organisation_versions':
    get:
      summary: Read an organisation's organisation versions
      tags:
        - Organisation Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationVersionReadAll'
  /uploads:
    post:
      summary: Create an upload
      tags:
        - Uploads
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: upload
          in: formData
          required: true
          type: file
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UploadCreate'
  /uploads/{ID}/update:
    put:
      summary: Update an upload
      tags:
        - Uploads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: title
          in: formData
          required: true
          type: string
      responses:
        '200':
          description: Updated
          schema:
            $ref: '#/definitions/UploadCreate'
  /uploads/socioeconomic_benefits:
    post:
      summary: 'Upload and assign a socio-economic benefits doc to a programme, site or site submission'
      tags:
        - Uploads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadSocioEconomicBenefits'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadSocioEconomicBenefitsRead'
    patch:
      summary: Update socio-economic benefits doc on a programme or site
      tags:
        - Uploads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadSocioEconomicBenefits'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadSocioEconomicBenefitsRead'
  /uploads/socioeconomic_benefits/template:
    get:
      summary: Download a template for the socioeconomic benefits document
      tags:
        - Uploads
      produces:
        - application/xlsx
      responses:
        '200':
          description: OK
          schema:
            type: file
  /uploads/socioeconomic_benefits/template/programme_submission:
    get:
      summary: Download a template for the programme submission socioeconomic benefits document
      tags:
        - Uploads
      produces:
        - application/xlsx
      responses:
        '200':
          description: OK
          schema:
            type: file
  /uploads/socioeconomic_benefits/template/site_submission:
    get:
      summary: Download a template for the site submission socioeconomic benefits document
      tags:
        - Uploads
      produces:
        - application/xlsx
      responses:
        '200':
          description: OK
          schema:
            type: file
  /uploads/stratification/example:
    get:
      summary: Download an example stratification document
      tags:
        - Sites
        - Uploads
      produces:
        - image/png
      responses:
        '200':
          description: OK
          schema:
            type: file
  /uploads/socioeconomic_benefits/template/csv:
    get:
      summary: Download a CSV template for the socioeconomic benefits document
      tags:
        - Uploads
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /site/tree_species/template/csv:
    get:
      summary: Download a CSV template for tree species import
      tags:
        - Uploads
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /submission/tree_species/template/csv:
    get:
      summary: Download a CSV template for tree species submissions
      tags:
        - Uploads
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /submission/tree_species/template/csv/example:
    get:
      summary: Download a CSV example
      tags:
        - Uploads
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /uploads/site_programme_media:
    post:
      summary: Register a media upload to a programme or site
      tags:
        - Uploads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadMedia'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/UploadMediaRead'
  /team_members:
    post:
      summary: Create a team member
      tags:
        - Team Members
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TeamMemberCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TeamMemberRead'
  '/team_members/{ID}':
    get:
      summary: Read a team member
      tags:
        - Team Members
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TeamMemberRead'
    patch:
      summary: Update a team member
      tags:
        - Team Members
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TeamMemberUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TeamMemberRead'
    delete:
      summary: Delete a team member
      tags:
        - Team Members
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/organisations/{ID}/team_members':
    get:
      summary: Read an organisation's team members
      tags:
        - Team Members
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MaskedTeamMemberReadAll'
  '/organisations/{ID}/team_members/inspect':
    get:
      summary: Inspect an organisation's team members
      tags:
        - Team Members
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TeamMemberReadAll'
  /offer_documents:
    post:
      summary: Create an offer document
      tags:
        - Offer Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferDocumentCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OfferDocumentRead'
  '/offer_documents/{ID}':
    get:
      summary: Read an offer document
      tags:
        - Offer Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferDocumentRead'
    patch:
      summary: Update an offer document
      tags:
        - Offer Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferDocumentUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferDocumentRead'
    delete:
      summary: Delete an offer document
      tags:
        - Offer Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/offers/{ID}/offer_documents':
    get:
      summary: Read an offer's offer documents
      tags:
        - Offer Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferDocumentReadAll'
  /document_types:
    get:
      summary: Read all document types
      tags:
        - Document Types
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DocumentTypeReadAll'
  /organisation_documents:
    post:
      summary: Create an organisation document
      tags:
        - Organisation Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationDocumentCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
  '/organisation_documents/{ID}':
    get:
      summary: Read an organisation document
      tags:
        - Organisation Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentRead'
    patch:
      summary: Update an organisation document
      tags:
        - Organisation Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationDocumentUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
    delete:
      summary: Delete an organisation document
      tags:
        - Organisation Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/organisations/{ID}/organisation_documents':
    get:
      summary: Read an organisation's organisation documents
      tags:
        - Organisation Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentReadAll'
  '/organisations/{ID}/organisation_documents/inspect':
    get:
      summary: Inspect an organisation's organisation documents
      tags:
        - Organisation Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionReadAll'
  '/organisation_document_versions/{ID}':
    get:
      summary: Read an organisation document version
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
    delete:
      summary: Delete an organisation document version
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/organisation_document_versions/{ID}/approve':
    patch:
      summary: Approve an organisation document version
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
  '/organisation_document_versions/{ID}/revive':
    patch:
      summary: Revive an organisation document version
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
  '/organisation_document_versions/{ID}/reject':
    patch:
      summary: Reject an organisation document version
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionRead'
  '/organisation_documents/{ID}/organisation_document_versions':
    get:
      summary: Read an organisation document's organisation document versions
      tags:
        - Organisation Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationDocumentVersionReadAll'
  /offers:
    post:
      summary: Create an offer
      tags:
        - Offers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OfferRead'
  /offers/search:
    post:
      summary: Search all offers
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/FilterSearch'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferReadAll'
  /offers/most_recent:
    get:
      summary: Read all offers by created date
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferReadAll'
  '/offers/{ID}':
    get:
      summary: Read an offer
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferRead'
    patch:
      summary: Update an offer
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferRead'
  '/organisations/{ID}/offers':
    get:
      summary: Read an organisation's offers
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferReadAll'
  '/organisations/{ID}/offers/inspect':
    get:
      summary: Inspect an organisation's offers
      tags:
        - Offers
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferReadAll'
  '/offers/{ID}/visibility':
    patch:
      summary: Update an offer's visibility
      tags:
        - Offers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferVisibility'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferRead'
  /offer_contacts:
    post:
      summary: Create an offer contact
      tags:
        - Offer Contacts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OfferContactCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OfferContactRead'
  '/offer_contacts/{ID}':
    delete:
      summary: Delete an offer contact
      tags:
        - Offer Contacts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/offers/{ID}/offer_contacts':
    get:
      summary: Read an offer's offer contacts
      tags:
        - Offer Contacts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OfferContactReadAll'
  /pitch_contacts:
    post:
      summary: Create a pitch contact
      tags:
        - Pitch Contacts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchContactCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PitchContactRead'
  '/pitch_contacts/{ID}':
    delete:
      summary: Delete a pitch contact
      tags:
        - Pitch Contacts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitches/{ID}/pitch_contacts':
    get:
      summary: Read a pitch's pitch contacts
      tags:
        - Pitch Contacts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchContactReadAll'
  /land_types:
    get:
      summary: Read all land types
      tags:
        - Land Types
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandTypeReadAll'
  /funding_brackets:
    get:
      summary: Read all funding brackets
      tags:
        - Funding Brackets
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingBracketReadAll'
  /restoration_methods:
    get:
      summary: Read all restoration methods
      tags:
        - Restoration Methods
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodReadAll'
  /visibilities:
    get:
      summary: Read all visibilities
      tags:
        - Visibilities
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VisibilityReadAll'
  /revenue_drivers:
    get:
      summary: Read all revenue drivers
      tags:
        - Revenue Drivers
      security: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RevenueDriverReadAll'
  /pitches:
    post:
      summary: Create a pitch
      tags:
        - Pitches
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PitchVersionRead'
  /pitches/search:
    post:
      summary: Search all pitches
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/FilterSearch'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchReadAll'
  /continents/pitches:
    get:
      summary: Count all approved pitches by continent
      tags:
        - Pitches
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchByContinentReadAll'
  /pitches/most_recent:
    get:
      summary: Read all approved pitches by created date
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchReadAll'
  '/continents/{CONTINENT}/pitches':
    get:
      summary: Read all approved pitches by continent
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: CONTINENT
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchReadAll'
  /users/all:
    get:
      summary: 'As an admin, get all users'
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAllPaginated'
  /users/unverified:
    get:
      summary: 'As an admin, get all unverified users'
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAllPaginated'
  /users/resend:
    post:
      summary: 'As an admin, resend a verification email to a user'
      tags:
        - Users
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserResend'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserRead'
  '/pitches/{ID}':
    get:
      summary: Read a pitch
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchRead'
    patch:
      summary: Update a pitch
      tags:
        - Pitches
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionRead'
  '/organisations/{ID}/pitches':
    get:
      summary: Read an organisation's pitches
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchReadAll'
  '/organisations/{ID}/pitches/inspect':
    get:
      summary: Inspect an organisation's pitches
      tags:
        - Pitches
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionReadAll'
  '/pitches/{ID}/visibility':
    patch:
      summary: Update a pitch's visibility
      tags:
        - Pitches
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchVisibility'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchRead'
  '/pitch_versions/{ID}':
    get:
      summary: Read a pitch version
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionRead'
    delete:
      summary: Delete a pitch version
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitch_versions/{ID}/approve':
    patch:
      summary: Approve a pitch version
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionRead'
  '/pitch_versions/{ID}/revive':
    patch:
      summary: Revive a pitch version
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionRead'
  '/pitch_versions/{ID}/reject':
    patch:
      summary: Reject a pitch version
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionRead'
  '/pitches/{ID}/pitch_versions':
    get:
      summary: Read a pitch's pitch versions
      tags:
        - Pitch Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchVersionReadAll'
  /carbon_certifications:
    post:
      summary: Create a carbon certification
      tags:
        - Carbon Certifications
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CarbonCertificationCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
  '/carbon_certifications/{ID}':
    get:
      summary: Read a carbon certification
      tags:
        - Carbon Certifications
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationRead'
    patch:
      summary: Update a carbon certification
      tags:
        - Carbon Certifications
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CarbonCertificationUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
    delete:
      summary: Delete a carbon certification
      tags:
        - Carbon Certifications
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitches/{ID}/carbon_certifications':
    get:
      summary: Read a pitch's carbon certifications
      tags:
        - Carbon Certifications
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationReadAll'
  '/pitches/{ID}/carbon_certifications/inspect':
    get:
      summary: Inspect a pitch's carbon certifications
      tags:
        - Carbon Certifications
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionReadAll'
  '/carbon_certification_versions/{ID}':
    get:
      summary: Read a carbon certification version
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
    delete:
      summary: Delete a carbon certification version
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/carbon_certification_versions/{ID}/approve':
    patch:
      summary: Approve a carbon certification version
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
  '/carbon_certification_versions/{ID}/revive':
    patch:
      summary: Revive a carbon certification version
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
  '/carbon_certification_versions/{ID}/reject':
    patch:
      summary: Reject a carbon certification version
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CarbonCertificationVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionRead'
  '/carbon_certifications/{ID}/carbon_certification_versions':
    get:
      summary: Read a carbon certification's carbon certification versions
      tags:
        - Carbon Certification Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CarbonCertificationVersionReadAll'
  /pitch_documents:
    post:
      summary: Create a pitch document
      tags:
        - Pitch Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchDocumentCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
  '/pitch_documents/{ID}':
    get:
      summary: Read a pitch document
      tags:
        - Pitch Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentRead'
    patch:
      summary: Update a pitch document
      tags:
        - Pitch Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchDocumentUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
    delete:
      summary: Delete a pitch document
      tags:
        - Pitch Documents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitches/{ID}/pitch_documents':
    get:
      summary: Read a pitch's pitch documents
      tags:
        - Pitch Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentReadAll'
  '/pitches/{ID}/pitch_documents/inspect':
    get:
      summary: Inspect a pitch's pitch documents
      tags:
        - Pitch Documents
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionReadAll'
  '/pitch_document_versions/{ID}':
    get:
      summary: Read a pitch document version
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
    delete:
      summary: Delete a pitch document version
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitch_document_versions/{ID}/approve':
    patch:
      summary: Approve a pitch document version
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
  '/pitch_document_versions/{ID}/revive':
    patch:
      summary: Revive a pitch document version
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
  '/pitch_document_versions/{ID}/reject':
    patch:
      summary: Reject a pitch document version
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PitchDocumentVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionRead'
  '/pitch_documents/{ID}/pitch_document_versions':
    get:
      summary: Read a pitch document's pitch document versions
      tags:
        - Pitch Document Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchDocumentVersionReadAll'
  /restoration_method_metrics:
    post:
      summary: Create a restoration method metric
      tags:
        - Restoration Method Metrics
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestorationMethodMetricCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
  '/restoration_method_metrics/{ID}':
    get:
      summary: Read a restoration method metric
      tags:
        - Restoration Method Metrics
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricRead'
    patch:
      summary: Update a restoration method metric
      tags:
        - Restoration Method Metrics
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestorationMethodMetricUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
    delete:
      summary: Delete a restoration method metric
      tags:
        - Restoration Method Metrics
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/pitches/{ID}/restoration_method_metrics':
    get:
      summary: Read a pitch's restoration method metrics
      tags:
        - Restoration Method Metrics
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricReadAll'
  '/pitches/{ID}/restoration_method_metrics/inspect':
    get:
      summary: Inspect a pitch's restoration method metrics
      tags:
        - Restoration Method Metrics
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionReadAll'
  '/restoration_method_metric_versions/{ID}':
    get:
      summary: Read a restoration method metric version
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
    delete:
      summary: Delete a restoration method metric version
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/restoration_method_metric_versions/{ID}/approve':
    patch:
      summary: Approve a restoration method metric version
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
  '/restoration_method_metric_versions/{ID}/revive':
    patch:
      summary: Revive a restoration method metric version
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
  '/restoration_method_metric_versions/{ID}/reject':
    patch:
      summary: Reject a restoration method metric version
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionRead'
  '/restoration_method_metrics/{ID}/restoration_method_metric_versions':
    get:
      summary: Read a restoration method metric's restoration method metric versions
      tags:
        - Restoration Method Metric Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestorationMethodMetricVersionReadAll'
  /tree_species:
    post:
      summary: Create a tree species
      tags:
        - Tree Species
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TreeSpeciesCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
  '/tree_species/{ID}':
    get:
      summary: Read a tree species
      tags:
        - Tree Species
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesRead'
    patch:
      summary: Update a tree species
      tags:
        - Tree Species
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TreeSpeciesUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
    delete:
      summary: Delete a tree species
      tags:
        - Tree Species
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/programme/{ID}/tree_species':
    get:
      summary: Read all tree species for a programme
      tags:
        - Tree Species
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesRead'
  '/site/{ID}/tree_species':
    get:
      summary: Read all tree species for a site
      tags:
        - Tree Species
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BaseSiteTreeSpeciesReadAll'
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  '/pitches/{ID}/tree_species':
    get:
      summary: Read a pitch's tree species
      tags:
        - Tree Species
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesReadAll'
  '/pitches/{ID}/tree_species/inspect':
    get:
      summary: Inspect a pitch's tree species
      tags:
        - Tree Species
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionReadAll'
  '/tree_species_versions/{ID}':
    get:
      summary: Read a tree species version
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
    delete:
      summary: Delete a tree species version
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  '/tree_species_versions/{ID}/approve':
    patch:
      summary: Approve a tree species version
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
  '/tree_species_versions/{ID}/revive':
    patch:
      summary: Revive a tree species version
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
  '/tree_species_versions/{ID}/reject':
    patch:
      summary: Reject a tree species version
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TreeSpeciesVersionReject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionRead'
  '/tree_species/{ID}/tree_species_versions':
    get:
      summary: Read a tree species's tree species versions
      tags:
        - Tree Species Versions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TreeSpeciesVersionReadAll'
  /tasks/organisations:
    get:
      summary: Read all pending organisations
      tags:
        - Tasks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationReadAll'
  /tasks/pitches:
    get:
      summary: Read all pending pitches
      tags:
        - Tasks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PitchReadAll'
  /tasks/matches:
    get:
      summary: Read all matches
      tags:
        - Tasks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MatchReadAll'
  /tasks/monitorings:
    get:
      summary: Read all monitorings
      tags:
        - Tasks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MonitoringReadAll'
  /interests:
    post:
      summary: Create an interest
      tags:
        - Interests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InterestCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/InterestRead'
  /interests/initiated:
    get:
      summary: Read all interests initiated
      tags:
        - Interests
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InterestReadAll'
  /interests/received:
    get:
      summary: Read all interests received
      tags:
        - Interests
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InterestReadAll'
  '/interests/{ID}':
    delete:
      summary: Delete an interest
      tags:
        - Interests
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /matches:
    get:
      summary: Read all matches
      tags:
        - Matches
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MatchReadAll'
  '/matches/{ID}':
    get:
      summary: Read a match
      tags:
        - Matches
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MatchRead'
  /notifications:
    get:
      summary: Read all notifications
      tags:
        - Notifications
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationReadAll'
  '/notifications/{ID}/mark':
    patch:
      summary: Mark a notification as read
      tags:
        - Notifications
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationRead'
  '/devices/{ID}':
    get:
      summary: Read a device
      tags:
        - Devices
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceRead'
    delete:
      summary: Delete a device
      tags:
        - Devices
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
    patch:
      summary: Update a device
      tags:
        - Devices
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeviceUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceRead'
  /devices:
    post:
      summary: Create a device
      tags:
        - Devices
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeviceCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceRead'
    get:
      summary: Read all devices
      tags:
        - Devices
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceReadAll'
  /reports/organisations:
    get:
      summary: Export CSV document of all time organaisations
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/pitches:
    get:
      summary: Export CSV document of all time pitches
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/approved_organisations:
    get:
      summary: Export CSV document of approved organisations
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/rejected_organisations:
    get:
      summary: Export CSV document of rejected organisations
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/users:
    get:
      summary: Export CSV document of users
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/offers:
    get:
      summary: Export CSV document of all time offers
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/approved_pitches:
    get:
      summary: Export CSV document of approved pitches
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/rejected_pitches:
    get:
      summary: Export CSV document of rejected pitches
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/interests:
    get:
      summary: Export CSV document of interests
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/matches:
    get:
      summary: Export CSV document of matches
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/filter_records:
    get:
      summary: Export CSV document of filters recorded
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/monitorings:
    get:
      summary: Export CSV document of monitorings
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /reports/progress_updates:
    get:
      summary: Export CSV document of progress updates
      tags:
        - Reports
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /elevator_videos:
    post:
      summary: Create an elevator video
      tags:
        - Elevator Videos
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ElevatorVideoCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ElevatorVideoRead'
  '/elevator_videos/{ID}':
    get:
      summary: Read an elevator video
      tags:
        - Elevator Videos
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ElevatorVideoRead'
  /drafts:
    post:
      summary: 'Create a draft, optionally assigning it to a due submission'
      tags:
        - Drafts
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DraftCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DraftRead'
  '/drafts/{ID}':
    get:
      summary: Read a draft
      tags:
        - Drafts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftRead'
    patch:
      summary: Update a draft
      tags:
        - Drafts
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DraftUpdateAll'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftRead'
    delete:
      summary: Delete a draft
      tags:
        - Drafts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /drafts/offers:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_programme_submissions:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/pitches:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/programmes:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_programmes:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_nurserys:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_sites:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_nursery_submissions:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/organisations:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/sites:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/site_submissions:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/programme_submissions:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  /drafts/terrafund_site_submissions:
    get:
      summary: Read all drafts by type
      tags:
        - Drafts
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftReadAll'
  '/drafts/{ID}/publish':
    patch:
      summary: Publish a draft
      tags:
        - Drafts
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties:
              offer_id:
                type: integer
              pitch_id:
                type: integer
  /drafts/merge:
    patch:
      summary: Merge multiple drafts together
      tags:
        - Drafts
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DraftMerge'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DraftRead'
  /monitorings:
    post:
      summary: Create a monitoring
      tags:
        - Monitorings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/MonitoringCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/MonitoringRead'
    get:
      summary: Read all monitorings
      tags:
        - Monitorings
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MonitoringReadAll'
  '/monitorings/{ID}':
    get:
      summary: Read a monitoring
      tags:
        - Monitorings
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MonitoringRead'
  '/offers/{ID}/monitorings':
    get:
      summary: Read an offer's monitorings
      tags:
        - Monitorings
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MonitoringReadAll'
  '/pitches/{ID}/monitorings':
    get:
      summary: Read a pitch's monitorings
      tags:
        - Monitorings
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MonitoringReadAll'
  '/monitorings/{ID}/summarise':
    get:
      summary: Summarise a monitoring
      tags:
        - Monitorings
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SummarisedMonitoringRead'
  '/monitorings/{ID}/land_geojson':
    get:
      summary: Export GeoJSON document of a monitoring's land GeoJSON
      tags:
        - Monitorings
      produces:
        - plain/text
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: file
  /targets:
    post:
      summary: Create a target
      tags:
        - Targets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TargetCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TargetRead'
  '/targets/{ID}':
    get:
      summary: Read a target
      tags:
        - Targets
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TargetRead'
  '/monitorings/{ID}/targets/accepted':
    get:
      summary: Read a monitoring's accepted target
      tags:
        - Targets
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TargetRead'
  '/monitorings/{ID}/targets':
    get:
      summary: Read a monitoring's targets
      tags:
        - Targets
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TargetReadAll'
  '/targets/{ID}/accept':
    patch:
      summary: Accept a target
      tags:
        - Targets
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TargetRead'
  /progress_updates:
    post:
      summary: Create a progress update
      tags:
        - Progress Updates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgressUpdateCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProgressUpdateRead'
  '/progress_updates/{ID}':
    get:
      summary: Read a progress update
      tags:
        - Progress Updates
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgressUpdateRead'
  '/monitorings/{ID}/progress_updates':
    get:
      summary: Read a monitoring's progress updates
      tags:
        - Progress Updates
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgressUpdateReadAll'
  /satellite_maps:
    post:
      summary: Create a satellite map
      tags:
        - Satellite Maps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SatelliteMapCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMapRead'
  '/monitorings/{ID}/satellite_maps':
    get:
      summary: Read a monitoring's satellite maps
      tags:
        - Satellite Maps
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SatelliteMapReadAll'
  '/satellite_maps/{ID}':
    get:
      summary: Read a satellite map
      tags:
        - Satellite Maps
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SatelliteMapRead'
  '/monitorings/{ID}/satellite_maps/latest':
    get:
      summary: Read a monitoring's latest satellite map
      tags:
        - Satellite Maps
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SatelliteMapRead'
  /satellite_monitor:
    post:
      summary: Create a satellite monitor
      tags:
        - Satellite Monitoring
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SatelliteMonitorCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMonitorRead'
  '/satellite_monitor/programme/{ID}':
    get:
      summary: Get satellite monitors for a programme
      tags:
        - Satellite Monitoring
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMonitorReadAll'
  '/satellite_monitor/site/{ID}':
    get:
      summary: Get satellite monitors for a site
      tags:
        - Satellite Monitoring
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMonitorReadAll'
  '/satellite_monitor/programme/{ID}/latest':
    get:
      summary: Get the latest satellite monitor for a programme
      tags:
        - Satellite Monitoring
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMonitorRead'
  '/satellite_monitor/site/{ID}/latest':
    get:
      summary: Get the latest satellite monitor for a site
      tags:
        - Satellite Monitoring
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SatelliteMonitorRead'
  /programme:
    post:
      summary: Create a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProgrammeRead'
  /programmes:
    get:
      summary: Get a list of all programmes as an admin
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeReadAll'
  /programmes/personal:
    get:
      summary: Get a list of all programmes the logged in user has
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeReadAll'
  /framework/access_code:
    post:
      summary: Create a framework invite code
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/FrameworkCodeCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FrameworkCodeRead'
  /framework/access_code/all:
    get:
      summary: 'As an admin, get all invite codes'
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FrameworkCodeReadAll'
  /framework/access_code/join:
    post:
      summary: Register as a PPC user via invite code
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/FrameworkCodeSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FrameworkCodeRead'
  '/framework/access_code/{ID}':
    delete:
      summary: Delete a framework invite code
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /programmes/tree_species/search:
    post:
      summary: Get a list of tree species given a search string
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesSearch'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesSearchAll'
  /programme/tree_species:
    post:
      summary: Create a tree species associated with a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesReadAll'
  /programmes/tree_species:
    get:
      summary: Get all of the current users programmes tree species
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllProgrammesTreeSpecies'
  '/programme/{ID}/tree_species/manual':
    post:
      summary: 'Create a tree species associated with a programme, given the programme id'
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesReadAll'
  /programme/tree_species/csv:
    post:
      summary: Create tree species based on a csv
      tags:
        - Programmes
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesCsvSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesCsvRead'
  '/programme/{ID}/tree_species/csv':
    post:
      summary: 'Create tree species based on a csv, given the programme id'
      tags:
        - Programmes
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesCsvSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesCsvRead'
  '/programme/tree_species/csv/{ID}':
    get:
      summary: Get programme tree species CSV import details
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesCsvRead'
  '/programme/tree_species/csv/{ID}/trees':
    get:
      summary: Get list of tree species by CSV import
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTreeSpeciesReadAll'
  '/programme/tree_species/{ID}':
    delete:
      summary: Delete a tree species associated with a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  '/programme/{ID}/aims':
    post:
      summary: Update/create the targets for a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeTargetsSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProgrammeTargetsRead'
    get:
      summary: Retrieve the targets for a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeTargetsRead'
  '/programme/{ID}/sites':
    get:
      summary: Get paginated list of sites by programme
      tags:
        - Sites
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: page
          in: query
          description: Page number
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteReadAllPaginated'
  '/programme/{ID}/all-sites':
    get:
      summary: Get list of sites by programme
      tags:
        - Sites
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteReadAll'
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  /site:
    post:
      summary: Create a new site and assign it to a Programme
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteCreateSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
  /sites:
    get:
      summary: Get a list of all sites
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - type: integer
          in: query
          name: page
          description: Page number
        - type: integer
          in: query
          name: programme_id
          description: Programme ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteReadAllPaginated'
  /my/sites:
    get:
      summary: Get a list of all sites for the logged in user
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - type: integer
          in: query
          name: page
          description: Page number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteReadAllPaginated'
  '/site/{ID}/overview':
    get:
      summary: View the overview of a site
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/seeds':
    post:
      summary: Add seed details to a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SeedDetailSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SeedDetailRead'
  '/site/{ID}/invasives':
    post:
      summary: Add invasives to a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvasiveSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InvasiveRead'
  /site/boundary:
    post:
      summary: Add a Geo file to the given site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteAddBoundarySubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/narrative':
    post:
      summary: Save a narrative against a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NarrativeSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/restoration_methods':
    post:
      summary: Save restoration methods against a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteRestorationMethodsSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/establishment_date':
    post:
      summary: Save an establishment date against a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EstablishmentDateSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/land_tenure':
    post:
      summary: Save land tenure types against a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/LandTenureSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
  '/site/{ID}/aims':
    post:
      summary: Save aims against a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteAimSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
  /site/submission:
    post:
      summary: Create a site submission
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
  '/site/{ID}/submissions':
    get:
      summary: View all submissions for a site
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionReadAll'
  '/site/submission/{ID}':
    get:
      summary: View a submission for a site
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
    patch:
      summary: Update a submission for a site
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
  /programme/submission/due:
    get:
      summary: View all due submissions for the user's programme
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DueSubmissionReadAll'
  /site/submission/due:
    get:
      summary: View all due submissions for the user's sites
      tags:
        - Sites
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DueSubmissionReadAll'
  /terrafund/submissions/due:
    get:
      summary: View all terrafund due submissions for the user by TF programme
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionByProgrammeReadAll'
      tags:
        - Terrafund Due Submissions
    parameters: []
  /pending/programme:
    get:
      summary: View all complete and due (pending) submissions for the logged in user
      tags:
        - Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammePendingRead'
  /pending/site:
    get:
      summary: View all complete and due (pending) submissions for the logged in user
      tags:
        - Sites
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SitePendingRead'
  /site/submission/disturbance:
    post:
      summary: Create a site submission disturbance entry
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceRead'
  '/site/submission/disturbance/{ID}':
    put:
      summary: Update submission disturbances
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceRead'
    delete:
      summary: Delete a submission disturbance from a site submission
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /site/submission/disturbance_information:
    post:
      summary: Add submission disturbance information to a site submission
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceInformationSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
  '/site/submission/disturbance_information/{ID}':
    put:
      summary: Update submission disturbance information on a site submission
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteSubmissionDisturbanceInformationUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
    delete:
      summary: Delete submission disturbance information from a site submission
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /site/restoration_methods:
    get:
      summary: Get all available restoration methods for a site
      tags:
        - Sites
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteRestorationMethodReadAll'
  /site/land_tenures:
    get:
      summary: Get all available land tenures for a site
      tags:
        - Sites
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandTenureReadAll'
  '/site/tree_species/{ID}':
    delete:
      summary: Remove a site tree species
      tags:
        - Sites
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  '/site/{ID}/tree_species/csv':
    post:
      summary: Create tree species based on a csv
      tags:
        - Sites
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteTreeSpeciesCsvSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteTreeSpeciesCsvRead'
  /sites/tree_species:
    get:
      summary: Get all of the current users sites tree species
      tags:
        - Sites
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllSiteTreeSpecies'
  '/site/{ID}/tree_species/manual':
    post:
      summary: Create tree species based on manual input
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SiteTreeSpeciesManualSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteTreeSpeciesManualRead'
  '/site/tree_species/csv/{ID}':
    get:
      summary: Get site tree species CSV import details
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteTreeSpeciesCsvRead'
  '/site/tree_species/csv/{ID}/trees':
    get:
      summary: Get list of tree species by CSV import
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteTreeSpeciesReadAll'
  '/programme/{ID}/invite':
    post:
      summary: Send an invite to monitor a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeInviteSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeInviteRead'
  '/programme/invite/{ID}':
    delete:
      summary: Remove an invite to a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /programme/invite/accept:
    post:
      summary: Accept an invite to monitor a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: token
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeAccept'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeInviteRead'
  '/programme/{programme}/partners':
    get:
      summary: Get a list of all users who are partners on a given programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: programme
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAll'
  /programme/invite/remove:
    delete:
      summary: Remove a users association with a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeRemove'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
  /programme/boundary:
    post:
      summary: Add a GeoJson Boundary to a given programme.
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProgrammeAddBoundary'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeBoundary'
  '/programme/{ID}/overview':
    get:
      summary: View the overview of a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeOverviewRead'
  '/programme/{ID}/submissions':
    get:
      summary: View the submissions of a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionReadAll'
  '/programme/submission/{ID}':
    get:
      summary: View a submission for a programme
      tags:
        - Programmes
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionRead'
    patch:
      summary: Update a submission for a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmissionUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionRead'
  '/programme/submission/{ID}/approve':
    patch:
      summary: Approve a submission for a programme
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionRead'
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  '/programme/{ID}/submission':
    post:
      summary: Create a new submission
      tags:
        - Programmes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmissionCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SubmissionRead'
  '/site/submission/{ID}/direct_seeding':
    post:
      summary: Add direct seeding entry to site submission
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DirectSeedingSubmit'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DirectSeedingRead'
  '/site/submission/{ID}/approve':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    patch:
      summary: Approve a Site Submission
      operationId: patch-site-submission-ID-approve
      tags:
        - Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteSubmissionRead'
  '/site/submission/direct_seeding/{ID}':
    delete:
      summary: Delete direct seeding entry
      tags:
        - Sites
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  '/submission/{ID}/tree_species/csv':
    post:
      summary: Create tree species based on a csv
      tags:
        - Submissions
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesCsvSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesCsvRead'
  '/submission/{ID}/tree_species/manual':
    post:
      summary: Create tree species based on manual input
      tags:
        - Submissions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesManualSubmit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesManualRead'
  '/submission/tree_species/{ID}':
    delete:
      summary: Remove a site tree species
      tags:
        - Submissions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  '/submission/tree_species/csv/{ID}':
    get:
      summary: Get site tree species CSV import details
      tags:
        - Submissions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesCsvRead'
  '/submission/tree_species/csv/{ID}/trees':
    get:
      summary: Get list of tree species by CSV import
      tags:
        - Submissions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionTreeSpeciesReadAll'
  /submission/upload/submission_media:
    post:
      summary: Register a media upload to a submission
      tags:
        - Submissions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmissionUploadMedia'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/SubmissionUploadMediaRead'
  '/submission/upload/submission_media/{ID}':
    delete:
      summary: Delete a media upload from a submission
      tags:
        - Submissions
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /submission/submission_questions:
    get:
      summary: Download a questions for the submission
      tags:
        - Submissions
      produces:
        - application/pdf
      responses:
        '200':
          description: OK
          schema:
            type: file
  /terrafund/programmes:
    get:
      summary: Get a list of all terrafund programmes as an admin
      tags:
        - Terrafund Programmes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeReadAll'
  /terrafund/programme:
    post:
      summary: Create a terrafund programme
      tags:
        - Terrafund Programmes
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundProgrammeRead'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundProgrammeCreate'
  /terrafund/none_tree_species:
    post:
      summary: Create terrafund none tree species
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundNoneTreeSpeciesRead'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundNoneTreeSpeciesCreate'
      description: ''
      tags:
        - Terrafund None Tree Species
    parameters: []
  /terrafund/tree_species:
    post:
      summary: 'Create terrafund tree species, either per tree with an amount, or as an array $species for entities with a percentage'
      tags:
        - Terrafund Tree Species
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundTreeSpeciesCreate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundTreeSpeciesReadAll'
      description: ''
  /terrafund/tree_species_bulk:
    post:
      summary: Create terrafund tree species with a bulk submission
      tags:
        - Terrafund Tree Species
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundTreeSpeciesBulkCreate'
          description: ''
          x-examples:
            example:
              treeable_type: site_submission
              treeable_id: 54
              collection:
                - name: Acer distylum
                  amount: 25
                - name: Mimosa Microphylla
                  amount: 32
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundTreeSpeciesReadAll'
      description: ''
    parameters: []
  /terrafund/none_tree_species_bulk:
    post:
      summary: Create terrafund non-tree species with a bulk submission
      tags:
        - Terrafund Tree Species
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundNonTreeSpeciesBulkCreate'
          description: ''
          x-examples:
            example:
              treeable_type: site_submission
              treeable_id: 54
              collection:
                - name: Acer distylum
                  amount: 25
                - name: Mimosa Microphylla
                  amount: 32
      responses:
        '201':
          description: Created
  /terrafund/tree_species/csv:
    post:
      summary: Create CSV import
      tags:
        - Terrafund Tree Species
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundCsvRead'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundCsvCreate'
  '/terrafund/tree_species/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete a tree species
      tags:
        - Terrafund Tree Species
      responses:
        '200':
          description: OK
  '/terrafund/none_tree_species/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete a none tree species
      responses:
        '200':
          description: OK
      tags:
        - Terrafund None Tree Species
  /terrafund/file:
    post:
      summary: Create a terrafund file
      tags:
        - Terrafund
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundFileRead'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundFileCreate'
  /document_files/file:
    post:
      summary: Create a document file
      tags:
        - Document Files
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DocumentFileRead'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/DocumentFileCreate'
    parameters: []
  '/document_files/{UUID}':
    put:
      summary: Update a document file
      tags:
        - Document Files
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - type: string
          name: title
          in: formData
          required: false
        - type: string
          name: collection
          in: formData
          required: false
        - type: boolean
          name: is_public
          in: formData
          required: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DocumentFileRead'
    delete:
      summary: Deletes a document file using the UUID
      tags:
        - Document Files
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  /terrafund/file/bulk:
    post:
      summary: Create bulk terrafund files
      tags:
        - Terrafund
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundFileReadAll'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundFileCreateAll'
  '/terrafund/programme/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a terrafund programme
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeRead'
    patch:
      summary: Update a terrafund programme
      operationId: patch-terrafund-programme-ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundProgrammeCreate'
      tags:
        - Terrafund Programmes
  /terrafund/nursery:
    post:
      summary: Create Terrafund nursery
      tags:
        - Terrafund Nurseries
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundNurseryRead'
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundNurseryCreate'
  '/terrafund/nursery/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a terrafund nursery
      tags:
        - Terrafund Nurseries
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundNurseryRead'
    patch:
      summary: Update a Terrafund nursery
      operationId: patch-terrafund-nursery-ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundNurseryRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundNurseryUpdate'
          description: ''
      tags:
        - Terrafund Nurseries
  /organisations/photo:
    post:
      summary: Create a photo for an organisation
      tags:
        - Organisations
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OrganisationPhotoRead'
      operationId: post-organisations-photo
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/OrganisationPhotoCreate'
  /organisations/file:
    post:
      summary: Create an organisation file
      tags:
        - Organisations
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OrganisationFileRead'
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganisationFileCreate'
  '/organisations/photo/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete an organisation photo
      tags:
        - Organisations
      responses:
        '200':
          description: OK
      operationId: delete-organisations-photo-ID
  '/terrafund/site/{ID}':
    get:
      summary: Get Terrafund Site
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteRead'
      operationId: get-terrafund-site
      description: ''
      parameters:
        - type: string
          name: ID
          in: path
          required: true
    patch:
      summary: Update a Terrafund Site
      operationId: patch-terrafund-site-ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundSiteUpdate'
      tags:
        - Terrafund Sites
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  '/organisations/file/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete an organisation file
      tags:
        - Organisations
      responses:
        '200':
          description: OK
      operationId: delete-organisations-file-ID
  /terrafund/site:
    post:
      summary: Create Terrafund site
      operationId: post-terrafund-site
      tags:
        - Sites
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundSiteCreate'
  '/terrafund/programme/{ID}/sites':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get Sites that belong to a Terrafund Programme
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TerrafundSiteRead'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
      operationId: get-terrafund-programme-ID-sites
      parameters:
        - type: integer
          in: query
          name: page
          description: Page number
  '/terrafund/programme/{ID}/all-sites':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get Sites that belong to a Terrafund Programme without pagination
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteReadAll'
      operationId: get-terrafund-programme-ID-all-sites
      parameters: []
  '/terrafund/programme/{ID}/has_sites':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Check if a programme has Sites
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              programme_id:
                type: integer
              has_sites:
                type: boolean
      operationId: get-terrafund-programme-ID-has_sites
  '/terrafund/programme/{ID}/nurseries':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get Nurseries that belong to a Terrafund Programme
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TerrafundNurseryRead'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
      operationId: get-terrafund-programme-ID-nurseries
      parameters:
        - type: integer
          in: query
          name: page
          description: Page number
  '/terrafund/programme/{ID}/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get Submissions that belong to a Terrafund Programme
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/TerrafundGenericSubmissionsReadAll'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
      operationId: get-terrafund-programme-ID-submissions
      parameters:
        - type: integer
          in: query
          name: page
          description: Page number
  '/terrafund/programme/{ID}/aims':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get  Terrafund Programme Aims
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundAimsRead'
      operationId: get-terrafund-programme-ID-aims
  '/terrafund/programme/{ID}/has_nurseries':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Check if a Terrafund Programme has Nurseries attached to it
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              programme_id:
                type: number
              has_nurseries:
                type: boolean
      operationId: get-terrafund-programme-ID-has_nurseries
  '/terrafund/programme/{ID}/invite':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Create a terrafund programme invite
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeInviteRead'
      operationId: post-terrafund-programme-ID-invite
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundProgrammeInviteCreate'
  /terrafund/programme/invite/accept:
    post:
      summary: Accept a terrafund programme invite
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            type: object
      operationId: post-terrafund-programme-invite-accept
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundProgrammeInviteAccept'
  '/users/{ID}/role':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    patch:
      summary: Update a user's role as an admin
      tags:
        - Admins
        - Users
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserRead'
      operationId: patch-users-ID-role
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/UserRoleUpdate'
  /terrafund/nursery/submission:
    post:
      summary: Create a terrafund nursery submission
      tags:
        - Terrafund Nursery Submissions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundNurserySubmissionRead'
      operationId: post-terrafund-nursery-submission
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TerrafundNurserySubmissionCreate'
  '/terrafund/nursery/submission/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a terrafund nursery submission
      tags:
        - Terrafund Nursery Submissions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundNurserySubmissionRead'
      operationId: get-terrafund-nursery-submission-ID
    patch:
      summary: Update a terrafund nursery submission
      tags:
        - Terrafund Nursery Submissions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundNurserySubmissionRead'
      operationId: patch-terrafund-nursery-submission-ID
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundNurserySubmissionUpdate'
  '/terrafund/programme/submission/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a terrafund Programme submission
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeSubmissionRead'
      operationId: get-terrafund-programme-submission-ID
      tags:
        - Terrafund Programme Submissions
    patch:
      summary: Update a terrafund Programme submission
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeSubmissionRead'
      operationId: patch-terrafund-programme-submission-ID
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundProgrammeSubmissionUpdate'
      tags:
        - Terrafund Programme Submissions
  '/terrafund/submission/{ID}/unable':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Notify the WRI it is not possible to report on a Terrafund Due Submission
      operationId: post-terrafund-submission-ID-unable
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionRead'
      tags:
        - Terrafund Due Submission
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionUnableCreate'
  /terrafund/site/submissions/submitted:
    get:
      summary: See all the Submitted Site Due Submissions for the User's Programme
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionReadAll'
      operationId: get-terrafund-site-submissions-submitted
  '/terrafund/site/{ID}/submissions':
    get:
      summary: See all the Submissions for a Site
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/TerrafundGenericSubmissionsReadAll'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
      operationId: get-terrafund-site-submissions
      parameters:
        - type: integer
          in: query
          description: Page number
          name: page
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  /terrafund/nursery/submissions/submitted:
    get:
      summary: See all the Submitted Nursery Due Submissions for the User's Programme
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionReadAll'
      operationId: get-terrafund-nursery-submissions-submitted
      tags:
        - Terrafund Nurseries
  '/terrafund/nursery/{ID}/submissions':
    get:
      summary: See all the Submissions for a Nursery
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/TerrafundGenericSubmissionsReadAll'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
      operationId: get-terrafund-nursery-submissions
      tags:
        - Terrafund Nurseries
      description: ''
      parameters:
        - type: integer
          in: query
          description: Page number
          name: page
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  '/organisations/{ID}/files':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get all files for an organisation
      tags:
        - Organisations
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrganisationFileReadAll'
      operationId: get-organisation-ID-files
  /terrafund/disturbance:
    post:
      summary: Create a Terrafund Disturbance
      tags:
        - Terrafund
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/TerrafundDisturbanceRead'
      operationId: post-terrafund-disturbance
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundDisturbanceCreate'
  '/terrafund/file/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete a terrafund file
      tags:
        - Terrafund
      responses:
        '200':
          description: OK
      operationId: delete-terrafund-file-ID
  /terrafund/nursery/submission/due:
    get:
      summary: Get all nursery due submissions for user
      tags:
        - Terrafund Nurseries
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionReadAll'
      operationId: get-terrafund-nursery-submission-due
  /terrafund/site/submission/due:
    get:
      summary: Get all nursery due submissions for user
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDueSubmissionReadAll'
      operationId: get-terrafund-site-submission-due
  /terrafund/site/submission:
    post:
      summary: Create a Terrafund site submission
      tags:
        - Terrafund Site Submissions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteSubmissionRead'
      operationId: post-terrafund-site-submission
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundSiteSubmissionCreate'
  '/terrafund/site/submission/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Read a Terrafund site submission
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteSubmissionRead'
      operationId: get-terrafund-site-submission-ID
    patch:
      summary: Update a terrafund site submission
      tags:
        - Terrafund Site Submissions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundSiteSubmissionRead'
      operationId: patch-terrafund-site-submission-ID
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundSiteSubmissionUpdate'
  /terrafund/site/land_tenures:
    get:
      summary: Get Terrafund land tenures
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundLandTenureReadAll'
      operationId: get-terrafund-site-land_tenures
  /terrafund/site/restoration_methods:
    get:
      summary: Get Terrafund restoration methods
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundRestorationMethodsReadAll'
      operationId: get-terrafund-site-restoration_methods
  /terrafund/programme/submission:
    post:
      summary: Create a terrafund programme submission
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeSubmissionRead'
      operationId: post-terrafund-programme-submission
      parameters:
        - name: Body
          in: body
          schema:
            $ref: '#/definitions/TerrafundProgrammeSubmissionCreate'
  /terrafund/programmes/personal:
    get:
      summary: Get the user's terrafund programmes
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeReadAll'
      operationId: get-terrafund-programmes-personal
      parameters:
        - type: integer
          in: query
          name: organisation_id
          description: Scope to organisation ID
  /terrafund/my/nurseries:
    get:
      summary: Get nurseries for the user
      tags:
        - Terrafund Nurseries
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundNurseryRead'
      operationId: get-terrafund-my-nurseries
  /terrafund/my/sites:
    get:
      summary: Get sites for a user
      tags:
        - Terrafund Sites
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundSiteRead'
      operationId: get-terrafund-my-sites
  /terrafund/programme/submission/filter:
    post:
      summary: Filter Terrafund Programme Submissions by Date
      operationId: post-terrafund-proggame-submission-filter
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundProgrammeSubmissionRead'
      tags:
        - Terrafund Programmes
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundDateFilterCreate'
      description: ''
  /terrafund/nursery/submission/filter:
    post:
      summary: Filter Terrafund Nursery Submissions by Date
      operationId: post-terrafund-nursert-submission-filter
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundNurserySubmissionRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundDateFilterCreate'
      tags:
        - Terrafund Nursery Submissions
    parameters: []
  /terrafund/site/submission/filter:
    post:
      summary: Filter Terrafund Site Submissions by Date
      operationId: post-terrafund-site-submission-filter
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundSiteSubmissionRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundDateFilterCreate'
      tags:
        - Terrafund Sites
    parameters: []
  /terrafund/nursery/tree_species:
    get:
      summary: Get Terrafund Tree Species linked with a User's Nurseries
      tags:
        - Terrafund Nurseries
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundTreeSpeciesRead'
      operationId: get-terrafund-nursery-tree_species
  /terrafund/site/tree_species:
    get:
      summary: Get Terrafund Tree Species linked with a User's Sites
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TerrafundTreeSpeciesRead'
      operationId: get-terrafund-site-tree_species
      tags:
        - Terrafund Sites
    parameters: []
  '/satellite_monitor/terrafund_programme/{ID}':
    get:
      summary: Get satellite monitors for a Terrafund Programme
      tags:
        - Satellite Monitoring
        - Terrafund Programme
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/SatelliteMonitorReadAll'
  '/satellite_monitor/terrafund_programme/{ID}/latest':
    get:
      summary: Get the latest satellite monitor for a Terrafund Programme
      tags:
        - Satellite Monitoring
        - Terrafund Programme
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/TerrafundShapefileReadAll'
      operationId: get-terrafund-export-programme-ID-shapefiles
  '/programme/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    patch:
      summary: Update a programme
      tags:
        - Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProgrammeRead'
      operationId: patch-programme-ID
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProgrammeUpdate'
  '/site/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    patch:
      summary: Update a site
      tags:
        - Sites
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteRead'
      operationId: patch-site-ID
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SiteUpdate'
  '/sites/exporter':
    get:
      summary: Export all site details for given sites
      tags:
        - PPC Exports
      parameters:
          - in: body
            name: body
            schema:
              $ref: '#/definitions/PPCSiteExport'
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/programme/{ID}/shapefiles':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of a programme's shapefiles
      tags:
        - PPC Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/programme/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of all programme submissions
      tags:
        - PPC Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/programme/{ID}/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of a programme's submissions and sites submissions
      tags:
        - PPC Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/site/{ID}/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of a sites submissions
      tags:
        - PPC Exports
        - Sites
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/site/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of all site submissions
      tags:
        - PPC Exports
        - Sites
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/ppc/export/programme/{ID}/images':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a file of a programme's images
      tags:
        - PPC Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
  /terrafund/export/site/submissions:
    get:
      summary: Export site submissions
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-site-submissions
  /terrafund/export/nursery/submissions:
    get:
      summary: Export nursery submissions
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-nursery-submissions
  /terrafund/export/programme/submissions:
    get:
      summary: Export programme submissions
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-programme-submissions
  '/terrafund/export/programme/{ID}/submissions':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a ZIP of all submissions related to a programme
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-programme-ID-submissions
  '/terrafund/export/programme/{ID}/images':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get a ZIP of all images related to a programme
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-programme-ID-images
  '/terrafund/export/programme/{ID}/shapefiles':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get all of a programme's shapefiles
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundShapefileReadAll'
  '/terrafund/programme/{ID}/partners':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get partners for terrafund programme
      tags:
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAll'
      operationId: get-terrafund-programme-ID-partners
  '/terrafund/disturbance/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    delete:
      summary: Delete a terrafund disturbance
      tags:
        - Terrafund Disturbances
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
      operationId: delete-terrafund-disturbance-ID
    patch:
      summary: Update a terrafund disturbance
      tags:
        - Terrafund Disturbances
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundDisturbanceRead'
      operationId: patch-terrafund-disturbance-ID
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TerrafundDisturbanceUpdate'
  '/terrafund/export/site/submission/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Export a single site submission
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-site-submission-ID
  '/terrafund/export/nursery/submission/{ID}':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Export a single nursery submission
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-nursery-submission-ID
  '/terrafund/export/nursery/{ID}/submission':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Export all nursery submissions for a single nursery
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-nursery-ID-submission
  '/terrafund/export/site/{ID}/submission':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Export all nursery submissions for a single site
      tags:
        - Terrafund Exports
      responses:
        '200':
          description: OK
          schema:
            type: file
      operationId: get-terrafund-export-site-ID-submission
  /exports/custom:
    post:
      summary: Generate a custom report / export
      operationId: post-exports-custom
      responses:
        '200':
          description: OK
          schema:
            type: file
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomReportCreate'
      tags:
        - Custom Export
      description: 'This endpoint allows you to specify what fields and files you''d like to return as well as a duration. current reports are ''programme'', ''submission'', ''site'' and , ''site_submission'', ''control_site'' and ''control_site_submission''.'
  '/exports/{ID}/field_list':
    get:
      description: 'This endpoint retrieves a list of available fields for a specified custom report. Currently the available ID''s are ''programme'', ''submission'', ''site'', ''site_submission'', ''control_site'' and ''control_site_submission''.'
      summary: Get the available fields for a custom report
      operationId: exports-KEY-field_list
      tags:
        - Export
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                field_name1:
                  type: string
                field_name2:
                  type: string
                field_name3:
                  type: string
            x-examples:
              example-1:
                - field_name1: Field Label1
                - field_name2: Field Label2
                - field_name3: Field Label3
          examples:
            example-1:
              - field_name1: Field Label1
              - field_name2: Field Label2
              - field_name3: Field Label3
    parameters:
      - type: string
        name: ID
        in: path
        required: true
  '/organisations/{ID}/terrafund/programmes':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Get Terrafund Programmes that belong to an Organisation
      tags:
        - Organisations
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TerrafundProgrammeReadAll'
      operationId: get-organisations-ID-terrafund-programmes'
  /v2/project-metrics:
    get:
      summary: Get the project metrics
      operationId: get-v2-project-metrics
      tags:
        - Projects
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectMetricReadAll'
    post:
      summary: Create project metric
      operationId: post-v2-project-metrics
      tags:
        - Projects
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectMetricRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectMetricCreate'
          description: The property monitorable_type options are programme or terrafund_programme
  /v2/projects/{UUID}/sites:
    get:
      summary: Get the sites of a specific project
      operationId: get-v2-projects-uuid-sites
      tags:
        - V2 Projects
      description: "Available Filters : status | Available Searches: name"
      produces:
        - application/json
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2SiteLiteRead'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
  '/v2/projects/{UUID}/nurseries':
    get:
      summary: Get the nurseries of a specific project
      operationId: get-v2-projects-uuid-nurseries
      tags:
        - V2 Projects
      description: "Available Filters : status | Available Searches: name"
      produces:
        - application/json
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2NurseryLiteRead'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
  /v2/funding-programme:
    get:
      summary: Get all funding programmes
      tags:
        - Funding Programmes
      parameters:
        - type: integer
          in: query
          name: page
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FundingProgramme'
              links:
                type: object
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                type: object
                $ref: '#/definitions/V2PaginationMeta'
      operationId: get-v2-funding-programme
  /v2/admin/funding-programme:
    get:
      summary: Get all funding programmes
      tags:
        - Funding Programmes
      parameters:
        - type: integer
          in: query
          name: page
          description: 'page number you want results from'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FundingProgramme'
              links:
                type: object
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                type: object
                $ref: '#/definitions/V2PaginationMeta'
      operationId: get-v2-admin-funding-programme
    post:
      summary: Create a funding programme
      operationId: post-v2-funding-programme
      tags:
        - Funding Programmes
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/FundingProgramme'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FundingProgrammeCreate'
    parameters: []
  '/v2/funding-programme/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    get:
      summary: Get a funding programme
      tags:
        - Funding Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingProgramme'
      operationId: get-v2-funding-programme-ID
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FundingProgramme'
  '/v2/admin/funding-programme/{UUID}':
    get:
      summary: Get a funding programme
      tags:
        - Funding Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingProgramme'
      operationId: get-v2-admin-funding-programme-ID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FundingProgramme'
    put:
      summary: Update a funding programme
      operationId: put-v2-funding-programme-ID
      tags:
        - Funding Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingProgramme'
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FundingProgrammeCreate'
    delete:
      summary: Delete a funding programme
      operationId: delete-v2-funding-programme-ID
      tags:
        - Funding Programmes
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '202':
          description: Accepted
  '/v2/admin/funding-programme/{UUID}/status':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    patch:
      summary: Update a funding programme status
      operationId: patch-v2-funding-programme-ID-status
      tags:
        - Funding Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FundingProgrammeStatus'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FundingProgrammeCreate'
  '/v2/project-metrics/{UUID}':
    get:
      summary: Get a specified project metric
      tags:
        - Projects
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectMetricRead'
      operationId: get-v2-project-metrics-UUID
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    put:
      summary: Update a specific project metric
      operationId: put-v2-project-metrics-ID
      tags:
        - Projects
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectMetricRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectMetricUpdate'
    delete:
      summary: Delete a specific project metric
      operationId: delete-v2-project-metrics-ID
      tags:
        - Projects
        - Metrics
      responses:
        '202':
          description: Accepted
  /v2/project-metrics/upload:
    parameters: []
    post:
      summary: Upload a file to a specific project metrics
      operationId: put-v2-project-metrics-upload
      tags:
        - Projects
        - Metrics
        - Uploads
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectMetricRead'
      parameters:
        - in: formData
          type: string
          name: uuid
        - in: formData
          type: string
          name: collection
        - in: formData
          type: string
          name: title
        - in: formData
          type: file
          name: upload_file
      description: 'For project metrics, the supported collections are ''cover'', ''gallery'', ''support'' and ''reportPDF'''
  '/v2/project-metrics/{UUID}/download':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    get:
      summary: Download a zip of supporting files for a project metric
      operationId: get-v2-project-metrics-download
      tags:
        - Projects
        - Metrics
        - Downloads
      responses:
        '200':
          description: OK
          schema:
            type: file
  /v2/site-metrics:
    get:
      summary: Get the site metrics
      tags:
        - Sites
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SiteMetricReadAll'
      operationId: get-v2-site-metrics
      description: ''
    post:
      summary: Create site metric
      operationId: post-v2-site-metrics
      tags:
        - Sites
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteMetricRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SiteMetricCreate'
      description: The property monitorable_type options are accept site or terrafund_site
    parameters: []
  '/v2/site-metrics/{UUID}':
    get:
      summary: Get a specified site metric
      tags:
        - Sites
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SiteMetricRead'
      operationId: get-v2-site-metrics-UUID
      description: ''
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    put:
      summary: Update a specific site metric
      operationId: put-v2-site-metrics-ID
      tags:
        - Sites
        - Metrics
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteMetricRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SiteMetricUpdate'
    delete:
      summary: Delete a specific site metric
      operationId: delete-v2-site-metrics-ID
      tags:
        - Sites
        - Metrics
      responses:
        '202':
          description: Accepted
  '/v2/media/{UUID}/{COLLECTION}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
      - type: string
        name: COLLECTION
        in: path
        required: true
    delete:
      summary: Delete a specific media
      operationId: delete-v2-media-UUID-collection
      tags:
        - Media
      responses:
        '202':
          description: Accepted
      description: ''
  '/v2/media/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    delete:
      summary: Delete a specific site metric
      operationId: delete-v2-media-UUID
      tags:
        - Media
      responses:
        '202':
          description: Accepted
  '/programme/{ID}/metric-sites':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Gets all site metrics relating to a PPC programme
      tags:
        - Sites
        - Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteMetricReadAll'
      operationId: get-ppc-programme-ID-metric-sites
  '/terrafund/programme/{ID}/metric-sites':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    get:
      summary: Gets all site metrics relating to a Terrafund programme
      tags:
        - Metrics
        - Terrafund Sites
        - Terrafund Programmes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SiteMetricReadAll'
      operationId: get-terrafund-programme-ID-metric-sites
  /edit-history:
    post:
      summary: Creates a new edit history
      operationId: post-edit-history
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EditHistoryCreate'
      description: ''
      tags:
        - Edit History
    parameters: []
    get:
      summary: Get a collection of edit histories
      operationId: get-edit-history
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/EditHistoryRead'
              meta:
                type: object
                properties:
                  first:
                    type: integer
                  current:
                    type: integer
                  last:
                    type: integer
                  total:
                    type: integer
                  per_page:
                    type: integer
      parameters:
        - type: integer
          in: query
          name: items
          description: 'number of items (per page) to return'
        - type: integer
          in: query
          name: page
          description: 'page number you want results from'
        - type: string
          in: query
          name: status
          description: 'filter to a specific status. recognised options are: requested, approved, rejected'
        - type: string
          in: query
          name: search
          description: 'search term to use on the collection'
        - type: string
          in: query
          name: sort
          description: 'the value to sort the collection results'
        - type: string
          in: query
          name: order
          description: 'direct to sort the collection results asc or desc'
      tags:
        - Edit History
  '/edit-history/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    get:
      summary: Get a specific edit histories
      operationId: get-edit-history-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      parameters:
        - type: string
          in: query
          name: status
          description: 'filter to a specific status. recognised options are: requested, approved, rejected'
      tags:
        - Edit History
    put:
      summary: Update a Edit History
      operationId: put-edit-history-UUID
      tags:
        - Edit History
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
                description: content is a string of json of the updated entity
            required:
              - content
  '/edit-history/{TYPE}/{ID}':
    parameters:
      - type: string
        name: TYPE
        in: path
        required: true
      - type: integer
        name: ID
        in: path
        required: true
    get:
      summary: Get the latest Edit History via the model type and id
      operationId: get-edit-history-TYPE-ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      tags:
        - Edit History
  /edit-history/approve:
    parameters: []
    put:
      summary: Approves an edit history
      operationId: put-edit-history-approve
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      tags:
        - Edit History
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              uuid:
                type: string
            required:
              - uuid
  /edit-history/reject:
    parameters: []
    put:
      summary: Approves an edit history
      operationId: put-edit-history-reject
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EditHistoryRead'
      tags:
        - Edit History
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              uuid:
                type: string
              comments:
                type: string
            required:
              - uuid
              - comments
  '/site/{ID}/seeds/bulk':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Bulk create site seeds
      tags:
        - Sites
      operationId: post-site-ID-seeds-bulk
      responses:
        '201':
          description: Created
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              collection:
                type: array
                items:
                  $ref: '#/definitions/SeedDetailSubmit'
  /v2/admin/forms:
    post:
      summary: Create a form
      operationId: post-v2-admin-forms
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/FormRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormCreate'
      tags:
        - Forms
    get:
      summary: View all forms as an admin
      tags:
        - Forms
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2SearchFilterSort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormPaginated'
      operationId: get-v2-admin-forms
  /v2/forms:
    get:
      summary: View all forms as a user
      tags:
        - Forms
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2SearchFilterSort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormPaginated'
      operationId: get-v2-user-forms
  '/v2/admin/forms/{UUID}/publish':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    patch:
      summary: Publish a form
      operationId: patch-v2-admin-forms-UUID-publish
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormRead'
      tags:
        - Forms
  /v2/admin/forms/section:
    parameters: []
    post:
      summary: Create a form section
      operationId: post-v2-admin-forms-section
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/FormSectionRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormSectionCreate'
      tags:
        - Forms
  '/v2/admin/forms/question/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    delete:
      summary: Delete a form question
      operationId: delete-v2-admin-form-question-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormQuestionRead'
      tags:
        - Forms
  '/v2/admin/forms/section/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    delete:
      summary: Delete a form section
      operationId: delete-v2-admin-form-section-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormSectionRead'
      tags:
        - Forms
    patch:
      summary: Update a form section
      operationId: patch-v2-admin-form-section-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormSectionRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormSectionUpdate'
      tags:
        - Forms
  '/v2/admin/forms/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    delete:
      summary: Delete an unpublished form
      operationId: v2-admin-delete-form-by-uuid
      tags:
        - Forms
      responses:
        '200':
          description: Accepted
    patch:
      summary: Update a form
      operationId: patch-v2-admin-form-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormCreate'
      tags:
        - Forms
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormUpdate'
  '/v2/forms/linked-field-listing':
    get:
      summary: Get a list of available linked fields
      operationId: get-v2-form-linked-field-listing
      parameters:
        - name: form_types
          type: array
          items:
            type: string
          in: query
          description: 'array of form types'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2GenericList'
      tags:
        - Forms
  '/v2/forms/option-labels':
    get:
      summary: Get a the labels for options
      operationId: get-v2-form-option-labels-listing
      parameters:
        - name: keys
          type: string
          in: query
          description: 'the option keys you want to retrieve'
        - name: lang
          type: string
          in: query
          description: 'the language to use for the label translation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2GenericList'
      tags:
        - Forms
  '/v2/admin/forms/common-options/{BUCKET}':
    get:
      summary: Search for common options on a bucket
      operationId: get-v2-admin-form-common-options-bucket
      parameters:
        - type: string
          name: BUCKET
          in: path
          required: true
          description: 'name of the bucket/collection of common options'
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2CommonOptions'
      tags:
        - Forms
  /v2/admin/organisations:
    get:
      summary: Get a collection of organisations
      operationId: v2-admin-get-organisations
      description: 'Currently available sort is status, type, trees_grown_total, name, fin_budget_1year, created_at'
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2AdminOrganisationRead'
              links:
                type: object
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                type: object
                $ref: '#/definitions/V2PaginationMeta'
      tags:
        - V2 Admin
        - V2 Organisations
  '/v2/admin/organisations/multi':
    get:
      summary: Get a collection of organisation by uuids
      operationId: v2-admin-get-organisation-multi-by-uuid
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - type: string
          in: query
          name: ids
          description: comma separated list of values. eg ?ids=uuid1,uuid2
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminOrganisationRead'
  '/v2/admin/organisations/{UUID}':
    get:
      summary: Get a organisation by uuid
      operationId: v2-admin-get-organisation-by-uuid
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminOrganisationRead'
    put:
      summary: Updates a specific organisation
      operationId: v2-admin-put-organisation-by-uuid
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2AdminOrganisationUpdate'
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminOrganisationRead'
    delete:
      summary: Delete a specific organisation
      operationId: v2-admin-delete-organisation-by-uuid
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '202':
          description: Accepted
  /v2/admin/organisations/approve:
    put:
      summary: Approve a specific organisation
      operationId: v2-admin-organisation-approve
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              uuid:
                type: string
            required:
              - uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminOrganisationUpdate'
  /v2/admin/organisations/reject:
    put:
      summary: Reject a specific organisation
      operationId: v2-admin-organisation-reject
      tags:
        - V2 Admin
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              uuid:
                type: string
            required:
              - uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminOrganisationUpdate'
  /v2/admin/organisations/export:
    get:
      summary: Export CSV document of all time organaisations
      tags:
        - V2 Admin
        - Export
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /v2/organisations:
    post:
      summary: Create an organisation
      operationId: v2-post-organisations
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2OrganisationUpdate'
      responses:
        '200':
          description: OK
  '/v2/organisations/{UUID}':
    get:
      summary: Get a specific organisation
      operationId: v2-get-organisations-uuid
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2OrganisationRead'
    put:
      summary: Update an organisation
      operationId: v2-put-organisations-uuid
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2OrganisationUpdate'
      responses:
        '200':
          description: OK
  /v2/organisations/listing:
    get:
      summary: Get a list of organisations names and uuid
      operationId: v2-get-organisations-listing
      tags:
        - V2 Project Developer
        - V2 Organisations
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2GenericList'
      parameters:
        - type: string
          in: query
          name: search
          description: search term to use on the collection
  /v2/organisations/join-existing:
    post:
      summary: Post a request to join an existing organisation
      operationId: v2-post-organisations-join-existing
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              organisation_uuid:
                type: string
            required:
              - organisation_uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2OrganisationRead'
  /v2/organisations/user-requests/{UUID}:
    get:
      summary: Get a collection of users that have requested to join a specific organisation
      operationId: v2-get-organisations-user-requests-uuid
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAll'
  /v2/organisations/approved-users/{UUID}:
    get:
      summary: Get a collection of users that have been approved for a specific organisation
      operationId: v2-get-organisations-approved-users-uuid
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserReadAll'
  /v2/organisations/approve-user:
    put:
      summary: Approve a users request to join an existing organisation
      operationId: v2-post-organisations-approve-user
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2OrganisationApproveRejectUser'
      responses:
        '200':
          description: OK
  /v2/organisations/reject-user:
    put:
      summary: Reject a users request to join an existing organisation
      operationId: v2-post-organisations-reject-user
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2OrganisationApproveRejectUser'
      responses:
        '200':
          description: OK
  /v2/organisations/submit/{UUID}:
    put:
      summary: Submit an organisation for approval
      operationId: v2-put-organisations-submit
      tags:
        - V2 Project Developer
        - V2 Organisations
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  /v2/organisations/retract-my-draft:
    delete:
      summary: Retracts (delets) a users draft organisation
      operationId: v2-delete-organisations-retract-my-draft
      tags:
        - V2 Project Developer
        - V2 Organisations
      responses:
        '200':
          description: OK
  /v2/admin/users:
    get:
      summary: Get a collection of users
      operationId: v2-admin-get-users
      description: 'Currently available sort is last_logged_in_at, created_at, first_name, last_name, email_address, organisation_name'
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[verified]=true'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2AdminUserRead'
              links:
                type: object
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                type: object
                $ref: '#/definitions/V2PaginationMeta'
  /v2/admin/users/{UUID}:
    get:
      summary: Get a user by uuid
      operationId: v2-admin-get-user-by-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminUserRead'
    put:
      summary: Updates a specific user
      operationId: v2-admin-put-user-by-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2AdminUserUpdate'
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminUserRead'
    delete:
      summary: Delete a specific user
      operationId: v2-admin-delete-user-by-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '202':
          description: Accepted
  /v2/admin/users/multi:
    get:
      summary: Get a a collection of users by uuid
      operationId: v2-admin-get-multi-user-by-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - name: ids
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2AdminUserRead'
  /v2/admin/users/export:
    get:
      summary: Export CSV document of all users
      operationId: v2-admin-users-export
      tags:
        - V2 Admin
        - V2 Users
        - Export
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: file
  /v2/admin/users/reset-password/{UUID}:
    put:
      summary: Update a specific users password
      operationId: v2-admin-users-reset-password-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - type: string
          name: password
          in: formData
          required: true
        - type: string
          name: password_confirmation
          in: formData
          required: true
      responses:
        '202':
          description: Accepted
  /v2/admin/users/verify/{UUID}:
    patch:
      summary: Force verify a user
      operationId: v2-admin-users-verify-uuid
      tags:
        - V2 Admin
        - V2 Users
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  /v2/{MODEL}/{UUID}/files:
    get:
      summary: Retrieve files for a specific entity
      operationId: get-v2-model-uuid-files
      description: "Available Filters : file_type"
      tags:
        - Files
      produces:
        - application/json
      parameters:
        - type: string
          name: MODEL
          in: path
          required: true
          description: 'Currently only projects, sites, nurseries, project-reports, nursery-reports and site-reports are set up'
        - type: string
          name: UUID
          in: path
          required: true
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2FileGallery'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
  /v2/{MODEL}/{UUID}/image/locations:
    get:
      summary: Retrieve all images for a specific entity
      operationId: get-v2-model-uuid-image-locations
      tags:
        - Files
      produces:
        - application/json
      parameters:
        - type: string
          name: MODEL
          in: path
          required: true
          description: 'Currently only projects, sites, nurseries, project-reports, nursery-reports and site-reports are set up'
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2FileGalleryLite'
  /v2/file/upload/{MODEL}/{COLLECTION}/{UUID}:
    post:
      summary: Upload a file to a specific entities collection
      operationId: v2-post-upload-file-model-collection-uuid
      tags:
        - Files
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - type: string
          name: MODEL
          in: path
          required: true
          description: 'Currently only organisation, funding-programme, project-pitch, project, site, nursery, project-report, site-report and nursery-report are set up'
        - type: string
          name: COLLECTION
          in: path
          required: true
        - type: string
          name: UUID
          in: path
          required: true
        - type: string
          name: title
          in: formData
        - type: file
          name: upload_file
          in: formData
        - type: integer
          name: lat
          in: formData
        - type: integer
          name: lng
          in: formData
        - type: boolean
          name: is_public
          default: false
          in: formData
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2FileRead'
  /v2/files/{UUID}:
    put:
      summary: Update properties of a specific file
      operationId: v2-put-file-uuid
      tags:
        - Files
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              title:
                type: string
            required:
              - title
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2FileRead'
    delete:
      summary: Delete a specific file
      operationId: v2-delete-file-uuid
      tags:
        - Files
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  /v2/tree-species:
    post:
      summary: Create a tree species
      operationId: post-v2-tree-species
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/V2TreeSpeciesRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2TreeSpeciesCreate'
      tags:
        - V2 Tree Species
  '/v2/tree-species/{UUID}':
    patch:
      summary: Update a tree species
      operationId: patch-v2-tree-species-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2TreeSpeciesCreate'
      tags:
        - V2 Tree Species
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2TreeSpeciesUpdate'
    delete:
      summary: Delete a tree species
      operationId: delete-v2-tree-species-UUID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2TreeSpeciesRead'
      tags:
        - V2 Tree Species
  /v2/funding-type:
    post:
      summary: Create a funding type entry
      operationId: post-v2-funding-type
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/V2FundingTypeRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2FundingTypeCreate'
      tags:
        - V2 Funding Type
  '/v2/funding-type/{UUID}':
    patch:
      summary: Update a funding type
      operationId: patch-v2-funding-type-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2FundingTypeRead'
      tags:
        - V2 Funding Type
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2FundingTypeUpdate'
    delete:
      summary: Delete a funding type entry
      operationId: delete-v2-funding-type-UUID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2FundingTypeRead'
      tags:
        - V2 Funding Type
  /v2/core-team-leader:
    post:
      summary: Create a core team leader
      operationId: post-v2-core-team-leader
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/V2CoreTeamLeaderRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2CoreTeamLeaderCreate'
      tags:
        - V2 Core Team Leader
  '/v2/core-team-leader/{UUID}':
    patch:
      summary: Update a core team leader
      operationId: patch-v2-core-team-leader-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2CoreTeamLeaderRead'
      tags:
        - V2 Core Team Leader
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2CoreTeamLeaderUpdate'
    delete:
      summary: Delete a core team leader
      operationId: delete-v2-core-team-leader-UUID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2CoreTeamLeaderRead'
      tags:
        - V2 Core Team Leader
  /v2/leadership-team:
    post:
      summary: Create a leadership team
      operationId: post-v2-leadership-team
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/V2LeadershipTeamRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2LeadershipTeamCreate'
      tags:
        - V2 Leadership Team
  '/v2/leadership-team/{UUID}':
    patch:
      summary: Update a leadership team
      operationId: patch-v2-leadership-team-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2LeadershipTeamRead'
      tags:
        - V2 Leadership Team
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/V2LeadershipTeamUpdate'
    delete:
      summary: Delete a leadership team
      operationId: delete-v2-leadership-team-UUID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2LeadershipTeamRead'
      tags:
        - V2 Leadership Team
  /v2/admin/sites:
    get:
      summary: View all sites as an admin
      tags:
        - V2 Sites
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2SiteRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-admin-sites
  /v2/admin/sites/ppc:
    get:
      summary: View all PPC sites as an admin
      tags:
        - V2 Sites
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2SiteRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-admin-ppc-sites
  /v2/admin/sites/terrafund:
    get:
      summary: View all terrafund sites as an admin
      tags:
        - V2 Sites
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/V2SiteRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-admin-terrafund-sites
  /v2/admin/project-pitches:
    get:
      summary: View project pitches as an admin
      tags:
        - Project Pitches
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProjectPitchRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-admin-project-pitches
      description: ''
  /v2/admin/projects:
    get:
      summary: View projects as an admin
      tags:
        - Projects
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProjectLiteRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-admin-projects
      description: ''
  /v2/admin/project-pitches/export:
    get:
      summary: Export project pitches as an admin
      tags:
        - Project Pitches
      responses:
        '200':
          description: OK
          schema:
            type: object
      operationId: get-v2-project-pitches-export
  /v2/project-pitches:
    get:
      summary: Get project pitches
      tags:
        - Project Pitches
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProjectPitchRead'
              links:
                type: object
                properties:
                  first:
                    type: string
                  last:
                    type: string
                  prev:
                    type: string
                  next:
                    type: string
              meta:
                type: object
                properties:
                  current_page:
                    type: integer
                  from:
                    type: integer
                  last_page:
                    type: integer
                  next:
                    type: integer
      operationId: get-v2-project-pitches
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
    post:
      summary: Store a project pitch
      operationId: post-v2-project-pitches
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProjectPitchRead'
      tags:
        - Project Pitches
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectPitchCreate'
  '/v2/project-pitches/{UUID}':
    get:
      summary: Get a project pitch
      tags:
        - Project Pitches
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectPitchRead'
      operationId: get-v2-project-pitches-UUID
    patch:
      summary: Update a project pitch
      operationId: patch-v2-project-pitches-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectPitchRead'
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectPitchUpdate'
      tags:
        - Project Pitches
    delete:
      summary: Delete a project pitch
      operationId: delete-v2-project-pitches-UUID
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
      tags:
        - Project Pitches
  '/v2/project-pitches/submit/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    put:
      summary: Submits a project pitch making it active
      operationId: put-v2-submit-project-pitches-UUID
      responses:
        '200':
          description: OK
      tags:
        - Project Pitches
  '/v2/admin/forms/submissions/{UUID}':
      get:
        summary: Get a form submission
        tags:
          - Form Submissions
        parameters:
        - type: string
          name: UUID
          in: path
          required: true
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/FormSubmissionRead'
        operationId: get-v2-admin-forms-submissions-UUID
      delete:
        summary: Delete a form submission
        operationId: delete-v2-admin-forms-submissions-UUID
        parameters:
        - type: string
          name: UUID
          in: path
          required: true
        responses:
          '200':
            description: OK
        tags:
          - Form Submissions
        description: ''
  '/v2/admin/forms/submissions/export':
    get:
      summary: Export form submissions
      tags:
        - Form Submissions
      responses:
        '200':
          description: OK
          schema:
            type: object
      operationId: get-v2-admin-forms-submissions-export
  /v2/admin/forms/submissions:
    get:
      summary: Get form submissions
      tags:
        - Form Submissions
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FormSubmissionRead'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
      operationId: get-v2-admin-forms-submissions
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
  /v2/forms/my/submissions:
    get:
      summary: Get the authenticated users form submissions
      tags:
        - Form Submissions
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FormSubmissionRead'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
      operationId: get-v2-my-forms-submissions
      parameters:
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
  '/v2/forms/{UUID}':
    get:
      summary: Get a form
      tags:
        - Forms
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormRead'
      operationId: get-v2-forms
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
  /v2/admin/funding-programme/stage:
      post:
        summary: Create a stage
        operationId: post-v2-admin-funding-programme-stage
        responses:
          '201':
            description: Created
            schema:
              $ref: '#/definitions/StageRead'
        parameters:
          - in: body
            name: body
            schema:
              $ref: '#/definitions/StageCreate'
        tags:
          - Stages
  '/v2/admin/funding-programme/stage/{UUID}':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    delete:
      summary: Delete a stage
      operationId: delete-v2-admin-funding-programme-stage-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StageRead'
      tags:
        - Stages
    patch:
      summary: Update a stage
      operationId: patch-v2-admin-funding-programme-stage-UUID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StageRead'
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StageCreate'
      tags:
        - Stages
  /v2/funding-programme/stage:
    get:
      summary: Get all stages
      tags:
        - Stages
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StagePaginated'
      operationId: get-v2-funding-programme-stage
  '/v2/funding-programme/stage/{UUID}':
    get:
      summary: Get a stage
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      tags:
        - Stages
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StageRead'
      operationId: get-v2-funding-programme-stage-UUID
  '/v2/admin/funding-programme/stage/{UUID}/status':
    parameters:
      - type: string
        name: UUID
        in: path
        required: true
    patch:
      summary: Update a funding programme stage status
      operationId: patch-v2-funding-programme-stage-ID-status
      tags:
        - Stages
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StageRead'
  '/v2/admin/forms/submissions/{UUID}/status':
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      patch:
        summary: Update the status of a form submission
        operationId: patch-v2-admin-forms-submissions-UUID-status
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/FormSubmissionRead'
        parameters:
          - in: body
            name: body
            schema:
              type: object
              properties:
                feedback:
                  type: string
                feedback_fields:
                  type: array
                  items:
                    type: string
                status:
                  type: string
                  enum:
                    - started
                    - awaiting-approval
                    - approved
                    - requires-more-information
                    - rejected

  /v2/forms/submissions:
    post:
      summary: Create a form submission
      operationId: post-v2-forms-submissions
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/FormSubmissionRead'
      tags:
        - Forms
      description: ''
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormSubmissionCreate'
  '/v2/forms/submissions/{UUID}':
    get:
        summary: Get a form submission
        tags:
          - Form Submissions
        parameters:
        - type: string
          name: UUID
          in: path
          required: true
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/FormSubmissionRead'
        operationId: get-v2-forms-submissions-UUID
    patch:
      summary: Update a form submission
      operationId: patch-v2-forms-submissions-UUID
      tags:
        - Forms
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormSubmissionRead'
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FormSubmissionUpdate'
    delete:
      summary: "Deletes a specific form submission"
      operationId: delete-v2-form-submission-UUID
      tags:
        - Forms
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  '/v2/forms/submissions/{UUID}/next-stage':
    post:
      operationId: post-v2-forms-submissions-UUID-next-stage
      summary: Create the next stage form submission
      tags:
        - Form Submissions
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormSubmissionRead'
  '/v2/forms/submissions/submit/{UUID}':
    put:
      summary: Submit a form submission for approval
      tags:
        - Form Submissions
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FormSubmissionRead'
      operationId: get-v2-submit-forms-submissions-UUID
  '/site/{ID}/tree_species/bulk':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Bulk create site and site submission tree species
      tags:
        - Sites
      operationId: post-site-ID-tree_species-bulk
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SiteRead'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_submission_id:
                type: integer
              tree_species:
                type: array
                items:
                  $ref: '#/definitions/TreeSpeciesWithAmountBulkSubmit'
  '/programme/{ID}/tree_species/bulk':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Bulk create programme tree species
      tags:
        - Sites
      operationId: post-programme-ID-tree_species-bulk
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProgrammeRead'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              tree_species:
                type: array
                items:
                  $ref: '#/definitions/TreeSpeciesBulkSubmit'
  '/programme/submission/{ID}/tree_species/bulk':
    parameters:
      - type: string
        name: ID
        in: path
        required: true
    post:
      summary: Bulk create submission tree species
      tags:
        - Sites
      operationId: post-submission-ID-tree_species-bulk
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SubmissionRead'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              tree_species:
                type: array
                items:
                  $ref: '#/definitions/TreeSpeciesWithAmountBulkSubmit'
  /v2/my/banners:
    patch:
      summary: Update the authenticated user's banners
      operationId: patch-v2-my-banners
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserRead'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              banners:
                type: array
                items:
                  type: object
      tags:
        - V2 Users
  '/v2/admin/forms/applications':
    get:
      summary: Get all applications
      operationId: get-v2-admin-applications
      description: "Available Filters : funding_programme_uuid,current_stage, current_submission_status (Current stage is the stage uuid) Available Sorts : created_at, updated_at, organisation_name, funding_programme_name, organisation_name (Prefix with a '-' for descending"
      tags:
        - V2 Application
      parameters:
        - name: search
          type: string
          in: query
          description: 'search term to use on the collection'
        - name: filter
          type: string
          in: query
          description: 'multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3'
        - name: sort
          type: string
          in: query
          description: 'sorting can be applied, default is ascending or use - for descending. For Example ?sort=-last_name'
        - name: per_page
          type: integer
          in: query
          description: 'number of results (per page) to return'
        - name: page
          type: integer
          in: query
          description: 'page number you want results from'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationLiteRead'
              links:
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                $ref: '#/definitions/V2PaginationMeta'
  '/v2/admin/forms/applications/{UUID}':
    get:
      summary: Get a specific application
      operationId: get-v2-admin-applications-UUID
      tags:
        - V2 Application
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationRead'
    delete:
      summary: "Deletes a specific and it's dependant form submissions"
      operationId: delete-v2-admin-applications-UUID
      tags:
        - V2 Application
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
  '/v2/admin/forms/applications/{UUID}/export':
    get:
      summary: Export CSV document of applications belonging to a funding programme
      description: The UUID provided is the Funding Programme ID that the applications are for
      operationId: get-v2-admin-forms-applications-UUID-export
      tags:
        - Export
        - V2 Application
      produces:
        - text/plain
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/v2/my/applications':
    get:
      summary: Get the current users applications
      operationId: get-v2-my-applications
      tags:
        - V2 Application
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationLiteRead'
              links:
                type: object
                $ref: '#/definitions/V2PaginationLinks'
              meta:
                type: object
                $ref: '#/definitions/V2PaginationMeta'
  '/v2/applications/{UUID}':
    get:
      summary: Get a specific application
      operationId: get-v2-applications-UUID
      tags:
        - V2 Application
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationRead'
  '/v2/applications/{UUID}/export':
    get:
      summary: Export CSV document of an application
      operationId: get-v2-applications-UUID-export
      tags:
        - Export
        - V2 Application
      produces:
        - text/plain
      parameters:
        - type: string
          name: UUID
          in: path
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: file
  '/register-user':
    post:
      summary: Create a user
      tags:
        - Register
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterUserCreate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/definitions/RegisterUserRead'
        '400':
          description: Bad request
        '500':
          description: 'Internal server error'
